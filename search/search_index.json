{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MyCivitas","text":""},{"location":"#welcome-to-mycivitas","title":"Welcome to MyCivitas","text":"<p>Overview</p> <p>MyCivitas is a user-friendly, cost-effective asset management platform designed specifically for smaller, budget-conscious municipalities.  Leveraging GIS technology, it seamlessly caters to both the strategic planning and day-to-day operational requirements of asset management.</p> <p>Users can view, locate and query their asset inventory data. MyCivitas calculates and reports Asset Management related information including the condition, replacement cost, life expectancy, probability of failure, consequence of failure and associated risk related to assets.  MyCivitas also includes a Computerized Maintenance Management Software (CMMS) module to create and manage work orders.</p> <p>MyCivitas uses QGIS, a free open-source desktop GIS and is integrated with Mergin Maps for recording information on site using a mobile app.</p>"},{"location":"#where-to-start","title":"Where to start","text":"<p>We recommend the following three-step approach: </p> <p></p> <p>LandInfo developed a three-step methodology to support smaller communities in the development of their asset management plans:</p>"},{"location":"#step-1-asset-register","title":"Step 1: Asset Register","text":"<p>Assets are captured in MyCivitas\u2019s predefined data structure using QGIS.  Typically, data is obtained from existing electronic data, hard-copy maps and reports. The remaining unknown assets are recorded through field surveys using Mergin Maps, an open-source mobile application.</p> <p>Once the data is captured, MyCivitas is used to generate reports on the condition, life expectancy, replacement cost, etc. of assets. The goal is to answer the following asset management questions:</p> <ul> <li> <p>What do we own?</p> </li> <li> <p>Where is it?</p> </li> <li> <p>What is the condition?</p> </li> <li> <p>What is the remaining life?</p> </li> <li> <p>What is the replacement value?</p> </li> </ul>"},{"location":"#step-2-asset-prioritization","title":"Step 2: Asset Prioritization","text":"<p>The second phase is prioritizing assets based on risk. This phase is intended to identify critical assets. The probability of failure and consequence of failure values are collected for all assets. The goal is to answer the following Asset Management questions: </p> <ul> <li> <p>What assets are the high priority?</p> </li> <li> <p>What assets need to be replaced first?</p> </li> </ul>"},{"location":"#step-3-capital-and-operational-strategies","title":"Step 3: Capital and Operational Strategies","text":"<p>Focusing on the high-priority assets identified in Step 2, the next step is to develop capital and operational strategies. A primary focus is to implement operational procedures to extend the life of assets and risk mitigation.</p> <p>MyCivitas automatically calculates renewal costs as well as the anticipated maintenance costs and annual averaged infrastructure demand requirements.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We would love to collaborate with you! But first, please read our contributor guidelines which describe how to report issues, plan and contribute feature additions etc.</p>"},{"location":"#code-of-conduct","title":"Code of conduct","text":"<p>Our community in this project is aligned with our Code of Conduct - please be sure to read and abide by that document in all interactions with our community.</p>"},{"location":"#diversity-statement","title":"Diversity statement","text":"<p>This project welcomes and encourages participation by everyone.</p> <p>No matter how you identify yourself or how others perceive you: we welcome you. We welcome contributions from everyone as long as they interact constructively with our community.</p> <p>While much of the work for our project is technical in nature, we value and encourage contributions from those with expertise in other areas, and welcome them into our community.</p>"},{"location":"#releases","title":"Releases","text":"<p>GitHub releases page Releases page</p> Project Badges"},{"location":"#contributor-license-agreement-cla","title":"Contributor License Agreement (CLA)","text":"<p>Contributions to this project will be subject to our Contributor License Agreement</p>"},{"location":"#license","title":"License","text":"<p>This project is open source, and published under the AGPL-3. You can read our license to find out what rights this license bestows on users and contributors.</p> <p>License</p> <p></p>"},{"location":"#disclaimer","title":"Disclaimer","text":"The software provided by this project is provided 'as is'. All information provided within the platform should be independently verified before using as the basis for action. The contributors and developers of this platform take no responsibility for any loss of revenue, life, physical harm or any other adverse outcome that may occur as a result of the use of this platform."},{"location":"about/","title":"MyCivitas","text":""},{"location":"about/#about","title":"About","text":"<p>MyCivitas is an affordable, user-friendly asset management platform for small communities. MyCivitas is an all-inclusive, easy-to-use platform that lets you record and manage your assets in one powerful information system.</p>"},{"location":"about/#license","title":"License","text":"<p>Published under AGPL-3. See the full license text.</p>"},{"location":"about/#contributors","title":"Contributors","text":"Contributor GitHub Handle Tim Sutton timlinux Jeremy Prior Jeremy-Prior Ketan Bamniya ketankartoza Juanique Voogt voogt Andrevdb Andrevdb Edvandenberg edvandenberg Eli Volschenk elivolsch"},{"location":"about/#project-fundersbackers","title":"Project funders/backers","text":"<p>This project was conceptualized and initially funded by LandInfoTech. LandInfo Technologies is an independent consulting firm providing asset management consulting services to public and private sector clients since 1995. Our primary goal is to address the unique asset management needs of Canada's smaller communities utilizing geographical information systems. We advocate open source and are a major shareholder of MyCivitas, an open-source asset management application designed for smaller municipalities.</p> <p></p> <p>Another fine project contributed to by: Kartoza.com </p>"},{"location":"about/code-of-conduct/","title":"MyCivitas","text":""},{"location":"about/code-of-conduct/#contributor-covenant-code-of-conduct","title":"Contributor covenant code of conduct","text":""},{"location":"about/code-of-conduct/#our-pledge","title":"Our pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"about/code-of-conduct/#our-standards","title":"Our standards","text":"<p>Examples of behaviour that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behaviour by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or   advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"about/code-of-conduct/#our-responsibilities","title":"Our responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behaviour and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behaviour.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"about/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"about/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behaviour may be reported by contacting the project team. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"about/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p>"},{"location":"about/contributing/","title":"MyCivitas","text":""},{"location":"about/contributing/#contributing-to-mycivitas","title":"Contributing to MyCivitas","text":"<p>First off, thanks for taking the time to contribute! \ud83c\udf89 \ud83d\ude18 \u2728</p> <p>The following is a set of guidelines for contributing to this project. These are mostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request.</p>"},{"location":"about/contributing/#reporting-bugs","title":"Reporting bugs","text":"<p>Bugs are tracked as GitHub issues. Search the list and try reproduce on your local machine with a clean profile before you create an issue. When you create an issue, please provide the following information by filling in the template.</p> <p>Explain the problem and include additional details to help maintainers reproduce the problem:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the problem.</li> <li>Describe the exact steps which reproduce the problem in as many details   as possible. Don't just say what you did, but explain how you did it. For   example, if you moved the cursor to the end of a line, explain if you used a   mouse or a keyboard.</li> <li>Provide specific examples to demonstrate the steps. Include links to   files or GitHub projects, or copy/paste-able snippets, which you use in those   examples. If you're providing snippets on the issue, use Markdown code blocks.</li> <li>Describe the behaviour you observed after following the steps and point   out what exactly is the problem with that behaviour.</li> <li>Explain which behaviour you expected to see instead and why.</li> <li>Include screenshots and animated GIFs which show you following the   described steps and clearly demonstrate the problem.</li> </ul>"},{"location":"about/contributing/#suggesting-enhancements","title":"Suggesting enhancements","text":"<p>In case you want to suggest an enhancement, please follow this guideline to help maintainers and the community understand your suggestion. Before creating suggestions, please check the issue list if there's already a request.</p> <p>Create an issue and provide the following information:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the   suggestion.</li> <li>Provide a step-by-step description of the suggested enhancement in as   many details as possible.</li> <li>Provide specific examples to demonstrate the steps. Include   copy/paste-able snippets which you use in those examples, as Markdown code   blocks.</li> <li>Include screenshots and animated GIFs which helps demonstrate the steps   or point out the part of a project which the suggestion is related to.</li> <li>Explain why this enhancement would be useful to most users.</li> <li>List some other text editors or applications where this enhancement   exists.</li> </ul>"},{"location":"about/contributing/#first-code-contribution","title":"First code contribution","text":"<p>Unsure where to begin contributing? You can start by looking through these <code>document</code>, <code>good first issue</code> and <code>help wanted</code> issues:</p> <ul> <li>document issues: issues that should be reviewed or improved.</li> <li>good first issues: issues which should only require a few lines of code,   and a test or two.</li> <li>help wanted issues: issues which should be a bit more involved than   beginner issues.</li> </ul>"},{"location":"about/contributing/#pull-requests","title":"Pull requests","text":""},{"location":"about/contributing/#development-workflow","title":"Development workflow","text":"<ul> <li>Set up your development environment</li> <li>Make change from the right branch</li> <li>Be sure the code passes tests</li> <li>Make a pull request</li> </ul>"},{"location":"about/contributing/#development-environment","title":"Development environment","text":"<ul> <li>Prepare your machine and its packages installed.</li> <li>Checkout our repository</li> <li>Follow README.md instructions to install dependencies</li> </ul>"},{"location":"about/contributing/#make-changes","title":"Make changes","text":""},{"location":"about/contributing/#checkout-a-branch","title":"Checkout a branch","text":"<ul> <li>master: PR Base branch.</li> <li>production: latest release branch with distribution files. Never make a PR on this.</li> <li>gh-pages: API docs, examples and demo</li> </ul>"},{"location":"about/contributing/#check-code-style","title":"Check code style","text":"<p>Run the pylance extension and make sure all the tests pass.</p>"},{"location":"about/contributing/#test","title":"Test","text":"<p>Run <code>TODO</code> and verify all the tests pass. If you are adding new commands or features, they must include tests. If you are changing functionality, update the tests if you need to.</p>"},{"location":"about/contributing/#commit","title":"Commit","text":"<p>Follow our commit message conventions.</p>"},{"location":"about/contributing/#yes-pull-request","title":"Yes! Pull request","text":"<p>Make your pull request, then describe your changes.</p>"},{"location":"about/contributing/#title","title":"Title","text":"<p>Follow other PR title formats below.</p> <pre><code>    &lt;Type&gt;: Short Description (fix #111)\n    &lt;Type&gt;: Short Description (fix #123, #111, #122)\n    &lt;Type&gt;: Short Description (ref #111)\n</code></pre> <ul> <li>capitalize the first letter of the Type</li> <li>use present tense: 'change' not 'changed' or 'changes'</li> </ul>"},{"location":"about/contributing/#description","title":"Description","text":"<p>If it has related issues, add links to the issues(like <code>#123</code>) in the description. Fill in the Pull Request Template by checking your case.</p>"},{"location":"about/contributing/#code-of-conduct","title":"Code of conduct","text":"<p>This project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behaviour to tim@kartoza.com.</p> <p>This guide is based on atom contributing guide, CocoaPods and ESLint</p>"},{"location":"about/disclaimer/","title":"MyCivitas","text":""},{"location":"about/disclaimer/#disclaimer","title":"Disclaimer","text":"<p>The software provided by this project is provided 'as is'. All information provided within the platform should be independently verified before using as the basis for action. The contributors and developers of this platform take no responsibility for any loss of revenue, life, physical harm or any other adverse outcome that may occur as a result of the use of this platform.</p>"},{"location":"about/license/","title":"License","text":""},{"location":"about/license/#gnu-affero-general-public-license","title":"GNU Affero General Public License","text":"<p>Version 3, 19 November 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;</p> <p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p>"},{"location":"about/license/#preamble","title":"Preamble","text":"<p>The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.</p> <p>A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.</p> <p>The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.</p> <p>An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p>"},{"location":"about/license/#terms-and-conditions","title":"TERMS AND CONDITIONS","text":""},{"location":"about/license/#0-definitions","title":"0. Definitions","text":"<p>\u201cThis License\u201d refers to version 3 of the GNU Affero General Public License.</p> <p>\u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\u201cThe Program\u201d refers to any copyrightable work licensed under this License.  Each licensee is addressed as \u201cyou\u201d.  \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations.</p> <p>To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work.</p> <p>A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program.</p> <p>To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p>"},{"location":"about/license/#1-source-code","title":"1. Source Code","text":"<p>The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it.  \u201cObject code\u201d means any non-source form of a work.</p> <p>A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p>"},{"location":"about/license/#2-basic-permissions","title":"2. Basic Permissions","text":"<p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p>"},{"location":"about/license/#3-protecting-users-legal-rights-from-anti-circumvention-law","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law","text":"<p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p>"},{"location":"about/license/#4-conveying-verbatim-copies","title":"4. Conveying Verbatim Copies","text":"<p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p>"},{"location":"about/license/#5-conveying-modified-source-versions","title":"5. Conveying Modified Source Versions","text":"<p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <ul> <li>a) The work must carry prominent notices stating that you modified it, and giving a relevant date.</li> <li>b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d.</li> <li>c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy.  This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged.  This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.</li> <li>d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.</li> </ul> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p>"},{"location":"about/license/#6-conveying-non-source-forms","title":"6. Conveying Non-Source Forms","text":"<p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <ul> <li>a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.</li> <li>b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.</li> <li>c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source.  This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.</li> <li>d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge.  You need not require recipients to copy the Corresponding Source along with the object code.  If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source.  Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.</li> <li>e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.</li> </ul> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p>"},{"location":"about/license/#7-additional-terms","title":"7. Additional Terms","text":"<p>\u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <ul> <li>a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or</li> <li>b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or</li> <li>c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or</li> <li>d) Limiting the use for publicity purposes of names of licensors or authors of the material; or</li> <li>e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or</li> <li>f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.</li> </ul> <p>All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p>"},{"location":"about/license/#8-termination","title":"8. Termination","text":"<p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p>"},{"location":"about/license/#9-acceptance-not-required-for-having-copies","title":"9. Acceptance Not Required for Having Copies","text":"<p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p>"},{"location":"about/license/#10-automatic-licensing-of-downstream-recipients","title":"10. Automatic Licensing of Downstream Recipients","text":"<p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p>"},{"location":"about/license/#11-patents","title":"11. Patents","text":"<p>A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \u201ccontributor version\u201d.</p> <p>A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p>"},{"location":"about/license/#12-no-surrender-of-others-freedom","title":"12. No Surrender of Others' Freedom","text":"<p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p>"},{"location":"about/license/#13-remote-network-interaction-use-with-the-gnu-general-public-license","title":"13. Remote Network Interaction; Use with the GNU General Public License","text":"<p>Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.</p> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.</p>"},{"location":"about/license/#14-revised-versions-of-this-license","title":"14. Revised Versions of this License","text":"<p>The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p>"},{"location":"about/license/#15-disclaimer-of-warranty","title":"15. Disclaimer of Warranty","text":"<p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>"},{"location":"about/license/#16-limitation-of-liability","title":"16. Limitation of Liability","text":"<p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>"},{"location":"about/license/#17-interpretation-of-sections-15-and-16","title":"17. Interpretation of Sections 15 and 16","text":"<p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"about/license/#how-to-apply-these-terms-to-your-new-programs","title":"How to Apply These Terms to Your New Programs","text":"<p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \u201ccopyright\u201d line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a \u201cSource\u201d link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see &lt;http://www.gnu.org/licenses/&gt;.</p>"},{"location":"administrator/","title":"MyCivitas","text":""},{"location":"administrator/#for-administrators","title":"For administrators","text":"<p>This is the homepage for all administrator related documentation.</p> <p>The content is divided into two sections:</p> <ul> <li>The user guide, which describes common workflows for system administrators in a tutorial format.</li> <li>The user manual, which describes each page of the admin user interface and what the various options on that page do.</li> </ul>"},{"location":"administrator/guide/","title":"MyCivitas","text":""},{"location":"administrator/guide/#administrator-guide","title":"Administrator guide","text":"<p>Welcome to the MyCivitas administrator guide. In this section of the documentation, we aim to show administrators common workflows for managing the platform effectively. Here is a brief overview of the content provided here:</p> <ul> <li> <p>Accessing the Administration Site: This section contains a quick description of how administrators can access the administration site of the MyCivitas platform.</p> </li> <li> <p>Managing Users: This section describes how administrators can manage users ( i.e. their details, their permissions, etc.) on the MyCivitas platform.</p> </li> <li> <p>Managing Organisations: This section describes how administrators can manage organisations (i.e. members, data, invites, etc ) on the MyCivitas platform.</p> </li> </ul>"},{"location":"administrator/guide/access-admin-site/","title":"MyCivitas","text":""},{"location":"administrator/guide/access-admin-site/#accessing-mycivitas-administration","title":"Accessing MyCivitas Administration","text":"<p>As a super user of <code>MyCivitas</code>, you have access to the administrative features that allow you to manage various aspects of the platform. Follow the steps below to access the administration panel.</p>"},{"location":"administrator/guide/access-admin-site/#login-to-mycivitas","title":"Login to MyCivitas","text":"<p>Visit the MyCivitas website and navigate to the login page. Enter your superuser credentials (username and password) in the 1\ufe0f\u20e3 provided fields. Click on 2\ufe0f\u20e3 the <code>Sign In</code> button to proceed.</p> <p></p>"},{"location":"administrator/guide/access-admin-site/#accessing-the-administration-panel","title":"Accessing the Administration Panel","text":"<p>Once you have successfully logged in as a super user, you can access the administration panel:</p> <p>After logging in, you will be directed to the community page of MyCivitas. Click on the 1\ufe0f\u20e3 profile menu dropdown available at the top-right corner of the page to reveal additional options. From the dropdown menu, select the 2\ufe0f\u20e3 <code>Admin</code> to access the administration page.</p>"},{"location":"administrator/guide/access-admin-site/#exploring-the-administration-panel","title":"Exploring the Administration Panel","text":"<p>Upon accessing the administration panel, you will encounter various features and options for managing MyCivitas. Here's a brief overview:</p> <p>1\ufe0f\u20e3 Dashboard: The landing page of the administration panel displays a summary of recent actions and important information.</p> <p>2\ufe0f\u20e3 Navigation Bar: Located at the top of the page, the navigation bar provides quick access to essential functions such as viewing the site, changing passwords, and logging out.</p>"},{"location":"administrator/guide/access-admin-site/#navigation-bar-links","title":"Navigation bar links","text":""},{"location":"administrator/guide/access-admin-site/#view-site","title":"View Site","text":"<p>Clicking this link redirects you to the main MyCivitas website.</p> <p></p>"},{"location":"administrator/guide/access-admin-site/#change-password","title":"Change Password","text":"<p>This link allows you to update your super user password following the specified criteria.</p> <p></p>"},{"location":"administrator/guide/access-admin-site/#log-out","title":"Log Out","text":"<p>Logging out ends your current session and redirects you to the logout page. You'll need to log in again to access the administration panel. Click on the 1\ufe0f\u20e3 <code>Log in again</code> button to log in.</p> <p></p>"},{"location":"administrator/guide/access-admin-site/#whats-next","title":"What's Next?","text":"<p>Now that you have gained access to the administration panel, you can proceed with managing various aspects of MyCivitas, including:</p> <p>Managing Users, Organisations and other tables. Click here for detailed information on managing the table's data.</p>"},{"location":"administrator/guide/manage-organisation/","title":"MyCivitas","text":""},{"location":"administrator/guide/manage-organisation/#managing-organisations","title":"Managing Organisations","text":"<p>This documentation guides administrators through managing organisations on the MyCivitas platform. Management of organisations includes (but is not limited to) adding/removing members from organisations, managing organisation data, and inviting the users to the organisation.</p>"},{"location":"administrator/guide/manage-organisation/#where-to-manage-organisations","title":"Where to Manage Organisations?","text":"<p>After you have logged into the administration site, scroll down on the landing page until you see 1\ufe0f\u20e3 the ORGANISATIONS section. In this section you will see the 2\ufe0f\u20e3 organisation link, click on this link to manage organisations.</p> <p></p>"},{"location":"administrator/guide/manage-organisation/#organisations","title":"Organisations","text":"<p>If you click on the <code>Organisations</code> link on the landing page, you will be redirected to a page that has 1\ufe0f\u20e3 a list of the platform's organisation and their respective owners.</p> <p></p>"},{"location":"administrator/guide/manage-organisation/#add-organisations","title":"Add Organisation(s)","text":"<p>If you would like to add another organisation, you can click on 1\ufe0f\u20e3 the <code>ADD ORGANISATION</code> button.</p> <p></p> <p>When you click on the <code>ADD ORGANISATION</code> button, you will be redirected to the <code>Add Organisation</code> page. You can then specify the details of the new organisation. These main details you need to include are:</p> <ul> <li> <p><code>Name</code>: This will be the name of the new organisation. If you do not provide the name, it will default to Keep the same name with the community.</p> </li> <li> <p><code>Description</code>: Add the description of the organisation in this field.</p> </li> <li> <p><code>Owner</code>: You can choose the owner of the new organisation from the dropdown menu. If there are no owners listed, click on the 1\ufe0f\u20e3 <code>Plus</code> icon, to create a new owner.</p> <p></p> <p>Upon clicking the plus icon, the add owner popup will open fill in the details in the fields and click on the 1\ufe0f\u20e3 <code>Save</code> button to save the owner.</p> <p></p> </li> <li> <p><code>Community</code>: Choose the community from the dropdown.</p> </li> <li> <p><code>Created at</code>: You can choose the specific date and time for this field by entering the date and time in the respective fields or by using the calendar and clock to select the date and time.</p> <p> </p> </li> </ul>"},{"location":"administrator/guide/manage-organisation/#user-organisation-add-user-to-the-organisation","title":"User Organisation (Add user to the organisation)","text":"<p>You can add the existing users to the organisation by selecting the user from the 1\ufe0f\u20e3 user dropdown, if the user is not registered on the site you can add the user by clicking on the <code>plus</code> icon. Upon clicking the plus icon, the add user popup will open fill in the details in the fields and click on the <code>Save</code> button to save the user. You can select the user role from the 2\ufe0f\u20e3 user role dropdown, if the user role is not available in the dropdown you can add the user role by clicking on the <code>plus</code> icon. Upon clicking the plus icon, the add user role popup will open fill in the details in the fields and click on the <code>Save</code> button to save the user role. If you want to add more users to the organisation click on the 3\ufe0f\u20e3 <code>Add another User organisation</code> link.</p> <p></p> <p>Upon clicking on the link the new row will be added to this section.</p> <p></p>"},{"location":"administrator/guide/manage-organisation/#user-organisation-invitations-invite-users-to-join-an-organisation","title":"User Organisation Invitations (Invite users to join an organisation)","text":"<p>1\ufe0f\u20e3 The <code>UUID</code> field is filled by default. To invite the user to the organisation enter the email address of the user in the 2\ufe0f\u20e3 email field and select the user role from the 2\ufe0f\u20e3 user role dropdown, if the user role is not available in the dropdown you can add the user role by clicking on the <code>plus</code> icon. Upon clicking the plus icon, the add user role popup will open fill in the details in the fields and click on the <code>Save</code> button to save the user role. If you want to send more user invites, click on the 3\ufe0f\u20e3 <code>Add another User organisation invitation</code> link.</p> <p></p> <p>Upon clicking on the link the new row will be added to this section.</p> <p></p> <p>Once you have provided the details for your organisation you have three options to move forward:</p> <p></p> <ul> <li><code>Save and add another</code>: Which will allow you to save the current organisation and move forward with adding a new one.</li> <li><code>Save and continue editing</code>: Which will allow you to save the current organisation and then edit the current organisation.</li> <li> <p><code>SAVE</code>: Allows you to save and then redirects you back to the <code>Organisation</code> page and displays a success message.</p> <p></p> </li> </ul>"},{"location":"administrator/guide/manage-organisation/#managing-organisations_1","title":"Managing Organisation(s)","text":"<p>To make changes to an existing organisation, you can click on 1\ufe0f\u20e3 the name of the organisation.</p> <p></p> <p>This will redirect you to a <code>Change Organisation</code> page where you can edit the information previously used to populate the invitation, or you can delete the invitation.</p> <p></p> <p>Once you have made your necessary changes you can click on 1\ufe0f\u20e3 any one of the three save options or click on 2\ufe0f\u20e3 the <code>Delete</code> button to remove the Organisation invitation.</p> <p></p> <p>The three save options will have different actions:</p> <ul> <li><code>Save and add another</code>: Which will allow you to save the current organisation invitation and move forward with adding a new one.</li> <li><code>Save and continue editing</code>: Which will allow you to save the current organisation invitation and then edit the current invitation.</li> <li> <p><code>SAVE</code>: Allows you to save and then redirects you back to the <code>Organisations</code> page and displays a success message.</p> <p></p> </li> </ul> <p>If you click on the <code>Delete</code> button, you will be redirected to a page where you can either 1\ufe0f\u20e3 confirm deleting the invitation or 2\ufe0f\u20e3 cancel and return to the list of invitations.</p> <p></p> <p>If you confirm the deletion of the invitation then you will be redirected back to the <code>Organisations</code> page and shown a success message.</p> <p></p>"},{"location":"administrator/guide/manage-organisation/#removing-organisations","title":"Removing Organisation(s)","text":"<p>If you would like to delete an organisation, or multiple organisations, you can do so from the <code>Organisations</code> page. First, you select the organisation(s) you would like to remove by checking 1\ufe0f\u20e3 the boxes next to the organisation(s) name(s).</p> <p>Note: Clicking on the topmost checkbox will select all of the organisations.</p> <p></p> <p>Then you click on the 1\ufe0f\u20e3 <code>Action</code> dropdown menu, select 2\ufe0f\u20e3 the <code>Delete selected Organisations</code> option, and then click on 3\ufe0f\u20e3 the <code>Go</code> button.</p> <p></p> <p>This will redirect you to a page where you can either 1\ufe0f\u20e3 confirm deleting the organisation(s) or 2\ufe0f\u20e3 cancel and return to the list of organisations. Depending on the number of organisations you are deleting the Summary and Objects will automatically be updated.</p> <p></p> <p>If you confirm the deletion of the organisation(s) then you will be redirected back to the <code>Organisations</code> page and shown a success message.</p> <p></p>"},{"location":"administrator/guide/manage-user/","title":"MyCivitas","text":""},{"location":"administrator/guide/manage-user/#managing-users-in-mycivitas","title":"Managing Users in MyCivitas","text":"<p>This guide outlines the steps for administrators to manage users on the MyCivitas platform. Administrators can perform various actions such as viewing, filtering, searching, adding, editing, and deleting users.</p>"},{"location":"administrator/guide/manage-user/#where-to-manage-users","title":"Where to Manage Users","text":"<p>After you have logged into the administration site, you should be able to see 1\ufe0f\u20e3 the AUTHENTICATION AND AUTHORIZATION section. In this section, you will see 2\ufe0f\u20e3 the links to the <code>Users</code> management page.</p> <p></p>"},{"location":"administrator/guide/manage-user/#users-page","title":"Users Page","text":"<p>Once you click on the <code>Users</code> link, you will be redirected to a page that has 1\ufe0f\u20e3 a list of all the registered users on the MyCivitas platform.</p> <p></p>"},{"location":"administrator/guide/manage-user/#filter-list-of-users","title":"Filter List of Users","text":"<p>On the right-hand side of the <code>Users</code> page, you will see a panel titled <code>FILTER</code>.</p> <p></p> <p>The various options in the <code>FILTER</code> panel allow you to change the number of users you can see in the list. You can also set more than one filter at a time to ensure you only see the specific users you would like to see (the filters applied in this example resulted in only 9 of the 13 total users being displayed).</p> <p>Available filters are as follows:</p> <pre><code>- By staff status\n- By superuser status\n- By active\n</code></pre> <p></p> <p>If you would like to reset the list to a point where no filters have been applied, you can simply choose the <code>All</code> option available in the filters.</p> <p></p>"},{"location":"administrator/guide/manage-user/#search-for-users","title":"Search for User(s)","text":"<p>If you do not see the user you would like to see in the list after filtering (or due to the length of the list), you can utilise the <code>Search</code> functionality. To do so, click on the 1\ufe0f\u20e3 <code>Search</code> field and type a few characters (i.e. letters in the user's name), and then click on 2\ufe0f\u20e3 the <code>Search</code> button to filter the list of users. Ensure that you have cleared any of the filters you have applied otherwise your search will only search through the filtered list of users and not all of the users.</p> <p></p> <p>If the representative you are looking for is still not there, then you will need to follow the steps below to add them.</p>"},{"location":"administrator/guide/manage-user/#add-users","title":"Add User(s)","text":"<p>If you would like to add a user, you can click on 1\ufe0f\u20e3 the <code>ADD USER</code> button.</p> <p></p> <p>When you click on the <code>ADD USER</code> button, you will be redirected to the <code>Add User</code> page. You should fill in 1\ufe0f\u20e3 the user's email address and 2\ufe0f\u20e3 the password to secure the account. you must then re-enter the password in 3\ufe0f\u20e3 the <code>Password confirmation</code> field.</p> <p></p> <p>Once you have filled in the necessary information, you have three options to proceed forward:</p> <p></p> <ul> <li><code>Save and add another</code>: This will allow you to save the current user and move forward with adding a new one.</li> <li><code>Save and continue editing</code>: This will allow you to save the current user and proceed with editing the current user.</li> <li> <p><code>SAVE</code>: Allows you to save the user and then redirects you to the <code>Change User</code> page where you need to specify 1\ufe0f\u20e3 the user's first name, last name, phone number, extension and title and choose the avatar for the user.</p> <p></p> <p>You can also set 2\ufe0f\u20e3 the user's permissions if you know what their user role will be.</p> <p></p> <p>Once you have filled in the necessary information, scroll down and then you can click on 1\ufe0f\u20e3 any one of the three save options or click on 2\ufe0f\u20e3 the <code>Delete</code> button to remove the user.</p> <p></p> <p>The three save options will have different actions:</p> </li> <li> <p><code>Save and add another</code>: This will allow you to save the current user and then redirect you back to the <code>Add User</code> page.</p> </li> <li><code>Save and continue editing</code>: This will allow you to save the current user and continue with editing the current user.</li> <li> <p><code>SAVE</code>: Allows you to save the user and then redirects you back to the <code>Users</code> page and displays a success message.</p> <p></p> <p>If you click on the <code>Delete</code> button, you will be redirected to a page where you can either 1\ufe0f\u20e3 confirm deleting the user or 2\ufe0f\u20e3 cancel and return to the list of users.</p> <p></p> <p>If you confirm the deletion of the invitation then you will be redirected back to the <code>Users</code> page and shown a success message.</p> <p></p> </li> </ul>"},{"location":"administrator/guide/manage-user/#delete-users","title":"Delete User(s)","text":"<p>If you would like to delete a user or multiple users, you can do so from the <code>Users</code> page. First, you select the user(s) you would like to remove by checking 1\ufe0f\u20e3 the boxes next to the user(s) name(s).</p> <p>Note: Clicking on the topmost checkbox will select all of the users.</p> <p></p> <p>Then you click on the 1\ufe0f\u20e3 <code>Action</code> dropdown menu, select 2\ufe0f\u20e3 the <code>Delete selected user</code> option, and then click on 3\ufe0f\u20e3 the <code>Go</code> button.</p> <p></p> <p>This will redirect you to a page where you can either 1\ufe0f\u20e3 confirm deleting the user(s) or 2\ufe0f\u20e3 cancel and return to the list of users. Depending on the number of users you are deleting the Summary and Objects will automatically be updated.</p> <p></p> <p>If you confirm the deletion of the user(s) then you will be redirected back to the <code>User</code> page and shown a success message.</p> <p></p>"},{"location":"administrator/manual/","title":"MyCivitas","text":""},{"location":"administrator/manual/#administrator-manual","title":"Administrator manual","text":"<ul> <li>Admin Panel: This page describes the adding, updating, and deleting of records in the admin panel and also describes the <code>User</code> and <code>Organisation</code> tables.</li> </ul>"},{"location":"administrator/manual/admin/","title":"MyCivitas","text":""},{"location":"administrator/manual/admin/#user-manual-django-administration-site","title":"User Manual Django Administration Site","text":"<p>This site is the administration site for the MyCivitas platform, and only specific superusers can access it.</p> <p></p>"},{"location":"administrator/manual/admin/#important-tables-to-manage","title":"Important Tables to Manage","text":"<p>There are a variety of tables to manage on the Django Admin site but the two key ones are the Users Table and the Organisation Table.</p>"},{"location":"administrator/manual/admin/#users-table","title":"Users Table","text":"<p>The Django admin user table is a central component within the Django admin interface, providing a comprehensive view of user-related data for the application. This table serves as a management hub for user accounts, offering essential information about each user in a tabular format.</p> <p></p> <ol> <li> <p>User: Click on the <code>Users</code> to view the users table.</p> <p></p> <ol> <li>Search Functionality: The User Table provides a powerful search functionality allowing the administrators to search user records based on various criteria. To perform a search, locate the search bar at the top left corner of the User Table. The administrators can search by:<ul> <li>Email Address</li> <li>First Name</li> <li>Last Name</li> </ul> </li> </ol> <p>Simply enter the relevant information into the search bar and hit enter to display matching records.</p> <ol> <li> <p>Action Dropdown: Administrators can perform batch actions on selected user records using the <code>Action Dropdown</code>. To select multiple records, use the checkbox in front of each user record. Once selected, open the Action Dropdown and choose the desired action, e.g. Delete selected users. Confirm the action and the selected records will be processed accordingly. This feature streamlines bulk user management tasks, enhancing efficiency for administrators.</p> </li> <li> <p>User Name: Clicking on the username of a user opens a detailed view of that user's record. A new page will open, providing comprehensive information about the selected user.</p> <p></p> <ol> <li> <p>Username: The administrator can see the user's email address here.</p> </li> <li> <p>Change Password Form The administrator can click on <code>this form</code> link, to change the user password. When the administrator clicks on this link opens the change password page.</p> <p></p> <ol> <li> <p>Password: The administrators are required to provide the new password here.</p> </li> <li> <p>Password (again): The administrators are required to re-enter the new password for confirmation. This field ensures accuracy and helps prevent input errors.</p> </li> <li> <p>Change Password Button: After entering the new password and confirmation, users can click the <code>CHANGE PASSWORD</code> button to submit the form. Upon successful submission, the system will update the user's password, enhancing the security of their account.</p> </li> </ol> </li> <li> <p>Personal Information Section: The Personal Info section of the User Table contains essential information about each user, facilitating easy identification and management.</p> <ul> <li> <p>First Name: Displays the first name of the user. Administrators can view and edit this field to update user details.</p> </li> <li> <p>Last Name: Displays the last name of the user. Administrators can view and edit this field to update user details.</p> </li> <li> <p>Title: Displays the user's title, such as <code>Mr.</code>, providing a formal address. Administrators can view and edit this field to update user details.</p> </li> <li> <p>Phone and Ext: Displays the user's phone number along with an extension field side by side. Administrators can view and edit these fields to update user contact details.</p> </li> <li> <p>Avatar: Displays the user's profile picture or avatar. Administrators can view and edit this field to update the user's profile image.</p> </li> </ul> </li> <li> <p>Permission Section: The <code>Permission Section</code> allows administrators to assign specific permissions to users, tailoring their access and roles within the application.</p> <ul> <li> <p>Active: Checkbox indicating whether the user account is active or inactive. Administrators can toggle this checkbox to control user account status.</p> </li> <li> <p>Staff Status: Checkbox granting staff status to the user. Staff status provides additional privileges within the application. Administrators can manage staff status by checking or unchecking the checkbox.</p> </li> <li> <p>Superuser Status: Checkbox granting superuser status to the user. Superusers have elevated privileges, often including full control over the application. Administrators can assign or remove superuser status by checking or unchecking the checkbox.</p> </li> </ul> </li> <li> <p>History Button: The History button allows administrators to access the history log of the user, providing insights into changes and activities related to the user account.</p> </li> </ol> <p></p> <ol> <li> <p>Group (+): Administrators can create user groups by clicking on the plus icon. Upon clicking the plus icon, a popup window will open, allowing administrators to define the group's details. In the popup, administrators can specify:</p> <p></p> <ul> <li>Group Name: A unique identifier for the group.</li> <li>Permissions: Assign specific permissions to the group, determining the access levels for members.</li> </ul> <p>After providing the necessary information, administrators can save the group.</p> </li> <li> <p>Permissions: Available permissions for the group. Administrators can choose permissions from the list and assign them to the user.</p> </li> <li> <p>Arrow: Using these arrows, administrators can add or remove the permissions to the user.</p> </li> <li> <p>Choose All: The button to choose all of the permissions and assign them to the user.</p> </li> <li> <p>Remove All: The button to choose all of the permissions and remove them from the user.</p> </li> </ol> <p></p> <ol> <li> <p>Last Login Date: The administrators can view or update the last login date of the user.</p> </li> <li> <p>Date Joined: The administrators can view or update the joining date of the user.</p> </li> <li> <p>Save: Save the current record and then get redirected to the Django Admin Table/record list.</p> </li> <li> <p>Save and add another: Save the current record and then be redirected to a new page to add a new record.</p> </li> <li> <p>Save and continue editing: Save the current record while still showing the current record.</p> </li> <li> <p>Delete button: Delete the currently opened record. It will take administrators to a confirmation page.</p> </li> </ol> </li> <li> <p>Adding a New User: The administrators can create a new user by clicking on the <code>add user</code> button, when the administrators click on this button a new page opens for adding the user record.</p> <p></p> <ol> <li> <p>Email Address: Administrators should enter a unique email address for the new user.</p> </li> <li> <p>Password: Administrators should create a strong password for the user.</p> </li> <li> <p>Confirm Password: Re-enter the same password in the confirmation field to verify accuracy.</p> </li> <li> <p>Save: Save the current record and then get redirected to the Django Admin Table/record list.</p> <p></p> </li> <li> <p>Save and add another: Save the current record and then be redirected to a new page to add a new record.</p> </li> <li> <p>Save and continue editing: Save the current record while still showing the current record.</p> </li> </ol> </li> <li> <p>Filters: The administrators can filter the user table using the available filters on the right side of the tables. </p> <p></p> </li> </ol> </li> </ol>"},{"location":"administrator/manual/admin/#organisation-table","title":"Organisation Table","text":"<ol> <li> <p>Action Dropdown: The <code>Action Dropdown</code> offers the option to perform batch actions on selected organisation records.</p> <ul> <li>Delete selected Organisation: Permanently remove the selected organisation records.</li> </ul> </li> <li> <p>Username: Clicking on the username in the Organisation Table redirects administrators to a detailed page containing specific user organisation data.</p> <p></p> <ol> <li> <p>Organisation Name: Select a user from the dropdown menu to associate the organisation with a specific user. Include an option to keep it empty, if the administrators did not provide the organisation name it automatically fills with the community name.</p> </li> <li> <p>Description: Provide a field where the administrator can input a description for the organisation.</p> </li> <li> <p>Owner Dropdown: Include a dropdown menu for selecting the owner of the organisation. Populate the dropdown with a list of owners for selection.</p> <ul> <li>Edit Icon: Allows administrators to edit owner details.</li> <li>Plus Icon: Opens a form for adding a new owner.</li> </ul> </li> <li> <p>Community Dropdown: Implement a dropdown menu for selecting the community associated with the organisation. Populate the dropdown with a list of available communities.</p> </li> <li> <p>Created at Date: Display the date and time when the organisation was created. This field is automatically populated on the creation of an organisation.</p> </li> <li> <p>Subscription: This shows the name of the subscription associated with the organisation.</p> </li> <li> <p>History Button: The History button allows administrators to access the history log of the organisation, providing insights into changes and activities related to the organisation.</p> </li> </ol> <p></p> <ol> <li> <p>User Organisation Section: Administrators can efficiently manage users within the organisation using the User Organisation section.</p> <ul> <li> <p>User Email Dropdown: Administrators can select the email of the user to be added to the organisation from the dropdown list.</p> </li> <li> <p>Role: Choose the role or position the user will have within the organisation, such as <code>Manager</code> or <code>Operations Admin</code>.</p> </li> <li> <p>Delete Checkbox: Mark the checkbox next to a user to delete them from the organisation.</p> </li> <li> <p>Add Another User Organisation: Click on this link to add another user to the organisation, facilitating a streamlined user management process.</p> </li> </ul> </li> <li> <p>User Organisation Invitations Section: Administrators can invite users to join the organisation using the User Organisation Invitations section.</p> <ul> <li> <p>UUID: Automatically generated UUID (Universally Unique Identifier) for each user invitation.</p> </li> <li> <p>Email Address: Administrators need to provide the email of the user to be invited to the organisation.</p> </li> <li> <p>Role: Choose the role the user will have within the organisation upon accepting the invitation.</p> </li> <li> <p>Delete Checkbox: Mark the checkbox next to an invitation to delete it.</p> </li> <li> <p>Add Another User Organisation Invitation: Click on this link to add another user invitation, simplifying the process of inviting multiple users to join the organisation.</p> </li> </ul> </li> <li> <p>Save: Save the current record and then get redirected to the Django Admin Table/record list.</p> </li> <li> <p>Save and add another: Save the current record and then be redirected to a new page to add a new record.</p> </li> <li> <p>Save and continue editing: Save the current record while still showing the current record.</p> </li> <li> <p>Delete button: Delete the currently opened record. It will take administrators to a confirmation page.</p> </li> </ol> </li> <li> <p>Adding Organisation: The <code>ADD ORGANISATION</code> button allows administrators to create new observation records directly from the <code>Observation Table</code>. To add a new organisation to the system, the administrators can follow the steps outlined below.</p> <p></p> <ol> <li> <p>Organisation Name: Select a user from the dropdown menu to associate the organisation with a specific user. Optionally, administrators can leave it empty if the organisation is not directly associated with a user.</p> </li> <li> <p>Description: Provide a brief description of the organisation in the designated field.</p> </li> <li> <p>Owner Dropdown: Choose the owner of the organisation from the dropdown menu. Use the <code>Edit</code> icon to modify existing owner details or the <code>Plus</code> icon to add a new owner.</p> </li> <li> <p>Community Dropdown: Select the community associated with the organisation from the dropdown menu. Populate the dropdown with a list of available communities.</p> </li> <li> <p>Created At: This field is automatically populated on the creation of an organisation.</p> </li> </ol> <p></p> <ol> <li> <p>User Organisation Section: In this section, administrators can efficiently manage users within the organisation.</p> <ul> <li> <p>User Email Dropdown: Select the email of the user to be added to the organisation from the dropdown list. Use the <code>Edit</code> icon to modify existing email details or the <code>Plus</code> icon to add a new email.</p> </li> <li> <p>Role: Choose the role or position the user will have within the organisation. Use the <code>Edit</code> icon to modify existing role details or the <code>Plus</code> icon to add a new role.</p> </li> <li> <p>Delete Checkbox: Mark the checkbox next to a user to delete them from the organisation.</p> </li> <li> <p>Add Another User Organisation: Click on this link to add another user to the organisation.</p> </li> </ul> </li> <li> <p>User Organisation Invitations Section: Administrators can invite users to join the organisation.</p> <ul> <li> <p>UUID: Automatically generated UUID for each user invitation.</p> </li> <li> <p>Email Address: Provide the email of the user to be invited to the organisation.</p> </li> <li> <p>Role: Choose the role the user will have within the organisation. Use the <code>Edit</code> icon to modify existing role details or the <code>Plus</code> icon to add a new role.</p> </li> <li> <p>Delete Checkbox: Mark the checkbox next to an invitation to delete it.</p> </li> <li> <p>Add Another User Organisation Invitation: Click on this link to add another user invitation.</p> </li> </ul> </li> <li> <p>Save: Save the current record and then get redirected to the Django Admin Table/record list.</p> </li> <li> <p>Save and add another: Save the current record and then be redirected to a new page to add a new record.</p> </li> <li> <p>Save and continue editing: Save the current record while still showing the current record.</p> </li> </ol> </li> </ol>"},{"location":"administrator/manual/admin/#general-table-management","title":"General Table Management","text":"<p>All of the tables on the administration site follow similar structures and as such can be managed in similar ways.</p>"},{"location":"administrator/manual/admin/#managing-tables-on-the-administration-site","title":"Managing Tables on the Administration Site","text":"<p>All tables on the administration site adhere to a consistent structure, facilitating uniform management procedures. The following points outline the general approach for adding, editing, and deleting records across various tables:</p>"},{"location":"administrator/manual/admin/#adding-tables","title":"Adding Tables","text":"<ul> <li>To add a new record, locate the <code>Add &lt;table name&gt;</code> button typically available on the respective table page.</li> <li>Click on the button to initiate the creation of a new entry.</li> <li>Follow the prompts or fill in the required fields in the form that opens.</li> <li>Submit the form to add the new record to the table.</li> </ul>"},{"location":"administrator/manual/admin/#editing-tables","title":"Editing Tables","text":"<ul> <li>For editing existing records, clicking on the name of the record will open a change record page, allowing the administrators to view or edit the record.</li> <li>Update the necessary information or fields as required.</li> <li>Save the changes to update the record.</li> </ul>"},{"location":"administrator/manual/admin/#delete-record-of-tables","title":"Delete Record of Tables","text":"<p>To delete a record, administrators can follow these steps using the action dropdown:</p> <p>Select Record: - Checkmark the checkbox available in front of the specific record that needs deletion.</p> <p>Open Action Dropdown: - Locate the action dropdown, often positioned near the table header or the selected record.</p> <p>Choose Delete Option: - Open the dropdown menu and select the <code>Delete</code> option.</p> <p>Initiate Deletion: - After selecting the delete option, click the <code>Go</code> button to initiate the deletion process.</p> <p>To delete a record, administrators can utilise the following steps from the change page:</p> <p>Navigate to the Change Page: - Access the change page of the specific record that needs deletion by clicking on the record name.</p> <p>Locate Delete Button: On the change page, find the <code>Delete</code> button.</p> <p>Initiate Deletion: - Click the <code>Delete</code> button to initiate the deletion process for the record.</p>"},{"location":"administrator/manual/admin/#usage-tips","title":"Usage Tips","text":"<ul> <li>Ensure accuracy when adding or editing records by double-checking the entered information.</li> <li>Exercise caution when deleting records, as this action is typically irreversible.</li> <li>Follow any specific guidelines or procedures outlined in the system documentation for individual tables.</li> </ul>"},{"location":"administrator/manual/admin/#additional-notes","title":"Additional Notes","text":"<ul> <li>Consistent table structures streamline the process of managing data on the administration site.</li> <li>Users familiar with one table's management procedures can easily adapt to others with similar structures.</li> <li>Refer to the system documentation for any unique features or requirements specific to individual tables.</li> <li>By adhering to these general guidelines, administrators can effectively manage tables on the administration site, maintaining data accuracy and system efficiency.</li> </ul>"},{"location":"developer/","title":"MyCivitas","text":""},{"location":"developer/#for-developers","title":"For Developers","text":"<p>This is the homepage for all developer related documentation.</p> <ul> <li>The developer guide, which describes common workflows for developers in a tutorial format. This includes instructions on how to set up your developer environment, check out the code, run it locally etc.</li> <li>The developer manual, which describes each python module and its classes, functions etc. This section is autogenerated.</li> <li>The api guide, which describes common workflows for using the restful API.</li> <li>The api manual, which describes each API endpoint and its parameters, return values etc. This section is autogenerated.</li> </ul>"},{"location":"developer/api/","title":"MyCivitas","text":""},{"location":"developer/api/#api-documentation","title":"API documentation","text":"<p>This is the homepage for all API related documentation.</p> <ul> <li>The api guide, which describes common workflows for using the restful API.</li> <li>The api manual, which describes each API endpoint and its parameters, return values etc. This section is autogenerated.</li> </ul>"},{"location":"developer/api/guide/","title":"MyCivitas","text":""},{"location":"developer/api/guide/#api-guide","title":"API guide","text":""},{"location":"developer/api/manual/","title":"MyCivitas","text":""},{"location":"developer/api/manual/#api-manual","title":"API manual","text":""},{"location":"developer/documentation/","title":"MyCivitas","text":""},{"location":"developer/documentation/#documentation","title":"Documentation","text":"<p>In this section of the documentation, we explain how to work with the documentation. The content is organised as follows:</p> <ul> <li>Overview: Here we outline the documentation system and the standard workflows needed.</li> </ul>"},{"location":"developer/documentation/easy-workflow/","title":"MyCivitas","text":""},{"location":"developer/documentation/easy-workflow/#documentation-overview","title":"Documentation Overview","text":"<p>This document describes the easiest workflow for editing documentation.</p> <p>Requirements:</p> <ol> <li>You need to have a GitHub account and be logged in to your account</li> <li>You need to have been given access to the repo by the repo manager</li> </ol>"},{"location":"developer/documentation/easy-workflow/#general-workflow","title":"General Workflow","text":"<ol> <li>Go to the repo for the documentation.</li> <li>Press the <code>.</code> key on your keyboard.</li> <li>Select a file under the src folder to edit</li> <li>Press Ctrl-S to save your work.</li> <li>Go to the Source Control tab to commit your work. </li> <li>Add a short, descriptive comment describing your changes.</li> <li>Press the <code>Commit and push</code> button.</li> <li>Wait a few minutes and your changes should be published live.</li> </ol>"},{"location":"developer/documentation/easy-workflow/#adding-a-new-page","title":"Adding a new page","text":"<p>Any new page you create needs to be also added to <code>mkdocs-base.yml</code> so that it gets 'built. If you wish to build a page but not have it in the menu system, you can give it a blank menu description e.g.</p> <pre><code># Pages to render but exclude from navigation\n- \"\": developer/guide/templates/pull-request-template.md \n</code></pre> <p>Conversely, to ensure it is shown in the menu, find the right place in the navigation tree and then insert it with a short descriptor. e.g.</p> <pre><code># Pages to render and include from navigation\n- \"My Menu Item\": developer/guide/my-page.md \n</code></pre>"},{"location":"developer/documentation/easy-workflow/#adding-images","title":"Adding images","text":"<p>You can easily upload images into the documentation sources and then add them to your document.</p> <ol> <li>Take an image using your favourite screenshot tool.</li> <li>Using your file manager, drag the file from your desktop into the image folder in the relevant part of the documentation you are working on.</li> <li><code>Shift+Drag</code> the image into your markdown document.</li> <li>Edit the image description (the part in square brackets)</li> </ol>"},{"location":"developer/documentation/easy-workflow/#adding-links","title":"Adding links","text":"<p>You can add a link to any text by doing the following:</p> <ol> <li>Copy the link from your web browser to your clipboard.</li> <li>Either   2.1 Past the link directly into the document sources.   2.2 or, write some words in square brackets and paste the link in round brackets after that, VSCode will create a markdown formatted link.</li> </ol> <p>This is a normal link https://mycivitas.ca/, this is a link.</p> <p>The above in markdown:</p> <pre><code>This is a normal link https://mycivitas.ca/, [this is a link](https://mycivitas.ca/).\n</code></pre>"},{"location":"developer/documentation/easy-workflow/#page-previews","title":"Page previews","text":"<p>You can easily preview the page you are working on by doing this:</p> <ol> <li>Press <code>Ctl-Shift-V</code> to open a preview of the page you are currently working on.</li> <li>Drag and drop the preview tab to the right side of the editing environment for a side-by-side view.</li> </ol>"},{"location":"developer/documentation/easy-workflow/#leaving-the-editor-viewer","title":"Leaving the editor viewer","text":"<p>How to leave the interactive editor.</p> <ol> <li>Click the <code>hamburger</code> menu and go to the repository.</li> <li>Wait a few moments and the <code>normal</code> GitHub page will load.</li> </ol>"},{"location":"developer/documentation/overview/","title":"MyCivitas","text":""},{"location":"developer/documentation/overview/#documentation-overview","title":"Documentation Overview","text":"<p>This section provides an overview of how the documentation system works.</p>"},{"location":"developer/documentation/overview/#background","title":"Background","text":"<p>Welcome to the instructions for those wishing to contribute to our documentation!</p> <p>Our documentation system is based on the popular mkdocs system. We encourage you to read the upstream documentation from mkdocs for the finer details of how mkdocs. In particular, read this page before you get to work. Mkdocs is not hard, but it may feel initially a little different if you are used to creating your documentation in word.</p> <p>We use mkdocs because it has some great and useful features. Most especially:</p> <ul> <li>The code and the documentation are versioned together. This means that for whatever version of the code we have in our production release, we can be sure the documentation matches that release. We can also look back at changes over time through the version history when needed.</li> <li>It can render beautiful static (not needing a backend server) websites with great features like search, styling, intuitive navigation etc.</li> <li>It can optionally render PDF documents from the same source markdown.</li> <li>An ecosystem of plugins and themes makes mkdocs really flexible and extensible.</li> </ul>"},{"location":"developer/documentation/overview/#some-terminology","title":"Some terminology","text":"<p>In our documentation, we have organised the information using a specific nomenclature:</p> <ul> <li>Guide: A guide is a multi-step workflow/tutorial that leads you through common activities.</li> <li>Manual: A collection of documents that describe each part of the project in a matter of fact way without presupposing any specific workflow is being undertaken.</li> </ul> <p>For each of the main topic areas (user, admin, developer, devops, api user) we provide guides and manuals as is appropriate.</p>"},{"location":"developer/documentation/overview/#organisation","title":"Organisation","text":"<p>The documentation is broadly organised in the following structure. This structure may change over time as sections are added/moved/removed:</p> <pre><code>src\n\u251c\u2500\u2500 about\n\u251c\u2500\u2500 administrator\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u251c\u2500\u2500 developer\n\u2502   \u251c\u2500\u2500 documentation\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u251c\u2500\u2500 devops\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u2514\u2500\u2500 user\n    \u251c\u2500\u2500 api\n    \u251c\u2500\u2500 guide\n    \u251c\u2500\u2500 manual\n    \u2514\u2500\u2500 quickstart\n</code></pre>"},{"location":"developer/documentation/overview/#file-naming-conventions","title":"File naming conventions","text":"<p>Please follow these conventions when writing your documentation:</p> <ol> <li>Write file names in all lowercase, with hyphens separating words (no spaces). e.g. <code>important-file.md</code> not <code>Important File.md</code> or other deviations.</li> <li>Place the image files in the <code>img</code> folder adjacent to your content.</li> <li>Do not abbreviate any words in file names - but try to use terse, descriptive names.</li> <li>Place your content in the appropriate place as outlined in the structure above.</li> <li>Each file should only have one level one heading e.g. <code># Page title</code>.</li> <li>Headings and subheadings should be written as a terse phrase starting with a capital letter and subsequent words in lowercase unless they are proper nouns. Do not place a colon after the heading.</li> <li>Use Unicode number markers to reference numbers in images e.g. 1\ufe0f\u20e3.</li> <li>Every heading / sub-heading should have a single line underneath it summarising the content that will follow. This sentence will be used in the help center in the application to give the user a reference point for the text that will follow. It also makes the help text more consistent and readable.</li> <li>For every section that images, the first image will be used as the thumbnail if the heading is referenced from the application.</li> </ol>"},{"location":"developer/documentation/overview/#contributing-to-the-documentation","title":"Contributing to the documentation","text":"<p> Note: The repo name in the images below is blurred out, you should work against the MyCivitas repository when following these notes.</p> <p>To start adding to the documentation navigate to the home page of the repository.</p> <p>Once on the repository home page, 1\ufe0f\u20e3 click on Fork</p> <p></p> <p>On the next page 1\ufe0f\u20e3 Make sure your github account is selected as the owner and 2\ufe0f\u20e3 make sure the \"Copy the <code>main</code> branch only\" option is ticked as you will only need the main branch. </p> <p>Once you have forked the repository, ensure that you are working in the main branch. </p> <p>Once you are in your fork of the repository, click on <code>.</code> on your keyboard. This will open a web editor where you can begin adding to, or editing, the documentation. </p> <p>Once the editor loads, you will be greeted by 1\ufe0f\u20e3 a preview of the project's README.txt. 2\ufe0f\u20e3 Click on the <code>docs</code> directory in the menu on the left, this will expand the directory. To confirm that you are working in the right branch 3\ufe0f\u20e3\ufe0f it will say <code>main</code> in the bottom left of the editor. </p> <p>Once you have expanded the <code>docs</code> directory, 1\ufe0f\u20e3 click on the <code>src</code> directory. All sub-directories within the <code>src</code> directory contain the files that become the documentation. Each sub-directory contains an <code>index.md</code> file that is required for the building of the documentation and static site. If you add a new sub-directory into any folder it must also contain a populated <code>index.md</code> file. </p> <p>Once you have chosen which section of documentation you would like to edit (e.g. user/guide/index.md), click on the file and it will open in the web editor. </p> <p>Once you have the file open, you can start adding to the documentation using Markdown syntax. If you need to add images to your documentation, add them to the relative <code>img</code> sub-directories following the naming conventions set out in the <code>naming-convention.README</code> within the <code>img</code> folders. </p> <p>When you have completed making additions to (or editing) the documentation, 1\ufe0f\u20e3 click on the source control tab then 2\ufe0f\u20e3 click on the <code>plus</code> symbol next to the changes you are finished with to stage them, 3\ufe0f\u20e3\ufe0f add a commit message that is associated with the work you have done, and the 4\ufe0f\u20e3 Click on <code>Commit &amp; Push</code> </p> <p>Once you have committed your changes, 1\ufe0f\u20e3 Click on the burger menu and then 2\ufe0f\u20e3 click on <code>Go To Repository</code> </p> <p>Your fork of the repository will be opened in a new tab within your browser, navigate to that tab. Once there 1\ufe0f\u20e3 ensure you are on the <code>main</code>, you should see how many commits ahead of the upstream branch you are, then 2\ufe0f\u20e3 click on <code>Contribute</code>-&gt; <code>Open pull request</code>. </p> <p>On the next screen, 1\ufe0f\u20e3 give your pull request a meaningful title, 2\ufe0f\u20e3 give additional details regarding changes made in the larger text box, then 3\ufe0f\u20e3\ufe0f click on <code>Create pull request</code>. Also ensure you are creating a pull request to the upstream <code>main</code> branch from your <code>main</code> branch. </p> <p>Once your pull request is opened you need to wait for it to be merged before you can open a new one.</p>"},{"location":"developer/documentation/overview/#creating-new-files","title":"Creating new files","text":""},{"location":"developer/documentation/overview/#page-metadata","title":"Page metadata","text":"<p>Whenever you create a new file, you should add the standard header to the top of the file:</p> <pre><code>---\ntitle: MyCivitas\nsummary: MyCivitas is a cost-effective and user-friendly asset management platform designed specifically for small communities. This comprehensive solution offers an all-inclusive and easy-to-use platform, empowering users to efficiently record and manage their assets within a powerful information system. With MyCivitas, communities can streamline their asset management processes, ensuring a seamless and effective approach to organising and overseeing their valuable resources.\n    - Jeremy Prior\n    - Ketan Bamniya\ndate: 01-02-2024\nsome_url: https://github.com/landinfotech/mycivitas\ncopyright: Copyright 2024, LandInfoTech\ncontact: support@civitas.ca\nlicense: This program is free software; you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.\n---\n</code></pre> <p>The summary can be updated to include your name for documents you contribute to.</p> <p>The context_id is used to create a unique permalink to this document, and is optional. See further down in this document for more details.</p>"},{"location":"developer/documentation/overview/#navigation","title":"Navigation","text":"<p>All pages need to be added to the 'Nav' section of the <code>mkdocs-base.yml</code> file. This will ensure that it is available in the menus and that mkdocs renders without errors. For example, if you wish to add a new page to the User Guide area, in Nav you would add a line like this:</p> <p><code>- \"Navigating the map\": users/guide/map-navigation.md</code></p> <p>Sometimes you may not wish to have the new page displayed in the menu system (this can be useful when, for example, it is accessed via a link in another page. In these cases, leave the menu entry part blank e.g.</p> <p><code>- \"\": users/guide/map-navigation.md</code></p> <p>Mkdocs will still generate the page but it will not be added to the menu.</p>"},{"location":"developer/documentation/overview/#technical-notes","title":"Technical notes","text":""},{"location":"developer/documentation/overview/#working-locally","title":"Working locally","text":"<p>If you want to work with the documentation locally (i.e. directly on your PC), you need to follow this general process:</p> <ol> <li>Install python</li> <li>Install pip</li> <li>Install virtualenv (<code>pip install virtualenv</code>)</li> <li>Make the docs folder your working directory (<code>cd docs</code>)</li> <li>Create the virtual env in the docs folder (<code>python -m venv env</code>)</li> <li>Activate the venv (<code>source env/bin/activate</code>)</li> <li>Install the python modules listed in docs/requirements.txt (<code>pip install -r requirements.txt</code>)</li> <li>If you are on Linux or macOS, open the docs directory in a shell and run <code>build-docs-html.sh</code></li> <li>In the docs directory, run <code>mkdocs serve</code></li> <li>Open your web browser at https://localhost:8000 to view the rendered docs.</li> </ol> <p>Note that <code>mkdocs serve</code> will dynamically re-render the docs any time you make a change. The process above is illustrated in the diagram below:</p> <p></p>"},{"location":"developer/documentation/overview/#hooks","title":"Hooks","text":"<p>We implement two hooks (plugins for mkdocs that are invoked during the docs rendering process).</p> <ul> <li>uuid_redirects_hook.py - this is used to handle page redirects from a uuid - see below for more details</li> <li>python_manual_hook.py - this is used to auto-generate the reference guide for the python modules, classes and functions that make up the code base for this project.</li> </ul>"},{"location":"developer/documentation/overview/#permalinks-for-user-and-admin-docs","title":"Permalinks for user and admin docs","text":"<p>If you are a developer, you should be aware of the workflow for creating user and administrator documentation for each page you create.</p> <p>Every page should have a help link on it that leads to the appropriate manual page. The workflow for doing this is:</p> <ol> <li>Generate a new page UUID using the provided python utility e.g. <code>./create-uuid.py</code></li> <li>Create a new page in the appropriate manual section e.g. <code>docs/src/user/manual/login.md</code></li> <li>In the metadata section at the top of the page, add the context id e.g. <code>context_id: V4cVEFd2TmwYJVb5HvWRwa</code></li> <li>In your django view, set up your help button to point to the site url and your context id. e.g. <code>https://siteurl/V4cVEFd2TmwYJVb5HvWRwa</code></li> </ol> <p>Whenever the user visits the page using the UUID URL, they will be redirected to the correct page e.g. <code>https://siteurl/login/</code>. This system protects us from file renaming and reorganising on the site, and ensures that the help link will always remain valid.</p>"},{"location":"developer/documentation/overview/#generating-pdfs","title":"Generating PDFS","text":"<p>To generate PDFS, <code>cd</code> into <code>mycivitas/docs</code> and then run the <code>build-docs-pdf</code> in a local terminal</p>"},{"location":"developer/documentation/overview/#generating-static-site","title":"Generating Static Site","text":"<p>To generate HTML, <code>cd</code> into <code>mycivitas/docs</code> and then run the <code>build-docs-html</code> in a local terminal. You can then run <code>mkdocs serve</code> to generate the static site on your local host, if there is a port conflict you can specify the port using the <code>-a</code> flag e.g <code>mkdocs serve -a 127.0.0.1:8001</code>.</p>"},{"location":"developer/guide/","title":"MyCivitas","text":""},{"location":"developer/guide/#developer-guide","title":"Developer guide","text":"<p>In this section of the documentation, we aim to onboard developers onto the process of setting up a developer workstation, understanding the system architecture, contributing back to the project and so forth. Here is a brief overview of the content provided here:</p> <ul> <li>Prerequisites:  An overview of the software that needs to be installed before you can start.</li> <li>Architecture: - Here we outline the system architecture using ER Diagrams, Software Component Diagrams etc.</li> <li>Cloning: - In this section, we cover how to make a local working copy on your machine.</li> <li>Configuration: - This covers standard configuration tasks that need to be done once the site is brought online.</li> <li>Workflows: - Examples of typical workflows for adding features, fixing bugs etc.</li> </ul>"},{"location":"developer/guide/architecture/","title":"MyCivitas","text":""},{"location":"developer/guide/architecture/#system-architecture","title":"System architecture","text":"<p>In this section, we outline the system architecture using ER Diagrams, Software Component Diagrams etc. and key libraries / frameworks used in this project.</p>"},{"location":"developer/guide/architecture/#software-components-used","title":"Software components used","text":"<p>The following is a list, with brief descriptions, of the key components used in creating this platform. Please refer to their individual documentation for in-depth technical information.</p> Logo Name Notes Django Django makes it easier to build better web apps more quickly and with less code. Backbone JS Backbone.js gives structure to web applications by providing models with key-value binding and custom events, collections with a rich API of enumerable functions, views with declarative event handling, and connects it all to your existing API over a RESTful JSON interface. Docker Accelerate how you build, share, and run applications. Docker helps developers build, share, and run applications anywhere \u2014 without tedious environment configuration or management. Celery Celery is a simple, flexible, and reliable distributed system to process vast amounts of messages, while providing operations with the tools required to maintain such a system. It\u2019s a task queue with focus on real-time processing, while also supporting task scheduling. Celery Beat This extension enables you to store the periodic task schedule in your database. The periodic tasks can be managed from the Django Admin interface, where you can create, edit and delete periodic tasks and how often they should run. Django Rest Framework Django REST framework is a powerful and flexible toolkit for building Web APIs. MapLibre Open-source mapping libraries for web and mobile app developers. PostGIS PostGIS extends the capabilities of the PostgreSQL relational database by adding support storing, indexing and querying geographic data. PostgreSQL PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance."},{"location":"developer/guide/cloning/","title":"MyCivitas","text":""},{"location":"developer/guide/cloning/#checking-out-the-code","title":"Checking out the code","text":"<p>This section outlines the process of checking out the code for local development.</p> <p>Git Code check out https://github.com/landinfotech/mycivitas</p>"},{"location":"developer/guide/cloning/#getting-source-code","title":"\ud83d\udc69\u200d\ud83d\udcbb Getting source code","text":"<pre><code>git clone https://github.com/landinfotech/mycivitas.git\n</code></pre> <p>\ud83d\udcd2Which branch to use?: Note that we deploy our staging work from the <code>develop</code> branch and our production environment from the <code>main</code> branch. If you are planning on contributing improvements to the project, please submit them to the <code>develop</code> branch.</p> <p>You can use any IDE of your choice. Visual Studio Code is preferable as it has:</p> <ul> <li> <p>Versatile and Extensible: VS Code is a highly versatile and extensible IDE that supports a wide range of programming languages, making it suitable for various development tasks.</p> </li> <li> <p>Free and Open Source: Being open source and free to use, VS Code offers powerful features without any cost, making it accessible to developers of all backgrounds.</p> </li> <li> <p>Rich Ecosystem: It boasts a rich ecosystem of extensions and plugins that can be easily installed from the marketplace, enabling developers to customise and enhance their development environment based on their needs and preferences.</p> </li> <li> <p>Intelligent Code Editing: VS Code provides intelligent code editing features such as syntax highlighting, code completion, and code navigation, helping developers write code more efficiently and accurately.</p> </li> <li> <p>Integrated Terminal: It comes with an integrated terminal, allowing developers to run commands and scripts directly within the IDE without switching to external terminals.</p> </li> <li> <p>Built-in Git Integration: With built-in Git integration, developers can easily manage version control tasks, such as committing changes, branching, and merging, directly from within the IDE.</p> </li> <li> <p>Cross-Platform Support: VS Code is available for Windows, macOS, and Linux, ensuring a consistent development experience across different operating systems.</p> </li> </ul> <p>Overall, Visual Studio Code offers a compelling combination of features, performance, and extensibility, making it a preferred choice for many developers working in local development environments.</p>"},{"location":"developer/guide/configuration/","title":"MyCivitas","text":""},{"location":"developer/guide/configuration/#project-setup","title":"Project setup","text":""},{"location":"developer/guide/configuration/#clone-mycivitas-repository","title":"Clone MyCivitas repository","text":"<p>This will clone the MyCivitas repository to your machine </p><pre><code>git clone https://github.com/landinfotech/mycivitas.git\n</code></pre>"},{"location":"developer/guide/configuration/#set-up-the-project","title":"Set up the project","text":"<p>This will set up the MyCivitas project on your machine</p> <pre><code>cd mycivitas\ncd deployment\ncp docker-compose.override.template.yml docker-compose.override.yml\ncp sites-enabled/default.conf.template sites-enabled/default.conf\ncp .template.env .env\nmake up\n</code></pre> <p>Wait until everything is done.</p> <p>After everything is done, open up a web browser and go to http://127.0.0.1/ and the dashboard will open:</p> <p>By Default, we can use the admin credential:</p> <pre><code>username : admin@example.com\npassword : admin\n</code></pre>"},{"location":"developer/guide/configuration/#set-up-different-environment","title":"Set up different environment","text":"<p>To set up different environment, for example the Default credential, or the port of server, open deployment/.env. You can check the description below for each of variable.</p> <pre><code>COMPOSE_PROJECT_NAME=amlit\n\nDB_PORT=5432\nINITIAL_FIXTURES=True -&gt; Put true for django initial data.\n\n# Django env\nDATABASE_NAME=django -&gt; Default django database name\nDATABASE_USERNAME=docker -&gt; Default django database username\nDATABASE_PASSWORD=docker -&gt; Default django database password\nDATABASE_HOST=db -&gt; Default django database host\n\nDATABASE_CIVITAS_NAME=civitas -&gt; Default civitas database name\nDATABASE_CIVITAS_HOST=db -&gt; Default civitas database host\nDATABASE_CIVITAS_PORT=5432 -&gt; Default civitas database port\nDATABASE_CIVITAS_USERNAME=docker -&gt; Default civitas database username\nDATABASE_CIVITAS_PASSWORD=docker -&gt; Default civitas database password\n\n# Email where altersAfter you change the desired variable and do `make up`. It will rerun the project with new environment.\n should be sent. This will be used by let's encrypt and as the django admin email.\nADMIN_EMAIL=admin@example.com -&gt; Default admin username\nADMIN_PASSWORD=admin -&gt; Default admin password\n\n# Email settings\nEMAIL_HOST_USER=noreply@kartoza.com\nEMAIL_HOST_PASSWORD=docker\nEMAIL_HOST=smtp\nEMAIL_HOST_DOMAIN=kartoza.com\n\nHTTP_HOST=80\nHTTPS_HOST=443\n</code></pre> <p>After you change the desired variable and do <code>make up</code>. It will rerun the project with the new environment.</p>"},{"location":"developer/guide/prerequisites/","title":"MyCivitas","text":""},{"location":"developer/guide/prerequisites/#project-prerequisites","title":"Project Prerequisites","text":""},{"location":"developer/guide/prerequisites/#installation-of-docker","title":"Installation of Docker","text":"<p>Ensure that Docker is installed on the machine where the environment will be set up using Docker Compose. Follow the official Docker installation guide for your operating system to install Docker: Docker Installation Guide.</p>"},{"location":"developer/guide/prerequisites/#minimal-dependencies-outside-docker","title":"Minimal Dependencies Outside Docker","text":"<p>Since the environment is set up using Docker Compose, there are minimal dependencies outside Docker itself. Docker Compose will handle the setup and orchestration of containers, so there's no need for additional software or dependencies.</p>"},{"location":"developer/guide/prerequisites/#configuration-in-docker-compose","title":"Configuration in Docker Compose","text":"<p>Define the services and configurations needed for the environment in the docker-compose.yml file. Specify any required Docker images, volumes, networks, ports, environment variables, and other settings in the Docker Compose configuration.</p>"},{"location":"developer/guide/prerequisites/#sudo-rights-for-docker","title":"Sudo Rights for Docker","text":"<p>Ensure that the user running Docker commands has sudo rights to execute Docker commands without requiring a password. Granting sudo rights to Docker commands can be done by adding the user to the Docker group. However, it's essential to understand the security implications of this action.</p>"},{"location":"developer/guide/prerequisites/#testing-docker-setup","title":"Testing Docker Setup:","text":"<p>After installing Docker and configuring Docker Compose, test the setup by running docker-compose up command from the directory containing the docker-compose.yml file. Verify that the containers start up successfully, and the environment functions as expected.</p> <p>By following these points, you can ensure that Docker is installed, Docker Compose is configured, and the environment is set up smoothly within Docker containers.</p>"},{"location":"developer/guide/workflows/","title":"MyCivitas","text":""},{"location":"developer/guide/workflows/#developer-workflows","title":"Developer workflows","text":""},{"location":"developer/guide/workflows/#adding-a-feature","title":"Adding a feature","text":"<ol> <li> <p>Creating a GitHub Issue.</p> <p>Creating a GitHub issue for a new feature is the first step in proposing and discussing enhancements in a project. This developer guide provides a step-by-step process for creating an issue specifically for suggesting new features on GitHub.</p> </li> <li> <p>Wait for it to be added to a Sprint.</p> <ul> <li>Allow time for the new feature or issue to be scheduled and included in a sprint or development cycle.</li> </ul> </li> <li> <p>Functional Tests.</p> <ul> <li>Develop and execute functional tests to ensure that the newly added feature or code meets the specified requirements and functions as intended.</li> </ul> </li> <li> <p>Write End User Documentation.</p> <ul> <li>Create comprehensive documentation that provides end users with clear instructions and information on how to use the new feature or functionality.</li> </ul> </li> </ol>"},{"location":"developer/guide/workflows/#steps-to-create-an-issue","title":"Steps to create an issue","text":""},{"location":"developer/guide/workflows/#1-navigate-to-the-repository","title":"1. Navigate to the repository","text":"<ul> <li>Open a web browser and go to the GitHub repository where you want to create the issue.</li> </ul>"},{"location":"developer/guide/workflows/#2-access-the-issues-section","title":"2. Access the issues section","text":"<ul> <li>Click on the <code>Issues</code> tab in the repository's navigation bar.</li> </ul>"},{"location":"developer/guide/workflows/#3-start-a-new-issue","title":"3. Start a new issue","text":"<ul> <li>Click the <code>New Issue</code> button to create a new issue.</li> </ul>"},{"location":"developer/guide/workflows/#4-fill-in-the-title-and-description","title":"4. Fill in the title and description","text":"<ul> <li>Title: Provide a concise and descriptive title for the issue.</li> <li>Description: Clearly explain the details of the feature.</li> </ul>"},{"location":"developer/guide/workflows/#5-assignees","title":"5. Assignees","text":"<ul> <li>Optionally, assign the issue to one or more team members responsible for addressing it.</li> </ul>"},{"location":"developer/guide/workflows/#6-labels","title":"6. Labels","text":"<ul> <li>Apply relevant labels to categorise the issue (e.g., bug, enhancement, feature). This helps in organising and prioritising tasks.</li> </ul>"},{"location":"developer/guide/workflows/#7-add-project","title":"7. Add project","text":"<ul> <li>Associate the new issue with a project board if applicable.</li> <li>Projects help organise and track the progress of related tasks.</li> </ul>"},{"location":"developer/guide/workflows/#8-submit-the-issue","title":"8. Submit the issue","text":"<ul> <li>Click the <code>Submit new issue</code> button to create the issue.</li> </ul>"},{"location":"developer/guide/workflows/#9-interact-and-follow-up","title":"9. Interact and follow up","text":"<ul> <li>Engage in discussions with other contributors and maintainers in the issue's comment section.</li> <li>Provide additional information if requested and stay involved in the resolution process.</li> </ul>"},{"location":"developer/guide/workflows/#best-practices","title":"Best Practices","text":"<ol> <li> <p>Be Descriptive: Clearly articulate the feature to help others understand the context.</p> </li> <li> <p>Assign Appropriately: Assign the issue to the relevant team member.</p> </li> <li> <p>Label Categorisation: Apply appropriate labels for better issue categorisation.</p> </li> <li> <p>Stay Engaged: Follow up on the issue and participate in discussions to assist in its resolution.</p> </li> </ol>"},{"location":"developer/guide/workflows/#conclusion","title":"Conclusion","text":"<p>Creating a GitHub issue for a new feature is a fundamental aspect of collaborative development. By following this developer guide, you ensure that the feature requests are well-documented and effectively communicated. This process contributes to the overall enhancement and progress of the project, fostering a collaborative environment for developing and implementing exciting new features.</p>"},{"location":"developer/guide/workflows/#fixing-a-bug","title":"Fixing a Bug","text":"<ol> <li> <p>Creating a GitHub Issue.</p> <p>Initiating a GitHub issue for a bug is the initial step in identifying, discussing, and resolving issues in a project. This developer guide outlines the step-by-step process of creating a bug-related issue on GitHub.</p> </li> <li> <p>Wait for it to be added to a Sprint: Once the bug is identified and logged, wait for it to be added to a sprint by the development team. This ensures that the bug is prioritised and scheduled for resolution within the project timeline.</p> </li> <li> <p>Regression Test: Before implementing any fix, perform regression testing to ensure that the fix does not introduce new issues or impact existing functionalities adversely. This involves retesting the affected areas as well as related functionalities to verify the stability of the system.</p> </li> <li> <p>Implement Fix: Once the bug is assigned to a sprint and regression testing is completed successfully, proceed to implement the fix. Follow the guidelines provided by the development team and make the necessary updates to the documentation to resolve the identified issue effectively.</p> </li> </ol>"},{"location":"developer/guide/workflows/#steps-to-create-a-bug-fix-issue","title":"Steps to create a bug-fix issue","text":""},{"location":"developer/guide/workflows/#1-navigate-to-the-repository_1","title":"1. Navigate to the repository","text":"<ul> <li>Open a web browser and go to the GitHub repository where the bug is identified.</li> </ul>"},{"location":"developer/guide/workflows/#2-access-the-issues-section_1","title":"2. Access the issues section","text":"<ul> <li>Click on the <code>Issues</code> tab in the repository's navigation bar.</li> </ul>"},{"location":"developer/guide/workflows/#3-start-a-new-issue_1","title":"3. Start a new issue","text":"<ul> <li>Click the <code>New Issue</code> button to create a new issue specifically for the bug.</li> </ul>"},{"location":"developer/guide/workflows/#4-fill-in-the-title-and-description_1","title":"4. Fill in the Title and Description","text":"<ul> <li>Title: Provide a concise and descriptive title for the bug.</li> <li>Description: Clearly explain the details of the bug, including steps to reproduce if possible.</li> </ul>"},{"location":"developer/guide/workflows/#5-assignees_1","title":"5. Assignees","text":"<ul> <li>Optionally, assign the issue to one or more team members responsible for fixing the bug.</li> </ul>"},{"location":"developer/guide/workflows/#6-labels_1","title":"6. Labels","text":"<ul> <li>Apply relevant labels to categorise the issue (e.g., bug, enhancement, feature). This helps in organising and prioritising tasks.</li> </ul>"},{"location":"developer/guide/workflows/#7-add-project_1","title":"7. Add Project","text":"<ul> <li>Associate the new bug issue with a project board if applicable.</li> <li>Projects help organise and track the progress of related tasks.</li> </ul>"},{"location":"developer/guide/workflows/#8-submit-the-issue_1","title":"8. Submit the Issue","text":"<ul> <li>Click the <code>Submit new issue</code> button to create the bug-related issue.</li> </ul>"},{"location":"developer/guide/workflows/#9-interact-and-follow-up_1","title":"9. Interact and Follow Up","text":"<ul> <li>Engage in discussions with other contributors and maintainers in the issue's comment section.</li> <li>Provide additional information if requested and stay involved in the resolution process.</li> </ul>"},{"location":"developer/guide/workflows/#best-practices_1","title":"Best Practices","text":"<ol> <li> <p>Be Descriptive: Clearly articulate the bug to help others understand the context.</p> </li> <li> <p>Assign Appropriately: Assign the issue to the relevant team member responsible for fixing the bug.</p> </li> <li> <p>Label Categorisation: Apply appropriate labels for better issue categorisation.</p> </li> <li> <p>Stay Engaged: Follow up on the issue and participate in discussions to assist in its resolution.</p> </li> </ol>"},{"location":"developer/guide/workflows/#conclusion_1","title":"Conclusion","text":"<p>Creating a GitHub issue for fixing a bug is a crucial aspect of collaborative development. This developer guide ensures that bug reports are well-documented and effectively communicated, contributing to the overall stability and progress of the project.</p>"},{"location":"developer/guide/workflows/#make-pr-for-featurebug-fix","title":"Make PR for feature/bug fix","text":""},{"location":"developer/guide/workflows/#pull-request-template","title":"Pull request template","text":"<p>If it has related issues, add links to the issues(like <code>#123</code>) in the description. Fill in the Pull Request template by checking your case.</p>"},{"location":"developer/guide/workflows/#committing-to-project","title":"Committing to project","text":"<p>Follow the Commit message conventions for commit messages.</p>"},{"location":"developer/guide/templates/commit-message-convention/","title":"MyCivitas","text":""},{"location":"developer/guide/templates/commit-message-convention/#commit-message-convention","title":"Commit message convention","text":""},{"location":"developer/guide/templates/commit-message-convention/#why-use-a-convention","title":"Why Use a Convention?","text":"<ul> <li> <p>Clarity: Clearly explain each commit's purpose.</p> </li> <li> <p>Searchability: Easily find specific changes using commit messages.</p> </li> <li> <p>Release Notes: Simplify the creation of meaningful release notes.</p> </li> <li> <p>Collaboration: Improve teamwork with a standardised way to document changes.</p> </li> </ul>"},{"location":"developer/guide/templates/commit-message-convention/#steps-to-set-up-a-convention","title":"Steps to Set Up a Convention","text":""},{"location":"developer/guide/templates/commit-message-convention/#1-choose-a-format","title":"1. Choose a Format","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;message&gt;\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#commit-message-format","title":"Commit Message Format","text":"<ul> <li><code>&lt;type&gt;</code>: Purpose of the commit (e.g., <code>feat</code>, <code>fix</code>, <code>docs</code>).</li> <li><code>&lt;scope&gt;</code> (optional): Module/component affected by the commit.</li> <li><code>&lt;message&gt;</code>: Clear description of changes made.</li> </ul>"},{"location":"developer/guide/templates/commit-message-convention/#define-types","title":"Define Types","text":"<p>Common types include:</p> <ul> <li>feat: New feature or significant change.</li> <li>fix: Bug fix.</li> <li>docs: Documentation changes.</li> <li>style: Code style changes.</li> <li>refactor: Code refactoring.</li> <li>test: Test-related changes.</li> <li>chore: Routine tasks or maintenance.</li> </ul>"},{"location":"developer/guide/templates/commit-message-convention/#message-guidelines","title":"Message Guidelines","text":"<ul> <li>Use the imperative mood.</li> <li>Keep messages concise.</li> </ul>"},{"location":"developer/guide/templates/commit-message-convention/#examples","title":"Examples","text":""},{"location":"developer/guide/templates/commit-message-convention/#new-feature","title":"New Feature:","text":"<pre><code>feat(user-auth): add user registration\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#bug","title":"Bug:","text":"<pre><code>fix(api): resolve status issue\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#documentation","title":"Documentation:","text":"<pre><code>docs(readme): update installation\n</code></pre>"},{"location":"developer/guide/templates/pull-request-template/","title":"MyCivitas","text":""},{"location":"developer/guide/templates/pull-request-template/#pull-request-template","title":"Pull Request template","text":""},{"location":"developer/guide/templates/pull-request-template/#pull-request","title":"Pull Request","text":"<ul> <li>Push the code on GitHub.</li> <li>Click on the <code>Compare &amp; pull request</code> button to create a PR.</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#description","title":"Description","text":"<ul> <li>Describe the purpose and context of the changes made in this PR.</li> <li>Add screenshots that clarify the implemented feature, fix bugs etc.</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#related-issues","title":"Related Issues","text":"<ul> <li>Add links to related issues using the format #123.</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#checklist","title":"Checklist","text":"<ul> <li>[ ] I have tested the changes.</li> <li>[ ] I have updated the documentation if needed.</li> <li>[ ] My code follows the project's coding standards.</li> <li>[ ] I have added unit tests if applicable.</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#add-reviewer","title":"Add Reviewer","text":"<ul> <li>Assign one or more reviewers to the Pull Request.</li> <li>Reviewers provide feedback and approve changes before merging.</li> <li>Select individuals with expertise in the code affected by the PR.</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#assign-to-self","title":"Assign to Self","text":"<ul> <li>Assign the Pull Request to yourself to indicate that you are responsible for it.</li> <li>Taking ownership helps in tracking the progress of the PR.</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#add-label","title":"Add Label","text":"<ul> <li>Apply relevant labels to categorise the Pull Request.</li> <li>Labels can indicate the type of change (e.g., feature, bug fix).</li> </ul>"},{"location":"developer/guide/templates/pull-request-template/#add-project","title":"Add Project","text":"<ul> <li>Associate the Pull Request with a project board if applicable.</li> <li>Projects help organise and track the progress of related tasks.</li> <li>Choose status (e.g., in progress, ready for review).</li> </ul>"},{"location":"developer/manual/","title":"MyCivitas","text":""},{"location":"developer/manual/#developer-manual","title":"Developer Manual","text":"<p>Welcome to the MyCivitas developer manual. The manual is intended to function as a reference for the application. For narrative/workflow based tutorials, you may prefer to work through our developer guide. Here is a brief overview of the content provided here:</p> <ul> <li>Amlit</li> <li>Amlit Helpdesk</li> <li>Civitas</li> <li>Core</li> </ul>"},{"location":"developer/manual/amlit-helpdesk/","title":"MyCivitas","text":""},{"location":"developer/manual/amlit-helpdesk/#admin","title":"Admin","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin","title":"amlit_helpdesk.admin","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.FeatureTicket","title":"amlit_helpdesk.admin.FeatureTicket","text":"<p>               Bases: <code>Model</code></p> <p>One on one with ticket to have features data and additional data from civitas</p>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.FeatureTicket.recurring_ticket","title":"recurring_ticket  <code>property</code>","text":"<pre><code>recurring_ticket\n</code></pre> <p>Return recurring ticket for this feature ticket</p>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.FeatureTicket.assign_community_code","title":"assign_community_code","text":"<pre><code>assign_community_code()\n</code></pre> <p>assign community code to ticket</p> Source code in <code>django_project/amlit_helpdesk/models/feature_ticket.py</code> <pre><code>def assign_community_code(self):\n\"\"\" assign community code to ticket\"\"\"\nif not self.community_code:\nfor feature in self.features:\ntry:\ncode = FeatureBase.objects.get(id=feature).system.community.code\nself.community_code = code\nself.save()\nreturn\nexcept (FeatureBase.DoesNotExist, AttributeError):\npass\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.RecurringTicket","title":"amlit_helpdesk.admin.RecurringTicket","text":"<p>               Bases: <code>Model</code></p> <p>Recurring info for the ticket Contains all of tickets that already created And also create ticket automatically</p>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.RecurringTicket.calculate_next_date","title":"calculate_next_date","text":"<pre><code>calculate_next_date()\n</code></pre> <p>For calculating new date based on the recurring type</p> Source code in <code>django_project/amlit_helpdesk/models/recurring_ticket.py</code> <pre><code>def calculate_next_date(self):\n\"\"\" For calculating new date based on the recurring type \"\"\"\nnow = timezone.now()\nnext_date = self.last_ticket.created\ntry:\ntimedelta = self.RECURRING_TIMEDELTA[self.recurring_type]\nif self.recurring_type in self.RECURRING_FROM_START_DATE and self.last_ticket.start_date:\nnext_date = self.last_ticket.start_date + timedelta\nwhile next_date &lt; now:\nnext_date = next_date + timedelta\nreturn next_date\nexcept KeyError:\nrecurring_types_splitted = self.recurring_type.strip().split(' ')\nperiod = recurring_types_splitted[0]\ntry:\n# for weekly\nif period == 'Weekly':\nday = recurring_types_splitted[len(recurring_types_splitted) - 1].strip()\nidx_day = self.DAYS.index(day)\n# shift to next week day\ntimedelta = relativedelta(days=1)\nwhile next_date.weekday() != idx_day:\nnext_date = next_date + timedelta\n# shift to next week if it is the past\ntimedelta = relativedelta(weeks=1)\nwhile next_date &lt; now:\nnext_date = next_date + timedelta\nreturn next_date\n# For monthly\nelif period == 'Monthly':\nraw_day = recurring_types_splitted[len(recurring_types_splitted) - 1].strip('#')\nday = int(raw_day)\nif day &lt; 1:\nday = 1\nif day &gt; 31:\nday = 31\ntry:\nnext_date = next_date.replace(day=day)\nexcept ValueError:\nday = 30\nnext_date = next_date.replace(day=day)\n# shift to next week if it is the past\ntimedelta = relativedelta(months=1)\nwhile next_date &lt; now:\nnext_date = next_date + timedelta\n# we replace the correct one\nif next_date.day != int(raw_day):\nrecurring_types_splitted[len(recurring_types_splitted) - 1] = f'#{next_date.day}'\nself.recurring_type = ' '.join(recurring_types_splitted)\nself.save()\nreturn next_date\n# For yearly\nelif period == 'Yearly':\nday = recurring_types_splitted[len(recurring_types_splitted) - 2]\nmonth = self.MONTHS.index(recurring_types_splitted[len(recurring_types_splitted) - 1]) + 1\nnext_date = next_date.replace(day=int(day), month=int(month))\n# shift to next week if it is the past\ntimedelta = relativedelta(years=1)\nwhile next_date &lt; now:\nnext_date = next_date + timedelta\nreturn next_date\nexcept (KeyError, ValueError):\npass\nreturn None\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.RecurringTicket.check_recurring_event","title":"check_recurring_event","text":"<pre><code>check_recurring_event()\n</code></pre> <p>Recurring event for creating new ticket next_date is today</p> Source code in <code>django_project/amlit_helpdesk/models/recurring_ticket.py</code> <pre><code>def check_recurring_event(self):\n\"\"\" Recurring event for creating new ticket next_date is today\n    \"\"\"\nprint(f'Check recurring for {self.original_ticket.__str__()}')\nif self.active:\nif date.today() &gt;= self.next_date.date():\nif self.last_ticket.status not in self.STATUS_CAN_RECURRING_CREATED:\nself._create_new_ticket()\nelse:\nprint('Old ticket is still opened')\npass\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.RecurringTicket.create_recurring","title":"create_recurring  <code>staticmethod</code>","text":"<pre><code>create_recurring(\nticket: Ticket, recurring_type: str\n) -&gt; (typing.Optional[RecurringTicket], bool)\n</code></pre> <p>Create recurring for the ticket</p> Source code in <code>django_project/amlit_helpdesk/models/recurring_ticket.py</code> <pre><code>@staticmethod\ndef create_recurring(ticket: Ticket, recurring_type: str) -&gt; (typing.Optional[\"RecurringTicket\"], bool):\n\"\"\" Create recurring for the ticket\"\"\"\npref = SitePreferences.preferences()\nif ticket.queue.id in pref.recurred_queues_ids:\nreturn RecurringTicket.objects.get_or_create(\noriginal_ticket=ticket,\ndefaults={\n'recurring_type': recurring_type\n}\n)\nreturn None, False\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.RecurringTicket.setup_data","title":"setup_data","text":"<pre><code>setup_data(ticket: Ticket = None)\n</code></pre> <p>Setup recurring data</p> Source code in <code>django_project/amlit_helpdesk/models/recurring_ticket.py</code> <pre><code>def setup_data(self, ticket: Ticket = None):\n\"\"\" Setup recurring data \"\"\"\nchanged = False\nif not self.last_ticket:\nticket = self.original_ticket\nchanged = True\nif ticket and self.last_ticket != ticket:\nself.last_ticket = ticket\nself.tickets.add(self.last_ticket)\nchanged = True\n# check next date\nnext_date = self.calculate_next_date()\nif next_date and next_date != self.next_date:\nself.next_date = next_date\nchanged = True\nif changed:\nself.save()\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.SchedulerOrganisation","title":"amlit_helpdesk.admin.SchedulerOrganisation","text":"<p>               Bases: <code>Model</code></p> <p>Overridden scheduler for an organisation</p>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.SchedulerOrganisation.activate","title":"activate","text":"<pre><code>activate()\n</code></pre> <p>Activate the schedule</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def activate(self):\n\"\"\" Activate the schedule\"\"\"\nrecurring_ticket = self.recurring_ticket\nif recurring_ticket:\nrecurring_ticket.active = True\nrecurring_ticket.save()\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.SchedulerOrganisation.inactivate","title":"inactivate","text":"<pre><code>inactivate()\n</code></pre> <p>Inactivate the schedule</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def inactivate(self):\n\"\"\" Inactivate the schedule\"\"\"\nrecurring_ticket = self.recurring_ticket\nif recurring_ticket:\nrecurring_ticket.active = False\nrecurring_ticket.save()\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.SchedulerOrganisation.update","title":"update","text":"<pre><code>update(data, user: User)\n</code></pre> <p>Update the scheduler based on data TODO: LIT  We need to fix it to reuse function to create ticket, feature ticket and recurring ticket</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def update(self, data, user: User):\n\"\"\"\n    Update the scheduler based on data\n    TODO: LIT\n     We need to fix it to reuse function to create ticket, feature ticket and recurring ticket\n    \"\"\"\nfrom amlit_helpdesk.forms.ticket import AmlitTicketForm\nfrom amlit_helpdesk.views.ticket.update import update_ticket_data\ntype_obj = self.feature_type_combination_obj\nif not type_obj:\nreturn\npreference = SitePreferences.load()\ndata['queue'] = preference.recurred_queues.first().id\nfeatures = FeatureBase.objects.filter(\nsystem__community__code=self.organisation.community_code,\nthe_class=type_obj.the_class,\nsub_class=type_obj.sub_class,\ntype=type_obj.type\n)\nrecurring_ticket = self.recurring_ticket\nif not recurring_ticket:\ndata['start_date'] = timezone.now()\nform = AmlitTicketForm(\nNone,\ndata,\nqueue_choices=[(queue.id, queue.title) for queue in preference.recurred_queues.all()],\nassigned_to_choices=self.organisation.operators\n)\nif form.is_valid():\nticket = form.save(user)\nfeature_ticket = FeatureTicket.objects.create(\nticket=ticket,\nfeatures=list(features.values_list('id', flat=True))\n)\nrecurring_ticket, created = RecurringTicket.create_recurring(\nfeature_ticket.ticket, form.data['recurring_type'])\nself.recurring_ticket = recurring_ticket\nself.save()\nelse:\nticket = recurring_ticket.last_ticket\nfeature_ticket = ticket.featureticket\nfeature_ticket.features = list(features.values_list('id', flat=True))\nfeature_ticket.save()\nticket.description = data['body']\nupdate_ticket_data(ticket, user, data)\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.admin.SchedulerTemplate","title":"amlit_helpdesk.admin.SchedulerTemplate","text":"<p>               Bases: <code>Model</code></p> <p>Scheduler template to create or update the recurring ticket Mostly used for schedule ticket ofr multi assets</p>"},{"location":"developer/manual/amlit-helpdesk/#api","title":"API","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.api","title":"amlit_helpdesk.api","text":""},{"location":"developer/manual/amlit-helpdesk/#migrations","title":"Migrations","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.migrations","title":"amlit_helpdesk.migrations","text":""},{"location":"developer/manual/amlit-helpdesk/#models","title":"Models","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.models","title":"amlit_helpdesk.models","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.models.SchedulerOrganisation","title":"amlit_helpdesk.models.SchedulerOrganisation","text":"<p>               Bases: <code>Model</code></p> <p>Overridden scheduler for an organisation</p>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.models.SchedulerOrganisation.activate","title":"activate","text":"<pre><code>activate()\n</code></pre> <p>Activate the schedule</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def activate(self):\n\"\"\" Activate the schedule\"\"\"\nrecurring_ticket = self.recurring_ticket\nif recurring_ticket:\nrecurring_ticket.active = True\nrecurring_ticket.save()\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.models.SchedulerOrganisation.inactivate","title":"inactivate","text":"<pre><code>inactivate()\n</code></pre> <p>Inactivate the schedule</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def inactivate(self):\n\"\"\" Inactivate the schedule\"\"\"\nrecurring_ticket = self.recurring_ticket\nif recurring_ticket:\nrecurring_ticket.active = False\nrecurring_ticket.save()\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.models.SchedulerOrganisation.update","title":"update","text":"<pre><code>update(data, user: User)\n</code></pre> <p>Update the scheduler based on data TODO: LIT  We need to fix it to reuse function to create ticket, feature ticket and recurring ticket</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def update(self, data, user: User):\n\"\"\"\n    Update the scheduler based on data\n    TODO: LIT\n     We need to fix it to reuse function to create ticket, feature ticket and recurring ticket\n    \"\"\"\nfrom amlit_helpdesk.forms.ticket import AmlitTicketForm\nfrom amlit_helpdesk.views.ticket.update import update_ticket_data\ntype_obj = self.feature_type_combination_obj\nif not type_obj:\nreturn\npreference = SitePreferences.load()\ndata['queue'] = preference.recurred_queues.first().id\nfeatures = FeatureBase.objects.filter(\nsystem__community__code=self.organisation.community_code,\nthe_class=type_obj.the_class,\nsub_class=type_obj.sub_class,\ntype=type_obj.type\n)\nrecurring_ticket = self.recurring_ticket\nif not recurring_ticket:\ndata['start_date'] = timezone.now()\nform = AmlitTicketForm(\nNone,\ndata,\nqueue_choices=[(queue.id, queue.title) for queue in preference.recurred_queues.all()],\nassigned_to_choices=self.organisation.operators\n)\nif form.is_valid():\nticket = form.save(user)\nfeature_ticket = FeatureTicket.objects.create(\nticket=ticket,\nfeatures=list(features.values_list('id', flat=True))\n)\nrecurring_ticket, created = RecurringTicket.create_recurring(\nfeature_ticket.ticket, form.data['recurring_type'])\nself.recurring_ticket = recurring_ticket\nself.save()\nelse:\nticket = recurring_ticket.last_ticket\nfeature_ticket = ticket.featureticket\nfeature_ticket.features = list(features.values_list('id', flat=True))\nfeature_ticket.save()\nticket.description = data['body']\nupdate_ticket_data(ticket, user, data)\n</code></pre>"},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.models.SchedulerTemplate","title":"amlit_helpdesk.models.SchedulerTemplate","text":"<p>               Bases: <code>Model</code></p> <p>Scheduler template to create or update the recurring ticket Mostly used for schedule ticket ofr multi assets</p>"},{"location":"developer/manual/amlit-helpdesk/#serializers","title":"Serializers","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.serializer","title":"amlit_helpdesk.serializer","text":""},{"location":"developer/manual/amlit-helpdesk/#views","title":"Views","text":""},{"location":"developer/manual/amlit-helpdesk/#amlit_helpdesk.views","title":"amlit_helpdesk.views","text":""},{"location":"developer/manual/amlit/","title":"MyCivitas","text":""},{"location":"developer/manual/amlit/#admin","title":"Admin","text":""},{"location":"developer/manual/amlit/#amlit.admin","title":"amlit.admin","text":""},{"location":"developer/manual/amlit/#amlit.admin.Organisation","title":"amlit.admin.Organisation","text":"<p>               Bases: <code>TermModel</code></p> <p>Organisation that has management. Having users with their role. Also has the owner Organisation can just access specific community</p>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.community_name","title":"community_name  <code>property</code>","text":"<pre><code>community_name\n</code></pre> <p>Return name of community</p>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.operators","title":"operators  <code>property</code>","text":"<pre><code>operators\n</code></pre> <p>Return the list of operators</p>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.scheduler_data","title":"scheduler_data  <code>property</code>","text":"<pre><code>scheduler_data: list\n</code></pre> <p>Return scheduler data in list</p>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.scheduler_templates","title":"scheduler_templates  <code>property</code>","text":"<pre><code>scheduler_templates: list\n</code></pre> <p>Return scheduler data in list</p>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.check_user_access","title":"check_user_access","text":"<pre><code>check_user_access()\n</code></pre> <p>Check user access UserOrganisation and UserOrganisationInvitation are combined Delete UserOrganisationInvitation first if more than max user Delete older UserOrganisation if more than max user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def check_user_access(self):\n\"\"\"\n    Check user access\n    UserOrganisation and UserOrganisationInvitation are combined\n    Delete UserOrganisationInvitation first if more than max user\n    Delete older UserOrganisation if more than max user\n    \"\"\"\n# check the owner is the one of user organisation\nUserOrganisation.objects.get_or_create(\nuser=self.owner,\norganisation=self,\ndefaults={\n'role': UserRole.objects.filter(\npermissions__name=RolePermission.ASSIGN_USER).first()\n}\n)\naccess_counter = 1  # first is from the owner access\nuser_org_set = self.userorganisation_set.exclude(\nuser=self.owner).order_by('-pk')\nuser_invitation_set = self.userorganisationinvitation_set.all().order_by(\n'-pk')\nfor accesses in [user_org_set, user_invitation_set]:\nfor access in accesses:\naccess_counter += 1\nif access_counter &gt; self.max_user:\naccess.delete()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.has_permission","title":"has_permission","text":"<pre><code>has_permission()\n</code></pre> <p>Return the permissions interface</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def has_permission(self):\n\"\"\" Return the permissions interface\n    \"\"\"\nreturn _OrganisationPermissionsInterface(self)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.is_admin","title":"is_admin","text":"<pre><code>is_admin(user)\n</code></pre> <p>Return user is admin role</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def is_admin(self, user):\n\"\"\" Return user is admin role\n    :type user: User\n    \"\"\"\nif self.is_owner(user):\nreturn True\ntry:\nreturn UserRole.ADMIN in UserOrganisation.objects.get(\nuser=user, organisation=self).role.name\nexcept UserOrganisation.DoesNotExist:\nreturn False\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.is_owner","title":"is_owner","text":"<pre><code>is_owner(user)\n</code></pre> <p>Return user is owner role</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def is_owner(self, user):\n\"\"\" Return user is owner role\n    :type user: User\n    \"\"\"\nif self.owner == user:\nreturn True\nreturn False\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.Organisation.role","title":"role","text":"<pre><code>role(user: User)\n</code></pre> <p>Return role of user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def role(self, user: User):\n\"\"\" Return role of user\n    :type user: User\n    \"\"\"\nif self.is_owner(user):\nreturn UserRole.OWNER\ntry:\nreturn UserOrganisation.objects.get(\nuser=user, organisation=self).role.name\nexcept UserOrganisation.DoesNotExist:\nreturn UserRole.UNKNOWN\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.RolePermission","title":"amlit.admin.RolePermission","text":"<p>               Bases: <code>TermModel</code></p> <p>Permissions for role</p>"},{"location":"developer/manual/amlit/#amlit.admin.SitePreferences","title":"amlit.admin.SitePreferences","text":"<p>               Bases: <code>SingletonModel</code></p> <p>Setting specifically for amlit</p>"},{"location":"developer/manual/amlit/#amlit.admin.User","title":"amlit.admin.User","text":"<p>               Bases: <code>AbstractUser</code></p> <p>Users within the Django authentication system are represented by this model.</p> <p>Username and password are required. Other fields are optional. We make username as email format</p>"},{"location":"developer/manual/amlit/#amlit.admin.User.avatar_url","title":"avatar_url  <code>property</code>","text":"<pre><code>avatar_url: str\n</code></pre> <p>return avatar url</p>"},{"location":"developer/manual/amlit/#amlit.admin.User.communities","title":"communities  <code>property</code>","text":"<pre><code>communities\n</code></pre> <p>Return communities that user have access to</p>"},{"location":"developer/manual/amlit/#amlit.admin.User.organisations","title":"organisations  <code>property</code>","text":"<pre><code>organisations\n</code></pre> <p>Return organisations that user have access to</p>"},{"location":"developer/manual/amlit/#amlit.admin.User.organisations_as_admin","title":"organisations_as_admin  <code>property</code>","text":"<pre><code>organisations_as_admin\n</code></pre> <p>Return organisation that has admin role or owner</p>"},{"location":"developer/manual/amlit/#amlit.admin.UserOrganisation","title":"amlit.admin.UserOrganisation","text":"<p>               Bases: <code>Model</code></p> <p>Model that link user with organisation with their role</p>"},{"location":"developer/manual/amlit/#amlit.admin.UserOrganisation.delete","title":"delete","text":"<pre><code>delete(using=None, keep_parents=False)\n</code></pre> <p>When user organisation deleted, we need to notify user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def delete(self, using=None, keep_parents=False):\n\"\"\"\n    When user organisation deleted, we need to notify user\n    \"\"\"\nsuper(UserOrganisation, self).delete(using, keep_parents)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.UserOrganisationInvitation","title":"amlit.admin.UserOrganisationInvitation","text":"<p>               Bases: <code>Model</code></p> <p>Model that have invitation of user to organisation</p>"},{"location":"developer/manual/amlit/#amlit.admin.UserOrganisationInvitation.accept","title":"accept","text":"<pre><code>accept(user)\n</code></pre> <p>Accept invitation by user The user needs to be same with email</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def accept(self, user):\n\"\"\"\n    Accept invitation by user\n    The user needs to be same with email\n    :type user: User\n    \"\"\"\nif user.email == self.email:\nself.delete()\nUserOrganisation.objects.get_or_create(\nuser=user,\norganisation=self.organisation,\ndefaults={\n'role': self.role\n}\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.UserOrganisationInvitation.reject","title":"reject","text":"<pre><code>reject()\n</code></pre> <p>Reject invitation by user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def reject(self):\n\"\"\"\n    Reject invitation by user\n    \"\"\"\nself.delete()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.UserOrganisationInvitation.send_invitation","title":"send_invitation","text":"<pre><code>send_invitation()\n</code></pre> <p>Send email for this notification</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def send_invitation(self):\n\"\"\" Send email for this notification \"\"\"\nsend_mail(\nsubject='{} You are invited to {}'.format(\nsettings.EMAIL_SUBJECT_PREFIX, self.organisation.name),\nmessage=render_to_string(\n'pages/invitation/invitation_template.html', {\n'object': self\n}),\nfrom_email=settings.DEFAULT_FROM_EMAIL,\nrecipient_list=[self.email],\nfail_silently=False,\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.admin.UserRole","title":"amlit.admin.UserRole","text":"<p>               Bases: <code>TermModel</code></p> <p>Role for user in organisation</p>"},{"location":"developer/manual/amlit/#amlit.admin.UserTitle","title":"amlit.admin.UserTitle","text":"<p>               Bases: <code>TermModel</code></p> <p>Contains title of an user specification</p>"},{"location":"developer/manual/amlit/#api","title":"API","text":""},{"location":"developer/manual/amlit/#amlit.api","title":"amlit.api","text":""},{"location":"developer/manual/amlit/#amlit.api.Organisation","title":"amlit.api.Organisation","text":"<p>               Bases: <code>TermModel</code></p> <p>Organisation that has management. Having users with their role. Also has the owner Organisation can just access specific community</p>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.community_name","title":"community_name  <code>property</code>","text":"<pre><code>community_name\n</code></pre> <p>Return name of community</p>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.operators","title":"operators  <code>property</code>","text":"<pre><code>operators\n</code></pre> <p>Return the list of operators</p>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.scheduler_data","title":"scheduler_data  <code>property</code>","text":"<pre><code>scheduler_data: list\n</code></pre> <p>Return scheduler data in list</p>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.scheduler_templates","title":"scheduler_templates  <code>property</code>","text":"<pre><code>scheduler_templates: list\n</code></pre> <p>Return scheduler data in list</p>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.check_user_access","title":"check_user_access","text":"<pre><code>check_user_access()\n</code></pre> <p>Check user access UserOrganisation and UserOrganisationInvitation are combined Delete UserOrganisationInvitation first if more than max user Delete older UserOrganisation if more than max user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def check_user_access(self):\n\"\"\"\n    Check user access\n    UserOrganisation and UserOrganisationInvitation are combined\n    Delete UserOrganisationInvitation first if more than max user\n    Delete older UserOrganisation if more than max user\n    \"\"\"\n# check the owner is the one of user organisation\nUserOrganisation.objects.get_or_create(\nuser=self.owner,\norganisation=self,\ndefaults={\n'role': UserRole.objects.filter(\npermissions__name=RolePermission.ASSIGN_USER).first()\n}\n)\naccess_counter = 1  # first is from the owner access\nuser_org_set = self.userorganisation_set.exclude(\nuser=self.owner).order_by('-pk')\nuser_invitation_set = self.userorganisationinvitation_set.all().order_by(\n'-pk')\nfor accesses in [user_org_set, user_invitation_set]:\nfor access in accesses:\naccess_counter += 1\nif access_counter &gt; self.max_user:\naccess.delete()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.has_permission","title":"has_permission","text":"<pre><code>has_permission()\n</code></pre> <p>Return the permissions interface</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def has_permission(self):\n\"\"\" Return the permissions interface\n    \"\"\"\nreturn _OrganisationPermissionsInterface(self)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.is_admin","title":"is_admin","text":"<pre><code>is_admin(user)\n</code></pre> <p>Return user is admin role</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def is_admin(self, user):\n\"\"\" Return user is admin role\n    :type user: User\n    \"\"\"\nif self.is_owner(user):\nreturn True\ntry:\nreturn UserRole.ADMIN in UserOrganisation.objects.get(\nuser=user, organisation=self).role.name\nexcept UserOrganisation.DoesNotExist:\nreturn False\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.is_owner","title":"is_owner","text":"<pre><code>is_owner(user)\n</code></pre> <p>Return user is owner role</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def is_owner(self, user):\n\"\"\" Return user is owner role\n    :type user: User\n    \"\"\"\nif self.owner == user:\nreturn True\nreturn False\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.Organisation.role","title":"role","text":"<pre><code>role(user: User)\n</code></pre> <p>Return role of user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def role(self, user: User):\n\"\"\" Return role of user\n    :type user: User\n    \"\"\"\nif self.is_owner(user):\nreturn UserRole.OWNER\ntry:\nreturn UserOrganisation.objects.get(\nuser=user, organisation=self).role.name\nexcept UserOrganisation.DoesNotExist:\nreturn UserRole.UNKNOWN\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationAvailableUserSearch","title":"amlit.api.OrganisationAvailableUserSearch","text":"<p>               Bases: <code>APIView</code></p> <p>Return user that available for organisation</p>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationAvailableUserSearch.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/amlit/api/organisation.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\nq = request.GET.get('q', 'none')\norg = get_object_or_404(Organisation, pk=pk)\nreturn Response(\n[getattr(user, User.USERNAME_FIELD) for user in User.objects.filter(\nQ(first_name__icontains=q) |\nQ(last_name__icontains=q) |\nQ(email__icontains=q)\n).exclude(\nid__in=list(org.userorganisation_set.values_list('user', flat=True))\n)]\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationCreateScheduler","title":"amlit.api.OrganisationCreateScheduler","text":"<p>               Bases: <code>APIView</code></p> <p>Create scheduler</p>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationEditScheduler","title":"amlit.api.OrganisationEditScheduler","text":"<p>               Bases: <code>APIView</code></p> <p>Edit scheduler</p>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationInvitation","title":"amlit.api.OrganisationInvitation","text":"<p>               Bases: <code>APIView</code></p> <p>Create user invitation for an organisation</p>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationInvitation.post","title":"post","text":"<pre><code>post(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/amlit/api/organisation.py</code> <pre><code>def post(self, request, pk):\n\"\"\" Return data of features \"\"\"\ndata = request.data\norg = get_object_or_404(Organisation, pk=pk)\ntry:\nif not org.has_permission().assign_user(request.user):\nreturn HttpResponseForbidden()\nif org.able_to_add_user:\nemail = data.get('email', None)\n# create invitation if user has not been invited or already have access\nif not org.userorganisationinvitation_set.filter(\nemail=email\n).first() and not org.userorganisation_set.filter(\n**{\n'user__{}'.format(User.USERNAME_FIELD): email,\n'organisation': org\n}\n).first():\nform = UserOrganisationInvitationForm(data)\nif form.is_valid():\nUserOrganisationInvitation.objects.get_or_create(\nemail=email,\norganisation=org,\nrole=UserRole.objects.get(id=data.get('role', None))\n)\nelse:\nreturn HttpResponseBadRequest(\"The data is wrong.\")\nreturn redirect(\nreverse('organisation_detail', args=[pk]) + '#manage-access'\n)\nelse:\nreturn HttpResponseBadRequest(\"Can't add new user anymore.\")\nexcept UserRole.DoesNotExist:\nreturn HttpResponseBadRequest('User role does not exist')\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationSchedulerActivate","title":"amlit.api.OrganisationSchedulerActivate","text":"<p>               Bases: <code>APIView</code></p> <p>Active scheduler</p>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationSchedulerInactivate","title":"amlit.api.OrganisationSchedulerInactivate","text":"<p>               Bases: <code>APIView</code></p> <p>Inactive scheduler</p>"},{"location":"developer/manual/amlit/#amlit.api.OrganisationSchedulerList","title":"amlit.api.OrganisationSchedulerList","text":"<p>               Bases: <code>APIView</code></p> <p>Scheduler list of organisation</p>"},{"location":"developer/manual/amlit/#amlit.api.SchedulerOrganisation","title":"amlit.api.SchedulerOrganisation","text":"<p>               Bases: <code>Model</code></p> <p>Overridden scheduler for an organisation</p>"},{"location":"developer/manual/amlit/#amlit.api.SchedulerOrganisation.activate","title":"activate","text":"<pre><code>activate()\n</code></pre> <p>Activate the schedule</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def activate(self):\n\"\"\" Activate the schedule\"\"\"\nrecurring_ticket = self.recurring_ticket\nif recurring_ticket:\nrecurring_ticket.active = True\nrecurring_ticket.save()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.SchedulerOrganisation.inactivate","title":"inactivate","text":"<pre><code>inactivate()\n</code></pre> <p>Inactivate the schedule</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def inactivate(self):\n\"\"\" Inactivate the schedule\"\"\"\nrecurring_ticket = self.recurring_ticket\nif recurring_ticket:\nrecurring_ticket.active = False\nrecurring_ticket.save()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.SchedulerOrganisation.update","title":"update","text":"<pre><code>update(data, user: User)\n</code></pre> <p>Update the scheduler based on data TODO: LIT  We need to fix it to reuse function to create ticket, feature ticket and recurring ticket</p> Source code in <code>django_project/amlit_helpdesk/models/scheduler.py</code> <pre><code>def update(self, data, user: User):\n\"\"\"\n    Update the scheduler based on data\n    TODO: LIT\n     We need to fix it to reuse function to create ticket, feature ticket and recurring ticket\n    \"\"\"\nfrom amlit_helpdesk.forms.ticket import AmlitTicketForm\nfrom amlit_helpdesk.views.ticket.update import update_ticket_data\ntype_obj = self.feature_type_combination_obj\nif not type_obj:\nreturn\npreference = SitePreferences.load()\ndata['queue'] = preference.recurred_queues.first().id\nfeatures = FeatureBase.objects.filter(\nsystem__community__code=self.organisation.community_code,\nthe_class=type_obj.the_class,\nsub_class=type_obj.sub_class,\ntype=type_obj.type\n)\nrecurring_ticket = self.recurring_ticket\nif not recurring_ticket:\ndata['start_date'] = timezone.now()\nform = AmlitTicketForm(\nNone,\ndata,\nqueue_choices=[(queue.id, queue.title) for queue in preference.recurred_queues.all()],\nassigned_to_choices=self.organisation.operators\n)\nif form.is_valid():\nticket = form.save(user)\nfeature_ticket = FeatureTicket.objects.create(\nticket=ticket,\nfeatures=list(features.values_list('id', flat=True))\n)\nrecurring_ticket, created = RecurringTicket.create_recurring(\nfeature_ticket.ticket, form.data['recurring_type'])\nself.recurring_ticket = recurring_ticket\nself.save()\nelse:\nticket = recurring_ticket.last_ticket\nfeature_ticket = ticket.featureticket\nfeature_ticket.features = list(features.values_list('id', flat=True))\nfeature_ticket.save()\nticket.description = data['body']\nupdate_ticket_data(ticket, user, data)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.SchedulerTemplate","title":"amlit.api.SchedulerTemplate","text":"<p>               Bases: <code>Model</code></p> <p>Scheduler template to create or update the recurring ticket Mostly used for schedule ticket ofr multi assets</p>"},{"location":"developer/manual/amlit/#amlit.api.User","title":"amlit.api.User","text":"<p>               Bases: <code>AbstractUser</code></p> <p>Users within the Django authentication system are represented by this model.</p> <p>Username and password are required. Other fields are optional. We make username as email format</p>"},{"location":"developer/manual/amlit/#amlit.api.User.avatar_url","title":"avatar_url  <code>property</code>","text":"<pre><code>avatar_url: str\n</code></pre> <p>return avatar url</p>"},{"location":"developer/manual/amlit/#amlit.api.User.communities","title":"communities  <code>property</code>","text":"<pre><code>communities\n</code></pre> <p>Return communities that user have access to</p>"},{"location":"developer/manual/amlit/#amlit.api.User.organisations","title":"organisations  <code>property</code>","text":"<pre><code>organisations\n</code></pre> <p>Return organisations that user have access to</p>"},{"location":"developer/manual/amlit/#amlit.api.User.organisations_as_admin","title":"organisations_as_admin  <code>property</code>","text":"<pre><code>organisations_as_admin\n</code></pre> <p>Return organisation that has admin role or owner</p>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisation","title":"amlit.api.UserOrganisation","text":"<p>               Bases: <code>Model</code></p> <p>Model that link user with organisation with their role</p>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisation.delete","title":"delete","text":"<pre><code>delete(using=None, keep_parents=False)\n</code></pre> <p>When user organisation deleted, we need to notify user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def delete(self, using=None, keep_parents=False):\n\"\"\"\n    When user organisation deleted, we need to notify user\n    \"\"\"\nsuper(UserOrganisation, self).delete(using, keep_parents)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationDetail","title":"amlit.api.UserOrganisationDetail","text":"<p>               Bases: <code>APIView</code></p> <p>API for user organisation/access</p>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationDetail.delete","title":"delete","text":"<pre><code>delete(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/amlit/api/organisation.py</code> <pre><code>def delete(self, request, pk):\n\"\"\" Return data of features \"\"\"\naccess = get_object_or_404(UserOrganisation, pk=pk)\nif not access.organisation.has_permission().assign_user(request.user):\nreturn HttpResponseForbidden()\naccess.delete()\nreturn HttpResponse('OK')\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationDetail.put","title":"put","text":"<pre><code>put(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/amlit/api/organisation.py</code> <pre><code>def put(self, request, pk):\n\"\"\" Return data of features \"\"\"\naccess = get_object_or_404(UserOrganisation, pk=pk)\nif not access.organisation.has_permission().assign_user(request.user):\nreturn HttpResponseForbidden()\ntry:\naccess.role = UserRole.objects.get(\nid=request.data.get('role', 0))\naccess.save()\nreturn HttpResponse('OK')\nexcept UserRole.DoesNotExist:\nreturn HttpResponseBadRequest()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitation","title":"amlit.api.UserOrganisationInvitation","text":"<p>               Bases: <code>Model</code></p> <p>Model that have invitation of user to organisation</p>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitation.accept","title":"accept","text":"<pre><code>accept(user)\n</code></pre> <p>Accept invitation by user The user needs to be same with email</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def accept(self, user):\n\"\"\"\n    Accept invitation by user\n    The user needs to be same with email\n    :type user: User\n    \"\"\"\nif user.email == self.email:\nself.delete()\nUserOrganisation.objects.get_or_create(\nuser=user,\norganisation=self.organisation,\ndefaults={\n'role': self.role\n}\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitation.reject","title":"reject","text":"<pre><code>reject()\n</code></pre> <p>Reject invitation by user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def reject(self):\n\"\"\"\n    Reject invitation by user\n    \"\"\"\nself.delete()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitation.send_invitation","title":"send_invitation","text":"<pre><code>send_invitation()\n</code></pre> <p>Send email for this notification</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def send_invitation(self):\n\"\"\" Send email for this notification \"\"\"\nsend_mail(\nsubject='{} You are invited to {}'.format(\nsettings.EMAIL_SUBJECT_PREFIX, self.organisation.name),\nmessage=render_to_string(\n'pages/invitation/invitation_template.html', {\n'object': self\n}),\nfrom_email=settings.DEFAULT_FROM_EMAIL,\nrecipient_list=[self.email],\nfail_silently=False,\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitationAccept","title":"amlit.api.UserOrganisationInvitationAccept","text":"<p>               Bases: <code>APIView</code></p> <p>Method to accept the invitation</p>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitationDetail","title":"amlit.api.UserOrganisationInvitationDetail","text":"<p>               Bases: <code>APIView</code></p> <p>API for invitation</p>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitationDetail.delete","title":"delete","text":"<pre><code>delete(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/amlit/api/organisation.py</code> <pre><code>def delete(self, request, pk):\n\"\"\" Return data of features \"\"\"\ninvitation = get_object_or_404(UserOrganisationInvitation, pk=pk)\nif not invitation.organisation.has_permission().assign_user(request.user):\nreturn HttpResponseForbidden()\ninvitation.delete()\nreturn HttpResponse('OK')\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitationDetail.put","title":"put","text":"<pre><code>put(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/amlit/api/organisation.py</code> <pre><code>def put(self, request, pk):\n\"\"\" Return data of features \"\"\"\ninvitation = get_object_or_404(UserOrganisationInvitation, pk=pk)\nif not invitation.organisation.has_permission().assign_user(request.user):\nreturn HttpResponseForbidden()\ninvitation.role = UserRole.objects.get(id=request.data.get('role', 0))\ninvitation.save()\nreturn HttpResponse('OK')\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.api.UserOrganisationInvitationReject","title":"amlit.api.UserOrganisationInvitationReject","text":"<p>               Bases: <code>APIView</code></p> <p>Method to reject the invitation</p>"},{"location":"developer/manual/amlit/#amlit.api.UserRole","title":"amlit.api.UserRole","text":"<p>               Bases: <code>TermModel</code></p> <p>Role for user in organisation</p>"},{"location":"developer/manual/amlit/#forms","title":"Forms","text":""},{"location":"developer/manual/amlit/#amlit.forms","title":"amlit.forms","text":""},{"location":"developer/manual/amlit/#migrations","title":"Migrations","text":""},{"location":"developer/manual/amlit/#amlit.migrations","title":"amlit.migrations","text":""},{"location":"developer/manual/amlit/#models","title":"Models","text":""},{"location":"developer/manual/amlit/#amlit.models","title":"amlit.models","text":""},{"location":"developer/manual/amlit/#amlit.models.Organisation","title":"amlit.models.Organisation","text":"<p>               Bases: <code>TermModel</code></p> <p>Organisation that has management. Having users with their role. Also has the owner Organisation can just access specific community</p>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.community_name","title":"community_name  <code>property</code>","text":"<pre><code>community_name\n</code></pre> <p>Return name of community</p>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.operators","title":"operators  <code>property</code>","text":"<pre><code>operators\n</code></pre> <p>Return the list of operators</p>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.scheduler_data","title":"scheduler_data  <code>property</code>","text":"<pre><code>scheduler_data: list\n</code></pre> <p>Return scheduler data in list</p>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.scheduler_templates","title":"scheduler_templates  <code>property</code>","text":"<pre><code>scheduler_templates: list\n</code></pre> <p>Return scheduler data in list</p>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.check_user_access","title":"check_user_access","text":"<pre><code>check_user_access()\n</code></pre> <p>Check user access UserOrganisation and UserOrganisationInvitation are combined Delete UserOrganisationInvitation first if more than max user Delete older UserOrganisation if more than max user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def check_user_access(self):\n\"\"\"\n    Check user access\n    UserOrganisation and UserOrganisationInvitation are combined\n    Delete UserOrganisationInvitation first if more than max user\n    Delete older UserOrganisation if more than max user\n    \"\"\"\n# check the owner is the one of user organisation\nUserOrganisation.objects.get_or_create(\nuser=self.owner,\norganisation=self,\ndefaults={\n'role': UserRole.objects.filter(\npermissions__name=RolePermission.ASSIGN_USER).first()\n}\n)\naccess_counter = 1  # first is from the owner access\nuser_org_set = self.userorganisation_set.exclude(\nuser=self.owner).order_by('-pk')\nuser_invitation_set = self.userorganisationinvitation_set.all().order_by(\n'-pk')\nfor accesses in [user_org_set, user_invitation_set]:\nfor access in accesses:\naccess_counter += 1\nif access_counter &gt; self.max_user:\naccess.delete()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.has_permission","title":"has_permission","text":"<pre><code>has_permission()\n</code></pre> <p>Return the permissions interface</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def has_permission(self):\n\"\"\" Return the permissions interface\n    \"\"\"\nreturn _OrganisationPermissionsInterface(self)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.is_admin","title":"is_admin","text":"<pre><code>is_admin(user)\n</code></pre> <p>Return user is admin role</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def is_admin(self, user):\n\"\"\" Return user is admin role\n    :type user: User\n    \"\"\"\nif self.is_owner(user):\nreturn True\ntry:\nreturn UserRole.ADMIN in UserOrganisation.objects.get(\nuser=user, organisation=self).role.name\nexcept UserOrganisation.DoesNotExist:\nreturn False\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.is_owner","title":"is_owner","text":"<pre><code>is_owner(user)\n</code></pre> <p>Return user is owner role</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def is_owner(self, user):\n\"\"\" Return user is owner role\n    :type user: User\n    \"\"\"\nif self.owner == user:\nreturn True\nreturn False\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.Organisation.role","title":"role","text":"<pre><code>role(user: User)\n</code></pre> <p>Return role of user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def role(self, user: User):\n\"\"\" Return role of user\n    :type user: User\n    \"\"\"\nif self.is_owner(user):\nreturn UserRole.OWNER\ntry:\nreturn UserOrganisation.objects.get(\nuser=user, organisation=self).role.name\nexcept UserOrganisation.DoesNotExist:\nreturn UserRole.UNKNOWN\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.OrganisationByUser","title":"amlit.models.OrganisationByUser","text":"<p>               Bases: <code>Manager</code></p>"},{"location":"developer/manual/amlit/#amlit.models.OrganisationByUser.admin_role","title":"admin_role","text":"<pre><code>admin_role(user)\n</code></pre> <p>Return organisation that user has admin roles</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def admin_role(self, user):\n\"\"\" Return organisation that user has admin roles\n    :type user: User\n    \"\"\"\norganisations = list(UserOrganisation.objects.filter(\nuser=user, role__name='Admin').values_list(\n'organisation_id', flat=True))\nreturn super().get_queryset().filter(\nQ(owner=user) | Q(id__in=organisations))\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.OrganisationByUser.all_role","title":"all_role","text":"<pre><code>all_role(user)\n</code></pre> <p>Return organisation that user has every roles</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def all_role(self, user):\n\"\"\" Return organisation that user has every roles\n    :type user: User\n    \"\"\"\norganisations = list(UserOrganisation.objects.filter(\nuser=user).values_list('organisation_id', flat=True))\nreturn super().get_queryset().filter(\nQ(owner=user) | Q(id__in=organisations))\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.OrganisationSubscriptionError","title":"amlit.models.OrganisationSubscriptionError","text":"<p>               Bases: <code>Exception</code></p> <p>Raised when organisation subscription error</p>"},{"location":"developer/manual/amlit/#amlit.models.RolePermission","title":"amlit.models.RolePermission","text":"<p>               Bases: <code>TermModel</code></p> <p>Permissions for role</p>"},{"location":"developer/manual/amlit/#amlit.models.SitePreferences","title":"amlit.models.SitePreferences","text":"<p>               Bases: <code>SingletonModel</code></p> <p>Setting specifically for amlit</p>"},{"location":"developer/manual/amlit/#amlit.models.User","title":"amlit.models.User","text":"<p>               Bases: <code>AbstractUser</code></p> <p>Users within the Django authentication system are represented by this model.</p> <p>Username and password are required. Other fields are optional. We make username as email format</p>"},{"location":"developer/manual/amlit/#amlit.models.User.avatar_url","title":"avatar_url  <code>property</code>","text":"<pre><code>avatar_url: str\n</code></pre> <p>return avatar url</p>"},{"location":"developer/manual/amlit/#amlit.models.User.communities","title":"communities  <code>property</code>","text":"<pre><code>communities\n</code></pre> <p>Return communities that user have access to</p>"},{"location":"developer/manual/amlit/#amlit.models.User.organisations","title":"organisations  <code>property</code>","text":"<pre><code>organisations\n</code></pre> <p>Return organisations that user have access to</p>"},{"location":"developer/manual/amlit/#amlit.models.User.organisations_as_admin","title":"organisations_as_admin  <code>property</code>","text":"<pre><code>organisations_as_admin\n</code></pre> <p>Return organisation that has admin role or owner</p>"},{"location":"developer/manual/amlit/#amlit.models.UserByString","title":"amlit.models.UserByString","text":"<pre><code>UserByString(username)\n</code></pre> Source code in <code>django_project/amlit/models/user.py</code> <pre><code>def __init__(self, username):\nself.username = username\ntry:\nself.user = User.objects.get(**{'{}'.format(User.USERNAME_FIELD): username})\nexcept User.DoesNotExist:\npass\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserByString.avatar_url","title":"avatar_url  <code>property</code>","text":"<pre><code>avatar_url: str\n</code></pre> <p>return avatar url</p>"},{"location":"developer/manual/amlit/#amlit.models.UserByString.full_str","title":"full_str","text":"<pre><code>full_str()\n</code></pre> <p>return str</p> Source code in <code>django_project/amlit/models/user.py</code> <pre><code>def full_str(self):\n\"\"\" return __str__ \"\"\"\nreturn self.__str__()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserManager","title":"amlit.models.UserManager","text":"<p>               Bases: <code>BaseUserManager</code></p> <p>Define a model manager for User model with no username field.</p>"},{"location":"developer/manual/amlit/#amlit.models.UserManager.create_superuser","title":"create_superuser","text":"<pre><code>create_superuser(email, password, **extra_fields)\n</code></pre> <p>Create and save a SuperUser with the given email and password.</p> Source code in <code>django_project/amlit/models/user.py</code> <pre><code>def create_superuser(self, email, password, **extra_fields):\n\"\"\"Create and save a SuperUser with the given email and password.\"\"\"\nextra_fields.setdefault('is_staff', True)\nextra_fields.setdefault('is_superuser', True)\nif extra_fields.get('is_staff') is not True:\nraise ValueError('Superuser must have is_staff=True.')\nif extra_fields.get('is_superuser') is not True:\nraise ValueError('Superuser must have is_superuser=True.')\nreturn self._create_user(email, password, **extra_fields)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserManager.create_user","title":"create_user","text":"<pre><code>create_user(email, password=None, **extra_fields)\n</code></pre> <p>Create and save a regular User with the given email and password.</p> Source code in <code>django_project/amlit/models/user.py</code> <pre><code>def create_user(self, email, password=None, **extra_fields):\n\"\"\"Create and save a regular User with the given email and password.\"\"\"\nextra_fields.setdefault('is_staff', False)\nextra_fields.setdefault('is_superuser', False)\nreturn self._create_user(email, password, **extra_fields)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserOrganisation","title":"amlit.models.UserOrganisation","text":"<p>               Bases: <code>Model</code></p> <p>Model that link user with organisation with their role</p>"},{"location":"developer/manual/amlit/#amlit.models.UserOrganisation.delete","title":"delete","text":"<pre><code>delete(using=None, keep_parents=False)\n</code></pre> <p>When user organisation deleted, we need to notify user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def delete(self, using=None, keep_parents=False):\n\"\"\"\n    When user organisation deleted, we need to notify user\n    \"\"\"\nsuper(UserOrganisation, self).delete(using, keep_parents)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserOrganisationInvitation","title":"amlit.models.UserOrganisationInvitation","text":"<p>               Bases: <code>Model</code></p> <p>Model that have invitation of user to organisation</p>"},{"location":"developer/manual/amlit/#amlit.models.UserOrganisationInvitation.accept","title":"accept","text":"<pre><code>accept(user)\n</code></pre> <p>Accept invitation by user The user needs to be same with email</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def accept(self, user):\n\"\"\"\n    Accept invitation by user\n    The user needs to be same with email\n    :type user: User\n    \"\"\"\nif user.email == self.email:\nself.delete()\nUserOrganisation.objects.get_or_create(\nuser=user,\norganisation=self.organisation,\ndefaults={\n'role': self.role\n}\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserOrganisationInvitation.reject","title":"reject","text":"<pre><code>reject()\n</code></pre> <p>Reject invitation by user</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def reject(self):\n\"\"\"\n    Reject invitation by user\n    \"\"\"\nself.delete()\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserOrganisationInvitation.send_invitation","title":"send_invitation","text":"<pre><code>send_invitation()\n</code></pre> <p>Send email for this notification</p> Source code in <code>django_project/amlit/models/organisation.py</code> <pre><code>def send_invitation(self):\n\"\"\" Send email for this notification \"\"\"\nsend_mail(\nsubject='{} You are invited to {}'.format(\nsettings.EMAIL_SUBJECT_PREFIX, self.organisation.name),\nmessage=render_to_string(\n'pages/invitation/invitation_template.html', {\n'object': self\n}),\nfrom_email=settings.DEFAULT_FROM_EMAIL,\nrecipient_list=[self.email],\nfail_silently=False,\n)\n</code></pre>"},{"location":"developer/manual/amlit/#amlit.models.UserRole","title":"amlit.models.UserRole","text":"<p>               Bases: <code>TermModel</code></p> <p>Role for user in organisation</p>"},{"location":"developer/manual/amlit/#amlit.models.UserTitle","title":"amlit.models.UserTitle","text":"<p>               Bases: <code>TermModel</code></p> <p>Contains title of an user specification</p>"},{"location":"developer/manual/amlit/#serializers","title":"Serializers","text":""},{"location":"developer/manual/amlit/#amlit.serializer","title":"amlit.serializer","text":""},{"location":"developer/manual/amlit/#templatetags","title":"Templatetags","text":""},{"location":"developer/manual/amlit/#amlit.templatetags","title":"amlit.templatetags","text":""},{"location":"developer/manual/amlit/#views","title":"Views","text":""},{"location":"developer/manual/amlit/#amlit.views","title":"amlit.views","text":""},{"location":"developer/manual/civitas/","title":"MyCivitas","text":""},{"location":"developer/manual/civitas/#admin","title":"Admin","text":""},{"location":"developer/manual/civitas/#civitas.admin","title":"civitas.admin","text":""},{"location":"developer/manual/civitas/#civitas.admin.COF","title":"civitas.admin.COF","text":"<p>               Bases: <code>Model</code></p> <p>Consequence of Failure</p>"},{"location":"developer/manual/civitas/#civitas.admin.CapitalProject","title":"civitas.admin.CapitalProject","text":"<p>               Bases: <code>Model</code></p> <p>Capital project object</p>"},{"location":"developer/manual/civitas/#civitas.admin.CapitalProjectFeatureCombination","title":"civitas.admin.CapitalProjectFeatureCombination","text":"<p>               Bases: <code>Model</code></p> <p>Capital project feature combinationobject</p>"},{"location":"developer/manual/civitas/#civitas.admin.CivicAddress","title":"civitas.admin.CivicAddress","text":"<p>               Bases: <code>Model</code></p> <p>Civic Address object</p>"},{"location":"developer/manual/civitas/#civitas.admin.Community","title":"civitas.admin.Community","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative community</p>"},{"location":"developer/manual/civitas/#civitas.admin.CommunityAdmin","title":"civitas.admin.CommunityAdmin","text":"<p>               Bases: <code>ModelAdmin</code></p>"},{"location":"developer/manual/civitas/#civitas.admin.CommunityAdmin.province","title":"province","text":"<pre><code>province(obj)\n</code></pre> <p>Return region</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Community</code> required <p>Returns:</p> Type Description Source code in <code>django_project/civitas/admin/community.py</code> <pre><code>def province(self, obj):\n\"\"\" Return region\n    :param obj:\n    :type obj: Community\n    :return:\n    \"\"\"\nreturn obj.region.province\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.Condition","title":"civitas.admin.Condition","text":"<p>               Bases: <code>_Term</code></p> <p>Condition of feature 1   very good 2   good 3   fair 4   poor 5   very poor</p>"},{"location":"developer/manual/civitas/#civitas.admin.Deterioration","title":"civitas.admin.Deterioration","text":"<p>               Bases: <code>_Term</code></p> <p>The process of becoming progressively worse. Contains name and the equation</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBase","title":"civitas.admin.FeatureBase","text":"<p>               Bases: <code>Model</code></p> <p>Model for base feature. Every feature needs to override this model</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBase.calculation","title":"calculation","text":"<pre><code>calculation()\n</code></pre> <p>Calculate all field that needs calculation</p> Source code in <code>django_project/civitas/models/feature/feature_base.py</code> <pre><code>def calculation(self):\n\"\"\" Calculate all field that needs calculation\"\"\"\nif self.featurecalculation_set.all().count():\nreturn self.featurecalculation_set.all()[0]\nreturn None\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBase.lifespan","title":"lifespan","text":"<pre><code>lifespan()\n</code></pre> <p>Return lifespan of feature</p> Source code in <code>django_project/civitas/models/feature/feature_base.py</code> <pre><code>def lifespan(self):\n\"\"\" Return lifespan of feature\"\"\"\nif not self.type:\nreturn None\nreturn self.type.lifespan\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin","title":"civitas.admin.FeatureBaseAdmin","text":"<p>               Bases: <code>ModelAdmin</code></p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin.age","title":"age","text":"<pre><code>age(obj)\n</code></pre> <p>return age based on calculation</p> Source code in <code>django_project/civitas/admin/feature/feature.py</code> <pre><code>def age(self, obj):\n\"\"\" return age based on calculation\"\"\"\nif obj.calculation():\nreturn obj.calculation().age\nreturn '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin.annual_reserve_cost","title":"annual_reserve_cost","text":"<pre><code>annual_reserve_cost(obj)\n</code></pre> <p>return annual reserve cost based on calculation</p> Source code in <code>django_project/civitas/admin/feature/feature.py</code> <pre><code>def annual_reserve_cost(self, obj):\n\"\"\" return annual reserve cost based on calculation\"\"\"\nif obj.calculation():\nreturn obj.calculation().annual_reserve_cost()\nreturn '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin.estimated_maintenance_cost","title":"estimated_maintenance_cost","text":"<pre><code>estimated_maintenance_cost(obj)\n</code></pre> <p>return maintenance cost based on calculation</p> Source code in <code>django_project/civitas/admin/feature/feature.py</code> <pre><code>def estimated_maintenance_cost(self, obj):\n\"\"\" return maintenance cost based on calculation\"\"\"\nif obj.calculation():\nreturn obj.calculation().maintenance_cost()\nreturn '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin.estimated_renewal_cost","title":"estimated_renewal_cost","text":"<pre><code>estimated_renewal_cost(obj)\n</code></pre> <p>return renewal cost based on calculation</p> Source code in <code>django_project/civitas/admin/feature/feature.py</code> <pre><code>def estimated_renewal_cost(self, obj):\n\"\"\" return renewal cost based on calculation\"\"\"\nif obj.calculation():\nreturn obj.calculation().renewal_cost()\nreturn '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin.remaining_life","title":"remaining_life","text":"<pre><code>remaining_life(obj)\n</code></pre> <p>return remaining life based on calculation</p> Source code in <code>django_project/civitas/admin/feature/feature.py</code> <pre><code>def remaining_life(self, obj):\n\"\"\" return remaining life based on calculation\"\"\"\nif obj.calculation():\nreturn obj.calculation().remaining_life()\nreturn '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureBaseAdmin.remaining_life_percent","title":"remaining_life_percent","text":"<pre><code>remaining_life_percent(obj)\n</code></pre> <p>return remaining life percent based on calculation</p> Source code in <code>django_project/civitas/admin/feature/feature.py</code> <pre><code>def remaining_life_percent(self, obj):\n\"\"\" return remaining life percent based on calculation\"\"\"\nif obj.calculation():\nreturn obj.calculation().remaining_life_percent()\nreturn '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureClass","title":"civitas.admin.FeatureClass","text":"<p>               Bases: <code>_Term</code></p> <p>The first Level of the Asset Hierarchy as defined in \"Background\" Sheet ie. TRN = Transportation</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureGeometry","title":"civitas.admin.FeatureGeometry","text":"<p>               Bases: <code>Model</code></p> <p>Geometry of feature base</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureGeometry.geometry","title":"geometry","text":"<pre><code>geometry()\n</code></pre> <p>return geometry of feature</p> Source code in <code>django_project/civitas/models/feature/feature_geometry.py</code> <pre><code>def geometry(self):\n\"\"\" return geometry of feature \"\"\"\nif self.geom_point:\nreturn self.geom_point\nif self.geom_line:\nreturn self.geom_line\nif self.geom_polygon:\nreturn self.geom_polygon\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureProperty","title":"civitas.admin.FeatureProperty","text":"<p>               Bases: <code>Model</code></p> <p>This is additional property for the feature</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureSubClass","title":"civitas.admin.FeatureSubClass","text":"<p>               Bases: <code>_Term</code></p> <p>The second Level of the Asset Hierarchy as defined in \"Background\" Sheet ie. RD = Roads It is linked with AssetClass</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureType","title":"civitas.admin.FeatureType","text":"<p>               Bases: <code>_Term</code></p> <p>The third Level of the Asset Hierarchy as defined in \"Background\" Sheet</p>"},{"location":"developer/manual/civitas/#civitas.admin.FeatureTypeCombination","title":"civitas.admin.FeatureTypeCombination","text":"<p>               Bases: <code>_Term</code></p> <p>Combination between class, subclass and type</p>"},{"location":"developer/manual/civitas/#civitas.admin.POF","title":"civitas.admin.POF","text":"<p>               Bases: <code>Model</code></p> <p>Probability of Failure</p>"},{"location":"developer/manual/civitas/#civitas.admin.Province","title":"civitas.admin.Province","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative province</p>"},{"location":"developer/manual/civitas/#civitas.admin.Region","title":"civitas.admin.Region","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative region</p>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData","title":"civitas.admin.ReporterData","text":"<p>               Bases: <code>Model</code></p> <p>Materialized View for reported data</p>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData.by_community","title":"by_community  <code>staticmethod</code>","text":"<pre><code>by_community(community: Community) -&gt; dict\n</code></pre> <p>Return reporter_data by community</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef by_community(community: Community) -&gt; dict:\n\"\"\"\n    Return reporter_data by community\n    \"\"\"\nreturn ReporterData.objects.filter(\ncommunity_id=community.id\n)[0:2]\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData.by_community_all","title":"by_community_all  <code>staticmethod</code>","text":"<pre><code>by_community_all(community: Community) -&gt; dict\n</code></pre> <p>Return reporter_data by community</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef by_community_all(community: Community) -&gt; dict:\n\"\"\"\n    Return reporter_data by community\n    \"\"\"\nreturn ReporterData._showall(community)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData.dashboard","title":"dashboard  <code>staticmethod</code>","text":"<pre><code>dashboard(community: Community) -&gt; dict\n</code></pre> <p>dashboard</p> <p>Args:     community (Community): community object</p> <p>Returns:     array: dictionary of each cost breakdown</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef dashboard(community: Community) -&gt; dict:\n\"\"\"_dashboard_\n    Args:\n        community (Community): community object\n    Returns:\n        array: dictionary of each cost breakdown\n    \"\"\"\ndata = ReporterData.objects.filter(\ncommunity_id=community.id\n).exclude(\nsystem_name__in=[\n'Non-Municipal Infrastructure',\n'Abandoned Infrastructure'\n]\n)\n_dashboard = DashboardData(data=data)  \nsystem_names = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name') \\\n        .distinct() \\\n        .annotate(label=Concat('system_name', models.Value('')))\n##### Renewal costs of assets #####\n_renewal_cost_of_assets_a = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'renewal_cost')\n_data_renewal= [{'system_name': val[\"system_name\"], 'renewal_cost': val['renewal_cost']} for val in _renewal_cost_of_assets_a]\nrenewal_sum = 0\nqs_renewal = []\nfor name in system_names:\nqs_renewal.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_renewal:\nsystem_name = x[\"system_name\"]\nif str(x[\"renewal_cost\"]) == 'NaN' or not x[\"renewal_cost\"]:\nx[\"renewal_cost\"] = 0.00\nelif x[\"renewal_cost\"]:\nrenewal_sum = renewal_sum + float(x[\"renewal_cost\"])\nindex = next((index for (index, d) in enumerate(qs_renewal) if d[\"system_name\"] == system_name), None)\nqs_renewal[index][\"values\"] = float(qs_renewal[index][\"values\"]) + float(x[\"renewal_cost\"])\n#### End Renewal costs of assets ####\n##### Maintenance #####\n_maintenance_cost_of_assets = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'maintenance_cost')\n_data_maintenace = [{'system_name': val[\"system_name\"], 'maintenance_cost': val['maintenance_cost']} for val in _maintenance_cost_of_assets]\nmaintenance_sum = 0\nqs_maintenance = []\nfor name in system_names:\nqs_maintenance.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_maintenace:\nsystem_name = x[\"system_name\"]\nif str(x[\"maintenance_cost\"]) == 'NaN' or not x[\"maintenance_cost\"]:\nx[\"maintenance_cost\"] = 0.00\nelif x[\"maintenance_cost\"]:\nmaintenance_sum = maintenance_sum + float(x[\"maintenance_cost\"])\nindex = next((index for (index, d) in enumerate(qs_maintenance) if d[\"system_name\"] == system_name), None)\nqs_maintenance[index][\"values\"] = float(qs_maintenance[index][\"values\"]) + float(x[\"maintenance_cost\"])\n#### End Maintenance ####\n#### Risk Renewal####\n_risk_renewal_of_assets = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'risk_level', 'renewal_cost')\n_data_renewal_cost_of_assets = [{'system_name': val[\"system_name\"], 'renewal_cost': val['renewal_cost'], 'risk_level': val['risk_level']} \\\n                                     for val in _risk_renewal_of_assets]\nqs_renewal_cost_of_assets = []\nfor risk in _dashboard.risk_level_list:\nfor name in system_names:\nqs_renewal_cost_of_assets.append({\"system_name\": name[\"system_name\"], \n\"risk_level\": risk[\"risk_level\"], \n\"label\": name[\"label\"],\n\"values\": 0.0})\nrisk_renewal_of_assets_sum = 0\nfor x in _data_renewal_cost_of_assets:\nsystem_name = x[\"system_name\"]\nrisk_level = ''\nif not x['risk_level'] is None:\nrisk_level = x[\"risk_level\"].strip()\nelse:\nrisk_level = 'None'\nprint(\"risk_level\", risk_level)\nif str(x[\"renewal_cost\"]) == 'NaN' or not x[\"renewal_cost\"]:\nx[\"renewal_cost\"] = 0.00\nelse:\nrisk_renewal_of_assets_sum = risk_renewal_of_assets_sum + Decimal(x[\"renewal_cost\"])\nindex = next((index for (index, d) in enumerate(qs_renewal_cost_of_assets) \\\n                       if d[\"system_name\"] == system_name and d[\"risk_level\"] == risk_level), None)\nif index :\nqs_renewal_cost_of_assets[index][\"values\"] = float(qs_renewal_cost_of_assets[index][\"values\"]) + float(x[\"renewal_cost\"])\n#### END Risk Renewal####\n#### remaining years renewal cost ####\n_remaining_years_renewal_cost = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'renewal_cost') \n#### End remaining years renewal cost ####\nremaining_years_renewal_risk_cost = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'risk_level') \\\n        .distinct() \\\n        .annotate(label=Concat('system_name', models.Value('')), values=Sum('renewal_cost'))\n###### Annual Reserve  #########\n_annual_reserve = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'annual_reserve') \n_data_annual_reserve = [{'system_name': val[\"system_name\"], 'annual_reserve': val['annual_reserve']} for val in _annual_reserve]\nannual_sum = 0\nqs_annual_data = []\nfor name in system_names:\nqs_annual_data.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_annual_reserve:\nsystem_name = x[\"system_name\"]\nannual_reserve = 0\nif str(x[\"annual_reserve\"]) == 'NaN' or not x[\"annual_reserve\"]:\nx[\"annual_reserve\"] = 0.00\nannual_reserve = 0.00\nelse:\nannual_reserve = x[\"annual_reserve\"]\nannual_sum = annual_sum + Decimal(annual_reserve)\nindex = next((index for (index, d) in enumerate(qs_annual_data) if d[\"system_name\"] == system_name), None)\nqs_annual_data[index][\"values\"] = float(qs_annual_data[index][\"values\"]) + float(annual_reserve)\n###### End Annual Reserve  #########\nqs = [\n{\n'id': 'renewal_cost', \n\"title\": \"Renewal costs of assets\",\n\"qs\": qs_renewal, \n'type': 'non_stacked', \n'sum': {\"sum\": renewal_sum},\n'description': 'Replacement costs are based on current available costs and include the following components: Capital Costs - 65%, Contingency - 15%, Design - 10%, Inspections and Removal - 10%. As a starting point, a default replacement cost is applied for each asset type.  However, in some cases, where the above general formula is not applicable, or requires significantly less or more effort in one of the above areas, a custom cost might have been applied. This value will override the default value.'\n},              \n{\n'id': 'maintenenance_cost', \n\"title\": \"Maintenance costs of assets\",\n\"qs\": qs_maintenance, \n'type': 'non_stacked',\n'sum': {\"sum\": maintenance_sum},\n'description': 'Maintenance costs are the estimated annual cost to maintain assets. As a starting point, a default value of 10% of the renewal cost is used'\n},   \n{\n'id': 'annual_reserve', \n\"title\": \"Annual Average Infrastructure Demand\",\n\"qs\": qs_annual_data, \n'type': 'non_stacked',\n'sum': {'sum': annual_sum},\n'description':  \"This graph uses lifespan projections and renewal costs for a long-term outlook of  infrastructure. This projection is theoretical and is not a realistic indication of spending timelines. A valuable output of this projection is an annualized infrastructure demand, indicated as a dotted line on the graph. This annualized value is obtained by dividing the renewal cost by the lifespan for each asset in the database and then summing the total. As lifespan and renewal cost data are updated, the annual infrastructure demand will update. The annual infrastructure demand could be lowered by committing to operations and maintenance programs to extend lifespans, deciding to rehabilitate versus replace, and more. The values shown in the graph is based on current $ values and the actual value of this average annual investment will increase over time with inflation.\"\n},   \n{\n'id': 'system_risk_renewal', \n\"title\": \"Risk By System\",\n\"qs\": qs_renewal_cost_of_assets, \n\"formatted\": _dashboard.stacked_a(qs_renewal_cost_of_assets),\n\"total_bottom\": _dashboard.stacked_a_total(_dashboard.stacked_a(qs_renewal_cost_of_assets)),\n'type': 'stacked_a',\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': 'A risk value is obtained by combining Probability of Failure  (PoF) and Consequence of Failure (CoF) values as per the following matrix. It is common asset management practice to shift the matrix in favour of the consequence of failure,'\n},        \n{\n'id': 'remaining_years_renewal_system', \n\"title\": \"Remaining Years by Renewal Cost by System\",\n\"qs\": _remaining_years_renewal_cost, \n\"formatted\": _dashboard.stacked_b_list(system_names),\n\"total\": _dashboard.stacked_b_total(_dashboard.stacked_b_list(system_names), system_names=system_names),\n\"graph\": _dashboard.stacked_b_graph(_dashboard.stacked_b_list(system_names), system_names=system_names),\n\"pdf_table_1\": _dashboard.pdf_table_1(_dashboard.stacked_b_list(system_names)),\n\"pdf_table_2\": _dashboard.pdf_table_2(_dashboard.stacked_b_list(system_names)),\n'type': 'stacked_b',\n'system_names': system_names,\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': ''\n},   \n{\n'id': 'remaining_years_renewal_risk', \n\"title\": \"Remaining Years by Renewal Cost by Risk\",\n\"qs\": remaining_years_renewal_risk_cost, \n\"formatted\":  _dashboard.stacked_c_list(),\n\"graph\":  _dashboard.stacked_c_graph( _dashboard.stacked_c_list()),\n\"total\": _dashboard.stacked_c_total( _dashboard.stacked_c_list()),\n\"pdf_table_1\": _dashboard.pdf_table_1(_dashboard.stacked_c_list()),\n\"pdf_table_2\": _dashboard.pdf_table_2(_dashboard.stacked_c_list()),\n'type': 'stacked_c',\n'risk_levels': _dashboard.risk_level_list,\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': ''\n},  \n]\nreturn qs\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData.summary_cof","title":"summary_cof  <code>staticmethod</code>","text":"<pre><code>summary_cof(community: Community) -&gt; dict\n</code></pre> <p>Return summary of cof for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_cof(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of cof for specific community\n    The return will be grouped by class\n    \"\"\"\ncof_dict = ReporterData._summary(community, 'cof_name')\nfor val in cof_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn cof_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData.summary_pof","title":"summary_pof  <code>staticmethod</code>","text":"<pre><code>summary_pof(community: Community) -&gt; dict\n</code></pre> <p>Return summary of pof for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_pof(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of pof for specific community\n    The return will be grouped by class\n    \"\"\"\npof_dict = ReporterData._summary(community, 'pof_name')\nfor val in pof_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn pof_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.ReporterData.summary_risk","title":"summary_risk  <code>staticmethod</code>","text":"<pre><code>summary_risk(community: Community) -&gt; dict\n</code></pre> <p>Return summary of risk for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_risk(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of risk for specific community\n    The return will be grouped by class\n    \"\"\"\nrisk_dict = ReporterData._summary(community, 'risk_level')\nfor val in risk_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn risk_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.Risk","title":"civitas.admin.Risk","text":"<p>               Bases: <code>Model</code></p> <p>Probability of Failure</p>"},{"location":"developer/manual/civitas/#civitas.admin.System","title":"civitas.admin.System","text":"<p>               Bases: <code>_Term</code></p> <p>System is a collection of all of feature</p>"},{"location":"developer/manual/civitas/#civitas.admin.SystemAdmin","title":"civitas.admin.SystemAdmin","text":"<p>               Bases: <code>ModelAdmin</code></p>"},{"location":"developer/manual/civitas/#civitas.admin.SystemAdmin.province","title":"province","text":"<pre><code>province(obj)\n</code></pre> <p>Return province</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>System</code> required <p>Returns:</p> Type Description Source code in <code>django_project/civitas/admin/community.py</code> <pre><code>def province(self, obj):\n\"\"\" Return province\n    :param obj:\n    :type obj: System\n    :return:\n    \"\"\"\nreturn obj.community.region.province\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.SystemAdmin.region","title":"region","text":"<pre><code>region(obj)\n</code></pre> <p>Return region</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>System</code> required <p>Returns:</p> Type Description Source code in <code>django_project/civitas/admin/community.py</code> <pre><code>def region(self, obj):\n\"\"\" Return region\n    :param obj:\n    :type obj: System\n    :return:\n    \"\"\"\nreturn obj.community.region\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.admin.Unit","title":"civitas.admin.Unit","text":"<p>               Bases: <code>_Term</code></p> <p>Unit</p>"},{"location":"developer/manual/civitas/#api","title":"API","text":""},{"location":"developer/manual/civitas/#civitas.api","title":"civitas.api","text":""},{"location":"developer/manual/civitas/#civitas.api.AssetClassAPI","title":"civitas.api.AssetClassAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.AssetClassAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\ndata = []\nsql = f\"\"\"SELECT DISTINCT \n            mv_features.asset_sub_class, \n            mv_features.asset_identifier,\n            mv_features.def_stylename,\n            mv_features.type,\n            asset_class.description \n            FROM asset_class \n            LEFT JOIN mv_features ON mv_features.asset_identifier = asset_class.name \n            WHERE mv_features.community_id = {pk};\"\"\"\nwith connections[settings.CIVITAS_DATABASE].cursor() as cursor:\ncursor.execute(sql)\nrows = cursor.fetchall()\nfor row in rows:\nasset_sub_class = row[0]\nasset_identifier = row[1]\ndef_stylename = row[2]\nasset_type = row[3]\nasset_class = row[4]\nif not any(d['asset_class'] == asset_class for d in data):\ndata.append({\n\"asset_class\": asset_class, \n\"asset_identifier\": asset_identifier, \n\"asset_sub_class\": [{'asset': asset_sub_class, 'type': [asset_type]}], \n\"def_stylename\": [def_stylename]\n})\nelse:\nindex = [i for i,_ in enumerate(data) if _['asset_class'] == asset_class][0]    \nif not any(d['asset'] == asset_sub_class for d in data[index][\"asset_sub_class\"]):\ndata[index][\"asset_sub_class\"].append({'asset': asset_sub_class, 'type': [asset_type]})\nelse:\n_index = [i for i,_ in enumerate(data[index][\"asset_sub_class\"]) if _['asset'] == asset_sub_class][0]  \ndata[index][\"asset_sub_class\"][_index][\"type\"].append(asset_type)\nreturn Response(\ndata\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataCustomAPI","title":"civitas.api.AssetDataCustomAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataCustomAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\ndata = []\nsql = f\"SELECT DISTINCT system_name, asset_identifier FROM mv_features WHERE community_id = {pk};\"\nwith connections[settings.CIVITAS_DATABASE].cursor() as cursor:\ncursor.execute(sql)\nrows = cursor.fetchall()\nfor row in rows:\nsystem_name = row[0]\nasset_identifier = row[1]\nif not any(d['system_name'] == system_name for d in data):\ndata.append({\"system_name\": system_name, \"asset_identifier\": [asset_identifier]})\nelse:\nindex = [i for i,_ in enumerate(data) if _['system_name'] == system_name][0]\ndata[index][\"asset_identifier\"].append(asset_identifier)\nreturn Response(\ndata\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataCustomAPI.post","title":"post","text":"<pre><code>post(request)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>@method_decorator(csrf_exempt)\ndef post(self, request):\n\"\"\" Return data of features \"\"\"\npk = request.POST[\"pk\"]\nselected  = request.POST.getlist(\"selected[]\")\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nfinal_list = []\nfor item in selected:\nfinal_list.append(ReporterData._showcustom(community, item))\nprint(final_list)\nreturn Response(\nfinal_list\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataDefaultAPI","title":"civitas.api.AssetDataDefaultAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataDefaultAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nreturn Response(\nReporterData._showdefault(community)\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataDetailedAPI","title":"civitas.api.AssetDataDetailedAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataDetailedAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nreturn Response(\nReporterData._showdetailed(community)\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataDownloadAPI","title":"civitas.api.AssetDataDownloadAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataDownloadAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nreturn Response(\nReporterData._showall(community)\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataTable","title":"civitas.api.AssetDataTable","text":"<pre><code>AssetDataTable()\n</code></pre> <p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def __init__(self):\nself.features = None\nself.obj_paginator = None\nself.page_range = None\nself.community_id = None\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetDataTable.get","title":"get","text":"<pre><code>get(request, pk, page_num)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk, page_num):\n\"\"\" Return data of features \"\"\"\nself.community_id  = get_object_or_404(\nCommunity, pk=pk\n)\n#get data\nself.features = ReporterData._showall(self.community_id )\nper_page = 10\nself.obj_paginator = Paginator(self.features, per_page)\npage = self.obj_paginator.page(page_num).object_list\nself.page_range = self.obj_paginator.page_range\ncontext = {\n'page': list(page),\n'page_range': list(self.page_range)\n}\nreturn Response(context)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.AssetSubClassAPI","title":"civitas.api.AssetSubClassAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.AssetSubClassAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\ndata = []\nsql = f\"SELECT DISTINCT asset_sub_class, asset_identifier FROM mv_features WHERE community_id = {pk};\"\nwith connections[settings.CIVITAS_DATABASE].cursor() as cursor:\ncursor.execute(sql)\nrows = cursor.fetchall()\nfor row in rows:\nasset_sub_class = row[0]\nasset_identifier = row[1]\nif not any(d['asset_sub_class'] == asset_sub_class for d in data):\ndata.append({\"asset_sub_class\": asset_sub_class, \"asset_identifier\": [asset_identifier]})\nelse:\nindex = [i for i,_ in enumerate(data) if _['asset_sub_class'] == asset_sub_class][0]\ndata[index][\"asset_identifier\"].append(asset_identifier)\nreturn Response(\ndata\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.Community","title":"civitas.api.Community","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative community</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityAPI","title":"civitas.api.CommunityAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return community list</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityAPI.get","title":"get","text":"<pre><code>get(request)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request):\n\"\"\" Return data of features \"\"\"\nreturn Response(\nCommunitySerializer(\nrequest.user.communities.order_by('name'), many=True\n).data\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunityAccessPermission","title":"civitas.api.CommunityAccessPermission","text":"<p>               Bases: <code>BasePermission</code></p> <p>Check if community is accessible by user</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityCOFAPI","title":"civitas.api.CommunityCOFAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_cof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityCOFAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nreturn Response(\nReporterData.summary_cof(community)\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunityDetailAPI","title":"civitas.api.CommunityDetailAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return community list</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityDetailAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\ndetail = CommunityDetailSerializer(community).data\norganisation = community.organisation\ndetail['organisation'] = OrganisationSerializer(\norganisation, user=request.user).data\nreturn Response(detail)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunityDetailSerializer","title":"civitas.api.CommunityDetailSerializer","text":"<p>               Bases: <code>CommunitySerializer</code></p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityDetailSerializer.get_systems","title":"get_systems","text":"<pre><code>get_systems(obj)\n</code></pre> <p>Return system of community</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Community</code> required Source code in <code>django_project/civitas/serializer/community.py</code> <pre><code>def get_systems(self, obj):\n\"\"\" Return system of community\n    :param obj:\n    :type obj: Community\n    \"\"\"\nreturn SystemSerializer(obj.system_set.order_by('name'), many=True).data\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunityPOFAPI","title":"civitas.api.CommunityPOFAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityPOFAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nreturn Response(\nReporterData.summary_pof(community)\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunityRiskAPI","title":"civitas.api.CommunityRiskAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_risk of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.CommunityRiskAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nreturn Response(\nReporterData.summary_risk(community)\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunitySerializer","title":"civitas.api.CommunitySerializer","text":"<p>               Bases: <code>ModelSerializer</code></p>"},{"location":"developer/manual/civitas/#civitas.api.CommunitySerializer.get_province","title":"get_province","text":"<pre><code>get_province(obj)\n</code></pre> <p>Return province of community</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Community</code> required Source code in <code>django_project/civitas/serializer/community.py</code> <pre><code>def get_province(self, obj):\n\"\"\" Return province of community\n    :param obj:\n    :type obj: Community\n    \"\"\"\nreturn obj.region.province.name\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.CommunitySerializer.get_region","title":"get_region","text":"<pre><code>get_region(obj)\n</code></pre> <p>Return region of community</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>Community</code> required Source code in <code>django_project/civitas/serializer/community.py</code> <pre><code>def get_region(self, obj):\n\"\"\" Return region of community\n    :param obj:\n    :type obj: Community\n    \"\"\"\nreturn obj.region.name\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureBase","title":"civitas.api.FeatureBase","text":"<p>               Bases: <code>Model</code></p> <p>Model for base feature. Every feature needs to override this model</p>"},{"location":"developer/manual/civitas/#civitas.api.FeatureBase.calculation","title":"calculation","text":"<pre><code>calculation()\n</code></pre> <p>Calculate all field that needs calculation</p> Source code in <code>django_project/civitas/models/feature/feature_base.py</code> <pre><code>def calculation(self):\n\"\"\" Calculate all field that needs calculation\"\"\"\nif self.featurecalculation_set.all().count():\nreturn self.featurecalculation_set.all()[0]\nreturn None\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureBase.lifespan","title":"lifespan","text":"<pre><code>lifespan()\n</code></pre> <p>Return lifespan of feature</p> Source code in <code>django_project/civitas/models/feature/feature_base.py</code> <pre><code>def lifespan(self):\n\"\"\" Return lifespan of feature\"\"\"\nif not self.type:\nreturn None\nreturn self.type.lifespan\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureDataGeoSerializer","title":"civitas.api.FeatureDataGeoSerializer","text":"<p>               Bases: <code>GeoFeatureModelSerializer</code></p>"},{"location":"developer/manual/civitas/#civitas.api.FeatureDataGeoSerializer.get_geometry","title":"get_geometry","text":"<pre><code>get_geometry(obj)\n</code></pre> <p>Get geometry</p> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_geometry(self, obj):\n\"\"\" Get geometry\n    :type obj: FeatureBase\n    \"\"\"\ntry:\nreturn obj.featuregeometry.geometry()\nexcept FeatureGeometry.DoesNotExist:\nreturn None\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureDataGeoSerializer.get_identifier","title":"get_identifier","text":"<pre><code>get_identifier(obj: FeatureBase)\n</code></pre> <p>identifier of object</p> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_identifier(self, obj: FeatureBase):\n\"\"\" identifier of object\n    :type obj: ReporterData\n    \"\"\"\nreturn (\nf'{obj.the_class.description}.'\nf'{obj.sub_class.name}.{obj.id}'\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureDataGeoSerializer.to_representation","title":"to_representation","text":"<pre><code>to_representation(obj: FeatureBase)\n</code></pre> <p>Additional properties</p> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def to_representation(self, obj: FeatureBase):\n\"\"\" Additional properties\n    :type obj: FeatureBase\n    \"\"\"\ndata = super(FeatureDataGeoSerializer, self).to_representation(obj)\ntry:\nreporter_data = ReporterData.objects.get(feature_id=obj.id)\nexcept ReporterData.DoesNotExist:\nreporter_data = None\nsystem = obj.system\ncommunity = system.community if system else None\nregion = community.region if community else None\nprovince = region.province if region else None\ndata['properties']['feature_id'] = obj.id\ndata['properties']['Label'] = obj.display_label\ndata['properties']['Province'] = province.name if province else None\ndata['properties']['Region'] = region.name if region else None\ndata['properties']['Community'] = community.name if community else None\ndata['properties']['System'] = system.name if system else None\ndata['properties']['Asset Class'] = obj.the_class.description if obj.the_class else None\ndata['properties']['Asset Sub Class'] = obj.sub_class.name if obj.sub_class else None\ndata['properties']['Condition'] = obj.condition.name if obj.condition else None\ndata['properties']['Type'] = obj.type.name if obj.type else None\ndata['properties']['Description'] = obj.description\nfor feature_property in obj.featureproperty_set.all():\ndata['properties'][feature_property.property.name.title()] = feature_property.value_text\ndata['properties']['Install Date'] = obj.install_date\ndata['properties']['Inspection Date'] = obj.inspection_date\ndata['properties']['Lifespan'] = reporter_data.lifespan if reporter_data else None\ndata['properties']['Age'] = reporter_data.age if reporter_data else None\ndata['properties']['Remaining Years'] = reporter_data.remaining_years if reporter_data else None\ndata['properties']['Risk Level'] = reporter_data.risk_level if reporter_data else None\ndata['properties']['Probability of Failure'] = reporter_data.pof_name if reporter_data else None\ndata['properties']['Consequence of Failure'] = reporter_data.cof_name if reporter_data else None\ndata['properties']['Renewal Cost'] = reporter_data.renewal_cost if reporter_data else None\ndata['properties']['Annual Reserve'] = reporter_data.annual_reserve if reporter_data else None\ndata['properties']['Maintenance Cost'] = reporter_data.maintenance_cost if reporter_data else None\nreturn data\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeojsonDetailAPI","title":"civitas.api.FeatureGeojsonDetailAPI","text":"<p>               Bases: <code>APIView</code></p> <p>get: Return geojson of a feature</p>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeojsonDetailAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/features.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\nfeature = get_object_or_404(FeatureBase, pk=pk)\nreturn Response(\nFeatureGeometryGeoSerializer(feature).data\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer","title":"civitas.api.FeatureGeometryGeoSerializer","text":"<p>               Bases: <code>GeoFeatureModelSerializer</code></p>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_cof","title":"get_cof","text":"<pre><code>get_cof(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_cof(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn obj.cof.name if obj.cof else '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_condition","title":"get_condition","text":"<pre><code>get_condition(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_condition(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn obj.condition.name if obj.condition else '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_geometry","title":"get_geometry","text":"<pre><code>get_geometry(obj)\n</code></pre> <p>Get geometry</p> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_geometry(self, obj):\n\"\"\" Get geometry\n    :type obj: FeatureBase\n    \"\"\"\ntry:\nreturn obj.featuregeometry.geometry()\nexcept FeatureGeometry.DoesNotExist:\nreturn None\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_pof","title":"get_pof","text":"<pre><code>get_pof(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_pof(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn obj.pof.name if obj.pof else '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_quantity","title":"get_quantity","text":"<pre><code>get_quantity(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_quantity(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn '{} {}'.format(obj.quantity, obj.sub_class.unit.name if obj.sub_class else '')\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_sub_class","title":"get_sub_class","text":"<pre><code>get_sub_class(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_sub_class(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn obj.sub_class.name if obj.sub_class else '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_system","title":"get_system","text":"<pre><code>get_system(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_system(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn obj.system.name if obj.system else '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.get_type","title":"get_type","text":"<pre><code>get_type(obj)\n</code></pre> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def get_type(self, obj):\n\"\"\"\n    :type obj: FeatureBase\n    \"\"\"\nreturn obj.type.name if obj.type else '-'\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.FeatureGeometryGeoSerializer.to_representation","title":"to_representation","text":"<pre><code>to_representation(instance)\n</code></pre> <p>Additional properties</p> Source code in <code>django_project/civitas/serializer/features.py</code> <pre><code>def to_representation(self, instance):\n\"\"\" Additional properties\n    :type instance: FeatureBase\n    \"\"\"\ndata = super(FeatureGeometryGeoSerializer, self).to_representation(instance)\ndata['properties']['class'] = instance.the_class.name if instance.the_class else '-'\nreturn data\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData","title":"civitas.api.ReporterData","text":"<p>               Bases: <code>Model</code></p> <p>Materialized View for reported data</p>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData.by_community","title":"by_community  <code>staticmethod</code>","text":"<pre><code>by_community(community: Community) -&gt; dict\n</code></pre> <p>Return reporter_data by community</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef by_community(community: Community) -&gt; dict:\n\"\"\"\n    Return reporter_data by community\n    \"\"\"\nreturn ReporterData.objects.filter(\ncommunity_id=community.id\n)[0:2]\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData.by_community_all","title":"by_community_all  <code>staticmethod</code>","text":"<pre><code>by_community_all(community: Community) -&gt; dict\n</code></pre> <p>Return reporter_data by community</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef by_community_all(community: Community) -&gt; dict:\n\"\"\"\n    Return reporter_data by community\n    \"\"\"\nreturn ReporterData._showall(community)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData.dashboard","title":"dashboard  <code>staticmethod</code>","text":"<pre><code>dashboard(community: Community) -&gt; dict\n</code></pre> <p>dashboard</p> <p>Args:     community (Community): community object</p> <p>Returns:     array: dictionary of each cost breakdown</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef dashboard(community: Community) -&gt; dict:\n\"\"\"_dashboard_\n    Args:\n        community (Community): community object\n    Returns:\n        array: dictionary of each cost breakdown\n    \"\"\"\ndata = ReporterData.objects.filter(\ncommunity_id=community.id\n).exclude(\nsystem_name__in=[\n'Non-Municipal Infrastructure',\n'Abandoned Infrastructure'\n]\n)\n_dashboard = DashboardData(data=data)  \nsystem_names = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name') \\\n        .distinct() \\\n        .annotate(label=Concat('system_name', models.Value('')))\n##### Renewal costs of assets #####\n_renewal_cost_of_assets_a = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'renewal_cost')\n_data_renewal= [{'system_name': val[\"system_name\"], 'renewal_cost': val['renewal_cost']} for val in _renewal_cost_of_assets_a]\nrenewal_sum = 0\nqs_renewal = []\nfor name in system_names:\nqs_renewal.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_renewal:\nsystem_name = x[\"system_name\"]\nif str(x[\"renewal_cost\"]) == 'NaN' or not x[\"renewal_cost\"]:\nx[\"renewal_cost\"] = 0.00\nelif x[\"renewal_cost\"]:\nrenewal_sum = renewal_sum + float(x[\"renewal_cost\"])\nindex = next((index for (index, d) in enumerate(qs_renewal) if d[\"system_name\"] == system_name), None)\nqs_renewal[index][\"values\"] = float(qs_renewal[index][\"values\"]) + float(x[\"renewal_cost\"])\n#### End Renewal costs of assets ####\n##### Maintenance #####\n_maintenance_cost_of_assets = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'maintenance_cost')\n_data_maintenace = [{'system_name': val[\"system_name\"], 'maintenance_cost': val['maintenance_cost']} for val in _maintenance_cost_of_assets]\nmaintenance_sum = 0\nqs_maintenance = []\nfor name in system_names:\nqs_maintenance.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_maintenace:\nsystem_name = x[\"system_name\"]\nif str(x[\"maintenance_cost\"]) == 'NaN' or not x[\"maintenance_cost\"]:\nx[\"maintenance_cost\"] = 0.00\nelif x[\"maintenance_cost\"]:\nmaintenance_sum = maintenance_sum + float(x[\"maintenance_cost\"])\nindex = next((index for (index, d) in enumerate(qs_maintenance) if d[\"system_name\"] == system_name), None)\nqs_maintenance[index][\"values\"] = float(qs_maintenance[index][\"values\"]) + float(x[\"maintenance_cost\"])\n#### End Maintenance ####\n#### Risk Renewal####\n_risk_renewal_of_assets = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'risk_level', 'renewal_cost')\n_data_renewal_cost_of_assets = [{'system_name': val[\"system_name\"], 'renewal_cost': val['renewal_cost'], 'risk_level': val['risk_level']} \\\n                                     for val in _risk_renewal_of_assets]\nqs_renewal_cost_of_assets = []\nfor risk in _dashboard.risk_level_list:\nfor name in system_names:\nqs_renewal_cost_of_assets.append({\"system_name\": name[\"system_name\"], \n\"risk_level\": risk[\"risk_level\"], \n\"label\": name[\"label\"],\n\"values\": 0.0})\nrisk_renewal_of_assets_sum = 0\nfor x in _data_renewal_cost_of_assets:\nsystem_name = x[\"system_name\"]\nrisk_level = ''\nif not x['risk_level'] is None:\nrisk_level = x[\"risk_level\"].strip()\nelse:\nrisk_level = 'None'\nprint(\"risk_level\", risk_level)\nif str(x[\"renewal_cost\"]) == 'NaN' or not x[\"renewal_cost\"]:\nx[\"renewal_cost\"] = 0.00\nelse:\nrisk_renewal_of_assets_sum = risk_renewal_of_assets_sum + Decimal(x[\"renewal_cost\"])\nindex = next((index for (index, d) in enumerate(qs_renewal_cost_of_assets) \\\n                       if d[\"system_name\"] == system_name and d[\"risk_level\"] == risk_level), None)\nif index :\nqs_renewal_cost_of_assets[index][\"values\"] = float(qs_renewal_cost_of_assets[index][\"values\"]) + float(x[\"renewal_cost\"])\n#### END Risk Renewal####\n#### remaining years renewal cost ####\n_remaining_years_renewal_cost = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'renewal_cost') \n#### End remaining years renewal cost ####\nremaining_years_renewal_risk_cost = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'risk_level') \\\n        .distinct() \\\n        .annotate(label=Concat('system_name', models.Value('')), values=Sum('renewal_cost'))\n###### Annual Reserve  #########\n_annual_reserve = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'annual_reserve') \n_data_annual_reserve = [{'system_name': val[\"system_name\"], 'annual_reserve': val['annual_reserve']} for val in _annual_reserve]\nannual_sum = 0\nqs_annual_data = []\nfor name in system_names:\nqs_annual_data.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_annual_reserve:\nsystem_name = x[\"system_name\"]\nannual_reserve = 0\nif str(x[\"annual_reserve\"]) == 'NaN' or not x[\"annual_reserve\"]:\nx[\"annual_reserve\"] = 0.00\nannual_reserve = 0.00\nelse:\nannual_reserve = x[\"annual_reserve\"]\nannual_sum = annual_sum + Decimal(annual_reserve)\nindex = next((index for (index, d) in enumerate(qs_annual_data) if d[\"system_name\"] == system_name), None)\nqs_annual_data[index][\"values\"] = float(qs_annual_data[index][\"values\"]) + float(annual_reserve)\n###### End Annual Reserve  #########\nqs = [\n{\n'id': 'renewal_cost', \n\"title\": \"Renewal costs of assets\",\n\"qs\": qs_renewal, \n'type': 'non_stacked', \n'sum': {\"sum\": renewal_sum},\n'description': 'Replacement costs are based on current available costs and include the following components: Capital Costs - 65%, Contingency - 15%, Design - 10%, Inspections and Removal - 10%. As a starting point, a default replacement cost is applied for each asset type.  However, in some cases, where the above general formula is not applicable, or requires significantly less or more effort in one of the above areas, a custom cost might have been applied. This value will override the default value.'\n},              \n{\n'id': 'maintenenance_cost', \n\"title\": \"Maintenance costs of assets\",\n\"qs\": qs_maintenance, \n'type': 'non_stacked',\n'sum': {\"sum\": maintenance_sum},\n'description': 'Maintenance costs are the estimated annual cost to maintain assets. As a starting point, a default value of 10% of the renewal cost is used'\n},   \n{\n'id': 'annual_reserve', \n\"title\": \"Annual Average Infrastructure Demand\",\n\"qs\": qs_annual_data, \n'type': 'non_stacked',\n'sum': {'sum': annual_sum},\n'description':  \"This graph uses lifespan projections and renewal costs for a long-term outlook of  infrastructure. This projection is theoretical and is not a realistic indication of spending timelines. A valuable output of this projection is an annualized infrastructure demand, indicated as a dotted line on the graph. This annualized value is obtained by dividing the renewal cost by the lifespan for each asset in the database and then summing the total. As lifespan and renewal cost data are updated, the annual infrastructure demand will update. The annual infrastructure demand could be lowered by committing to operations and maintenance programs to extend lifespans, deciding to rehabilitate versus replace, and more. The values shown in the graph is based on current $ values and the actual value of this average annual investment will increase over time with inflation.\"\n},   \n{\n'id': 'system_risk_renewal', \n\"title\": \"Risk By System\",\n\"qs\": qs_renewal_cost_of_assets, \n\"formatted\": _dashboard.stacked_a(qs_renewal_cost_of_assets),\n\"total_bottom\": _dashboard.stacked_a_total(_dashboard.stacked_a(qs_renewal_cost_of_assets)),\n'type': 'stacked_a',\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': 'A risk value is obtained by combining Probability of Failure  (PoF) and Consequence of Failure (CoF) values as per the following matrix. It is common asset management practice to shift the matrix in favour of the consequence of failure,'\n},        \n{\n'id': 'remaining_years_renewal_system', \n\"title\": \"Remaining Years by Renewal Cost by System\",\n\"qs\": _remaining_years_renewal_cost, \n\"formatted\": _dashboard.stacked_b_list(system_names),\n\"total\": _dashboard.stacked_b_total(_dashboard.stacked_b_list(system_names), system_names=system_names),\n\"graph\": _dashboard.stacked_b_graph(_dashboard.stacked_b_list(system_names), system_names=system_names),\n\"pdf_table_1\": _dashboard.pdf_table_1(_dashboard.stacked_b_list(system_names)),\n\"pdf_table_2\": _dashboard.pdf_table_2(_dashboard.stacked_b_list(system_names)),\n'type': 'stacked_b',\n'system_names': system_names,\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': ''\n},   \n{\n'id': 'remaining_years_renewal_risk', \n\"title\": \"Remaining Years by Renewal Cost by Risk\",\n\"qs\": remaining_years_renewal_risk_cost, \n\"formatted\":  _dashboard.stacked_c_list(),\n\"graph\":  _dashboard.stacked_c_graph( _dashboard.stacked_c_list()),\n\"total\": _dashboard.stacked_c_total( _dashboard.stacked_c_list()),\n\"pdf_table_1\": _dashboard.pdf_table_1(_dashboard.stacked_c_list()),\n\"pdf_table_2\": _dashboard.pdf_table_2(_dashboard.stacked_c_list()),\n'type': 'stacked_c',\n'risk_levels': _dashboard.risk_level_list,\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': ''\n},  \n]\nreturn qs\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData.summary_cof","title":"summary_cof  <code>staticmethod</code>","text":"<pre><code>summary_cof(community: Community) -&gt; dict\n</code></pre> <p>Return summary of cof for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_cof(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of cof for specific community\n    The return will be grouped by class\n    \"\"\"\ncof_dict = ReporterData._summary(community, 'cof_name')\nfor val in cof_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn cof_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData.summary_pof","title":"summary_pof  <code>staticmethod</code>","text":"<pre><code>summary_pof(community: Community) -&gt; dict\n</code></pre> <p>Return summary of pof for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_pof(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of pof for specific community\n    The return will be grouped by class\n    \"\"\"\npof_dict = ReporterData._summary(community, 'pof_name')\nfor val in pof_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn pof_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterData.summary_risk","title":"summary_risk  <code>staticmethod</code>","text":"<pre><code>summary_risk(community: Community) -&gt; dict\n</code></pre> <p>Return summary of risk for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_risk(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of risk for specific community\n    The return will be grouped by class\n    \"\"\"\nrisk_dict = ReporterData._summary(community, 'risk_level')\nfor val in risk_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn risk_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterDataDownloadAPI","title":"civitas.api.ReporterDataDownloadAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Download csv file for the reporter data</p>"},{"location":"developer/manual/civitas/#civitas.api.ReporterDataDownloadAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\nresponse = HttpResponse(content_type='text/csv')\nresponse['Content-Disposition'] = f'attachment; filename=\"{community.name} Reporter Data.csv\"'\ndata = ReporterDataSerializer(ReporterData.by_community(community), many=True).data\nheader = ReporterDataSerializer.Meta.fields\nwriter = csv.DictWriter(response, fieldnames=header)\nwriter.writeheader()\nfor row in data:\nwriter.writerow(row)\nreturn response\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.ReporterDataGeojsonDetailAPI","title":"civitas.api.ReporterDataGeojsonDetailAPI","text":"<p>               Bases: <code>APIView</code></p> <p>get: Return geojson of a feature</p>"},{"location":"developer/manual/civitas/#civitas.api.ReporterDataGeojsonDetailAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/features.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\nfeature = get_object_or_404(FeatureBase, pk=pk)\nreturn Response(\nFeatureDataGeoSerializer(feature).data\n)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.api.SystemNameAPI","title":"civitas.api.SystemNameAPI","text":"<p>               Bases: <code>APIView</code></p> <p>Return summary_pof of ReporterData</p>"},{"location":"developer/manual/civitas/#civitas.api.SystemNameAPI.get","title":"get","text":"<pre><code>get(request, pk)\n</code></pre> <p>Return data of features</p> Source code in <code>django_project/civitas/api/community.py</code> <pre><code>def get(self, request, pk):\n\"\"\" Return data of features \"\"\"\ncommunity = get_object_or_404(\nCommunity, pk=pk\n)\ndata = []\nsql = f\"SELECT DISTINCT system_name, asset_identifier FROM mv_features WHERE community_id = {pk};\"\nwith connections[settings.CIVITAS_DATABASE].cursor() as cursor:\ncursor.execute(sql)\nrows = cursor.fetchall()\nfor row in rows:\nsystem_name = row[0]\nasset_identifier = row[1]\nif not any(d['system_name'] == system_name for d in data):\ndata.append({\"system_name\": system_name, \"asset_identifier\": [asset_identifier]})\nelse:\nindex = [i for i,_ in enumerate(data) if _['system_name'] == system_name][0]\ndata[index][\"asset_identifier\"].append(asset_identifier)\nreturn Response(\ndata\n)\n</code></pre>"},{"location":"developer/manual/civitas/#migrations","title":"Migrations","text":""},{"location":"developer/manual/civitas/#civitas.migrations","title":"civitas.migrations","text":""},{"location":"developer/manual/civitas/#models","title":"Models","text":""},{"location":"developer/manual/civitas/#civitas.models","title":"civitas.models","text":""},{"location":"developer/manual/civitas/#civitas.models.AimsoirFeatureCode","title":"civitas.models.AimsoirFeatureCode","text":"<p>               Bases: <code>Model</code></p> <p>AimsoirFeatureCode</p>"},{"location":"developer/manual/civitas/#civitas.models.COF","title":"civitas.models.COF","text":"<p>               Bases: <code>Model</code></p> <p>Consequence of Failure</p>"},{"location":"developer/manual/civitas/#civitas.models.CapitalProject","title":"civitas.models.CapitalProject","text":"<p>               Bases: <code>Model</code></p> <p>Capital project object</p>"},{"location":"developer/manual/civitas/#civitas.models.CapitalProjectFeatureCombination","title":"civitas.models.CapitalProjectFeatureCombination","text":"<p>               Bases: <code>Model</code></p> <p>Capital project feature combinationobject</p>"},{"location":"developer/manual/civitas/#civitas.models.CivicAddress","title":"civitas.models.CivicAddress","text":"<p>               Bases: <code>Model</code></p> <p>Civic Address object</p>"},{"location":"developer/manual/civitas/#civitas.models.Community","title":"civitas.models.Community","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative community</p>"},{"location":"developer/manual/civitas/#civitas.models.Condition","title":"civitas.models.Condition","text":"<p>               Bases: <code>_Term</code></p> <p>Condition of feature 1   very good 2   good 3   fair 4   poor 5   very poor</p>"},{"location":"developer/manual/civitas/#civitas.models.DashboardData","title":"civitas.models.DashboardData","text":"<pre><code>DashboardData(data)\n</code></pre> Source code in <code>django_project/civitas/models/view/dashboard_data.py</code> <pre><code>def __init__(self, data):\nself.data = data\nself.risk_level_list = [\n{\"risk_level\":\"Extreme\", \"index\": 5}, \n{\"risk_level\":\"High\" , \"index\": 4}, \n{\"risk_level\":\"Medium\" , \"index\": 3}, \n{\"risk_level\":\"Low\", \"index\": 2}, \n{\"risk_level\":\"Minimal\", \"index\": 1}, \n{\"risk_level\":\"None\", \"index\": 0}\n]\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.DashboardData.stacked_a","title":"stacked_a","text":"<pre><code>stacked_a(risk_renewal_of_assets)\n</code></pre> <p>risk_renewal_assets_list</p> <p>Returns:     formatted list to be used correctly in table</p> Source code in <code>django_project/civitas/models/view/dashboard_data.py</code> <pre><code>def stacked_a(self, risk_renewal_of_assets):\n\"\"\"risk_renewal_assets_list\n    Returns:\n        formatted list to be used correctly in table\n    \"\"\"\nrisk_renewal_formatted_list = []\ntotal_sum = 0\nfor k in list(risk_renewal_of_assets):\nif k[\"values\"] is not None:\nvalues = k[\"values\"]\nelse:\nvalues = 0\nif k not in risk_renewal_formatted_list:\nrisk_renewal_formatted_list\\\n                .append({\n'system_name': k[\"system_name\"], \n\"risk\": [], \n\"total_value\": 0, \n\"total_per\": 0\n})\ntotal_sum = float(total_sum) + float(values)\nfinal_risk_renewal = [i for j, i in enumerate(risk_renewal_formatted_list) if i not in risk_renewal_formatted_list[:j]]\nfor val in list(risk_renewal_of_assets):\nfor key in final_risk_renewal:\nif key['system_name'] == val[\"system_name\"]:\nvalue = val['risk_level']\nif str(val[\"values\"] ) == \"NaN\" or str(val[\"values\"] ) == \"nan\":\n_values = 0\nelif val[\"values\"] is not None:\n_values = val[\"values\"]\nelse:\n_values = 0\nkey[\"risk\"].append({\"risk_level\": value, \"values\": _values})\nkey[\"total_value\"] = float(key[\"total_value\"]) + float(_values)\nkey[\"total_per\"] = (float(key[\"total_value\"] ) / total_sum) * 100\nreturn final_risk_renewal\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.DashboardData.stacked_b_graph","title":"stacked_b_graph","text":"<pre><code>stacked_b_graph(input_list, system_names)\n</code></pre> <p>remaining_years_renewal_system</p> <p>Returns:     formatted list to be used correctly in graph</p> Source code in <code>django_project/civitas/models/view/dashboard_data.py</code> <pre><code>def stacked_b_graph(self, input_list, system_names):\n\"\"\"remaining_years_renewal_system\n    Returns:\n        formatted list to be used correctly in graph\n    \"\"\"\nformatted_list = []   \n# start with basic list\nfor system in system_names:\nformatted_list\\\n            .append({'name': system[\"system_name\"], \n'type': 'bar', \n'x': [], \n'y': []}\n)\nfor input in input_list:\nfor list in formatted_list:\nfor asset in input['asset']:\nif list['name'] == asset['system_name']:\nlist[\"x\"].append(input[\"remaining_years\"])\nif isinstance(asset[\"values\"], float) or isinstance(asset[\"values\"], Decimal):\nlist[\"y\"].append(float(asset[\"values\"]))\nreturn formatted_list\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.DashboardData.stacked_b_list","title":"stacked_b_list","text":"<pre><code>stacked_b_list(system_names)\n</code></pre> <p>remaining_years_renewal_system</p> <p>Returns:     formatted list to be used correctly in table and graph</p> Source code in <code>django_project/civitas/models/view/dashboard_data.py</code> <pre><code>def stacked_b_list(self, system_names):\n\"\"\"remaining_years_renewal_system\n    Returns:\n        formatted list to be used correctly in table and graph\n    \"\"\"\n# find lowest value\n# lowest = (min(data, key=lambda x:x['remaining_years']))\n# create interval of 5 years\nremaining_years_formatted_list = []\nfor x in range(95, -6, -5):\nremaining_years_formatted_list.append({\n'remaining_years': f\"{x} - {x+4}\", \n'asset': [], \n'total': 0\n})\n# append data to list for interval\nfor k in self.data:\nfor val in remaining_years_formatted_list:\nstr_split = val[\"remaining_years\"].split(\" - \")\nmin = int(str_split[0])\nmax = int(str_split[1])\nif k.remaining_years is not None:\nremaining_years = k.remaining_years \nelse:\nremaining_years = 0\nif min &lt;= remaining_years &lt;= max:\nif min &lt;= remaining_years &lt;= max:\nif str(k.renewal_cost) == \"NaN\":\nrenewal_cost = 0\nelif k.renewal_cost is not None :\nrenewal_cost = k.renewal_cost\nelse:\nrenewal_cost = 0\nif not any(d['system_name'] == k.system_name for d in val['asset']):\nval[\"asset\"]\\\n                        .append({\n'system_name': k.system_name, \n'values': renewal_cost\n})\nval['total'] = val['total'] + renewal_cost\nelse:\nindex = [i for i,_ in enumerate(val['asset']) if _['system_name'] == k.system_name][0]\nval['asset'][index]['values'] = val['asset'][index]['values'] + renewal_cost\nval['total'] = val['total'] + renewal_cost\n# add system names where value is 0 for graph to work correctly\nfor k in remaining_years_formatted_list:\nfor system in system_names:\nif not any(d['system_name'] == system[\"system_name\"] for d in k[\"asset\"]):\nk[\"asset\"]\\\n                    .append({\n'system_name': system[\"system_name\"], \n'values': 0.00\n})\n# sort list alphabetically\nfor k in remaining_years_formatted_list:\nnew_list = sorted(k['asset'], key=operator.itemgetter('system_name'))     \nk['asset'] = new_list\nreturn reversed(remaining_years_formatted_list)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.DashboardData.stacked_c_graph","title":"stacked_c_graph","text":"<pre><code>stacked_c_graph(input_list)\n</code></pre> <p>remaining_years_renewal_system</p> <p>Returns:     formatted list to be used correctly in graph</p> Source code in <code>django_project/civitas/models/view/dashboard_data.py</code> <pre><code>def stacked_c_graph(self, input_list):\n\"\"\"remaining_years_renewal_system\n    Returns:\n        formatted list to be used correctly in graph\n    \"\"\"\nformatted_list = []   \n# start with basic list\nfor risk in self.risk_level_list:\nformatted_list\\\n            .append({\n'name': risk[\"risk_level\"], \n'type': 'bar', 'x': [], 'y': []\n})\nfor input in input_list:\nfor asset in input['risk_level']:\nfor list in formatted_list:\nif list['name'] == asset['level']:\nlist[\"x\"].append(input[\"remaining_years\"])\nlist[\"y\"].append(asset[\"values\"])\nreturn formatted_list\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.DashboardData.stacked_c_list","title":"stacked_c_list","text":"<pre><code>stacked_c_list()\n</code></pre> <p>remaining_years_renewal_system</p> <p>Returns:     formatted list to be used correctly in table and graph</p> Source code in <code>django_project/civitas/models/view/dashboard_data.py</code> <pre><code>def stacked_c_list(self):\n\"\"\"remaining_years_renewal_system\n        Returns:\n            formatted list to be used correctly in table and graph\n        \"\"\"\n# create interval of 5 years\nremaining_years_formatted_list = []\nfor x in range(95, -6, -5):\nremaining_years_formatted_list.append({\n'remaining_years': f\"{x} - {x+4}\", \n'risk_level': [], \n'total': 0\n})\n# append data to list for interval\nfor k in self.data:\nfor val in remaining_years_formatted_list:\nstr_split = val[\"remaining_years\"].split(\" - \")\nmin = int(str_split[0])\nmax = int(str_split[1])\nif k.remaining_years is not None:\nremaining_years = k.remaining_years \nelse:\nremaining_years = 0\nif min &lt;= remaining_years &lt;= max:\nif k.risk_level is None:\nrisk_lev = \"None\"\nelse:\nrisk_lev = k.risk_level.strip()\nrisk_level_index = [i for i,_ in enumerate(self.risk_level_list) if _['risk_level'] == risk_lev][0]\nif not any(d['level'] == risk_lev for d in val['risk_level']):\nif str(k.renewal_cost) == 'NaN':\nval['total'] = float(0.00)\nval[\"risk_level\"]\\\n                            .append({'level': risk_lev, \n'values': 0.00, \n'index': 0\n})\nif k.renewal_cost is not None:\nval[\"risk_level\"]\\\n                                .append({\n'level': risk_lev, \n'values': k.renewal_cost, \n'index': self.risk_level_list[risk_level_index]['index']\n})\nval['total'] = float(val['total']) + float(k.renewal_cost)\nelse: \nval['total'] = float(0.00)\nval[\"risk_level\"]\\\n                            .append({'level': risk_lev, \n'values': 0.00, \n'index': 0\n})\nelse:\nindex = [i for i,_ in enumerate(val['risk_level']) if _['level'] == risk_lev][0]\nif str(k.renewal_cost) == 'NaN':\nval['risk_level'][index]['values'] = float(val['risk_level'][index]['values']) + float(0)\nval['total'] = float(val['total']) + float(0)\nelif k.renewal_cost is not None:\nval['risk_level'][index]['values'] = float(val['risk_level'][index]['values']) + float(k.renewal_cost)\nval['total'] = float(val['total']) + float(k.renewal_cost)\n# add system names where value is 0 for graph to work correctly\nfor k in remaining_years_formatted_list:\nfor lev in self.risk_level_list:\nif not any(d['level'] == lev[\"risk_level\"] for d in k[\"risk_level\"]):\nrisk_level_index = [i for i,_ in enumerate(self.risk_level_list) if _['risk_level'] == lev[\"risk_level\"]][0]\nk[\"risk_level\"]\\\n                        .append({\n'level': lev[\"risk_level\"], \n'values': 0.00, \n'index': self.risk_level_list[risk_level_index]['index']\n})\n# sort list from highest to lowest\nfor k in remaining_years_formatted_list:\nnew_list = sorted(k['risk_level'], key=operator.itemgetter('index'))     \nk['risk_level'] = reversed(new_list)\nreturn reversed(remaining_years_formatted_list)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.Deterioration","title":"civitas.models.Deterioration","text":"<p>               Bases: <code>_Term</code></p> <p>The process of becoming progressively worse. Contains name and the equation</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureBase","title":"civitas.models.FeatureBase","text":"<p>               Bases: <code>Model</code></p> <p>Model for base feature. Every feature needs to override this model</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureBase.calculation","title":"calculation","text":"<pre><code>calculation()\n</code></pre> <p>Calculate all field that needs calculation</p> Source code in <code>django_project/civitas/models/feature/feature_base.py</code> <pre><code>def calculation(self):\n\"\"\" Calculate all field that needs calculation\"\"\"\nif self.featurecalculation_set.all().count():\nreturn self.featurecalculation_set.all()[0]\nreturn None\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.FeatureBase.lifespan","title":"lifespan","text":"<pre><code>lifespan()\n</code></pre> <p>Return lifespan of feature</p> Source code in <code>django_project/civitas/models/feature/feature_base.py</code> <pre><code>def lifespan(self):\n\"\"\" Return lifespan of feature\"\"\"\nif not self.type:\nreturn None\nreturn self.type.lifespan\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.FeatureClass","title":"civitas.models.FeatureClass","text":"<p>               Bases: <code>_Term</code></p> <p>The first Level of the Asset Hierarchy as defined in \"Background\" Sheet ie. TRN = Transportation</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureGeometry","title":"civitas.models.FeatureGeometry","text":"<p>               Bases: <code>Model</code></p> <p>Geometry of feature base</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureGeometry.geometry","title":"geometry","text":"<pre><code>geometry()\n</code></pre> <p>return geometry of feature</p> Source code in <code>django_project/civitas/models/feature/feature_geometry.py</code> <pre><code>def geometry(self):\n\"\"\" return geometry of feature \"\"\"\nif self.geom_point:\nreturn self.geom_point\nif self.geom_line:\nreturn self.geom_line\nif self.geom_polygon:\nreturn self.geom_polygon\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.FeatureProperty","title":"civitas.models.FeatureProperty","text":"<p>               Bases: <code>Model</code></p> <p>This is additional property for the feature</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureSubClass","title":"civitas.models.FeatureSubClass","text":"<p>               Bases: <code>_Term</code></p> <p>The second Level of the Asset Hierarchy as defined in \"Background\" Sheet ie. RD = Roads It is linked with AssetClass</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureType","title":"civitas.models.FeatureType","text":"<p>               Bases: <code>_Term</code></p> <p>The third Level of the Asset Hierarchy as defined in \"Background\" Sheet</p>"},{"location":"developer/manual/civitas/#civitas.models.FeatureTypeCombination","title":"civitas.models.FeatureTypeCombination","text":"<p>               Bases: <code>_Term</code></p> <p>Combination between class, subclass and type</p>"},{"location":"developer/manual/civitas/#civitas.models.POF","title":"civitas.models.POF","text":"<p>               Bases: <code>Model</code></p> <p>Probability of Failure</p>"},{"location":"developer/manual/civitas/#civitas.models.Property","title":"civitas.models.Property","text":"<p>               Bases: <code>Model</code></p> <p>This is property for feature</p>"},{"location":"developer/manual/civitas/#civitas.models.Province","title":"civitas.models.Province","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative province</p>"},{"location":"developer/manual/civitas/#civitas.models.Region","title":"civitas.models.Region","text":"<p>               Bases: <code>_Administrative</code></p> <p>Administrative region</p>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData","title":"civitas.models.ReporterData","text":"<p>               Bases: <code>Model</code></p> <p>Materialized View for reported data</p>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData.by_community","title":"by_community  <code>staticmethod</code>","text":"<pre><code>by_community(community: Community) -&gt; dict\n</code></pre> <p>Return reporter_data by community</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef by_community(community: Community) -&gt; dict:\n\"\"\"\n    Return reporter_data by community\n    \"\"\"\nreturn ReporterData.objects.filter(\ncommunity_id=community.id\n)[0:2]\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData.by_community_all","title":"by_community_all  <code>staticmethod</code>","text":"<pre><code>by_community_all(community: Community) -&gt; dict\n</code></pre> <p>Return reporter_data by community</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef by_community_all(community: Community) -&gt; dict:\n\"\"\"\n    Return reporter_data by community\n    \"\"\"\nreturn ReporterData._showall(community)\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData.dashboard","title":"dashboard  <code>staticmethod</code>","text":"<pre><code>dashboard(community: Community) -&gt; dict\n</code></pre> <p>dashboard</p> <p>Args:     community (Community): community object</p> <p>Returns:     array: dictionary of each cost breakdown</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef dashboard(community: Community) -&gt; dict:\n\"\"\"_dashboard_\n    Args:\n        community (Community): community object\n    Returns:\n        array: dictionary of each cost breakdown\n    \"\"\"\ndata = ReporterData.objects.filter(\ncommunity_id=community.id\n).exclude(\nsystem_name__in=[\n'Non-Municipal Infrastructure',\n'Abandoned Infrastructure'\n]\n)\n_dashboard = DashboardData(data=data)  \nsystem_names = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name') \\\n        .distinct() \\\n        .annotate(label=Concat('system_name', models.Value('')))\n##### Renewal costs of assets #####\n_renewal_cost_of_assets_a = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'renewal_cost')\n_data_renewal= [{'system_name': val[\"system_name\"], 'renewal_cost': val['renewal_cost']} for val in _renewal_cost_of_assets_a]\nrenewal_sum = 0\nqs_renewal = []\nfor name in system_names:\nqs_renewal.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_renewal:\nsystem_name = x[\"system_name\"]\nif str(x[\"renewal_cost\"]) == 'NaN' or not x[\"renewal_cost\"]:\nx[\"renewal_cost\"] = 0.00\nelif x[\"renewal_cost\"]:\nrenewal_sum = renewal_sum + float(x[\"renewal_cost\"])\nindex = next((index for (index, d) in enumerate(qs_renewal) if d[\"system_name\"] == system_name), None)\nqs_renewal[index][\"values\"] = float(qs_renewal[index][\"values\"]) + float(x[\"renewal_cost\"])\n#### End Renewal costs of assets ####\n##### Maintenance #####\n_maintenance_cost_of_assets = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'maintenance_cost')\n_data_maintenace = [{'system_name': val[\"system_name\"], 'maintenance_cost': val['maintenance_cost']} for val in _maintenance_cost_of_assets]\nmaintenance_sum = 0\nqs_maintenance = []\nfor name in system_names:\nqs_maintenance.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_maintenace:\nsystem_name = x[\"system_name\"]\nif str(x[\"maintenance_cost\"]) == 'NaN' or not x[\"maintenance_cost\"]:\nx[\"maintenance_cost\"] = 0.00\nelif x[\"maintenance_cost\"]:\nmaintenance_sum = maintenance_sum + float(x[\"maintenance_cost\"])\nindex = next((index for (index, d) in enumerate(qs_maintenance) if d[\"system_name\"] == system_name), None)\nqs_maintenance[index][\"values\"] = float(qs_maintenance[index][\"values\"]) + float(x[\"maintenance_cost\"])\n#### End Maintenance ####\n#### Risk Renewal####\n_risk_renewal_of_assets = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'risk_level', 'renewal_cost')\n_data_renewal_cost_of_assets = [{'system_name': val[\"system_name\"], 'renewal_cost': val['renewal_cost'], 'risk_level': val['risk_level']} \\\n                                     for val in _risk_renewal_of_assets]\nqs_renewal_cost_of_assets = []\nfor risk in _dashboard.risk_level_list:\nfor name in system_names:\nqs_renewal_cost_of_assets.append({\"system_name\": name[\"system_name\"], \n\"risk_level\": risk[\"risk_level\"], \n\"label\": name[\"label\"],\n\"values\": 0.0})\nrisk_renewal_of_assets_sum = 0\nfor x in _data_renewal_cost_of_assets:\nsystem_name = x[\"system_name\"]\nrisk_level = ''\nif not x['risk_level'] is None:\nrisk_level = x[\"risk_level\"].strip()\nelse:\nrisk_level = 'None'\nprint(\"risk_level\", risk_level)\nif str(x[\"renewal_cost\"]) == 'NaN' or not x[\"renewal_cost\"]:\nx[\"renewal_cost\"] = 0.00\nelse:\nrisk_renewal_of_assets_sum = risk_renewal_of_assets_sum + Decimal(x[\"renewal_cost\"])\nindex = next((index for (index, d) in enumerate(qs_renewal_cost_of_assets) \\\n                       if d[\"system_name\"] == system_name and d[\"risk_level\"] == risk_level), None)\nif index :\nqs_renewal_cost_of_assets[index][\"values\"] = float(qs_renewal_cost_of_assets[index][\"values\"]) + float(x[\"renewal_cost\"])\n#### END Risk Renewal####\n#### remaining years renewal cost ####\n_remaining_years_renewal_cost = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'renewal_cost') \n#### End remaining years renewal cost ####\nremaining_years_renewal_risk_cost = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'risk_level') \\\n        .distinct() \\\n        .annotate(label=Concat('system_name', models.Value('')), values=Sum('renewal_cost'))\n###### Annual Reserve  #########\n_annual_reserve = data.exclude(system_name=None) \\\n        .order_by('system_name') \\\n        .values('system_name', 'annual_reserve') \n_data_annual_reserve = [{'system_name': val[\"system_name\"], 'annual_reserve': val['annual_reserve']} for val in _annual_reserve]\nannual_sum = 0\nqs_annual_data = []\nfor name in system_names:\nqs_annual_data.append({\"system_name\": name[\"system_name\"], \"label\": name[\"label\"],\"values\": 0.0})\nfor x in _data_annual_reserve:\nsystem_name = x[\"system_name\"]\nannual_reserve = 0\nif str(x[\"annual_reserve\"]) == 'NaN' or not x[\"annual_reserve\"]:\nx[\"annual_reserve\"] = 0.00\nannual_reserve = 0.00\nelse:\nannual_reserve = x[\"annual_reserve\"]\nannual_sum = annual_sum + Decimal(annual_reserve)\nindex = next((index for (index, d) in enumerate(qs_annual_data) if d[\"system_name\"] == system_name), None)\nqs_annual_data[index][\"values\"] = float(qs_annual_data[index][\"values\"]) + float(annual_reserve)\n###### End Annual Reserve  #########\nqs = [\n{\n'id': 'renewal_cost', \n\"title\": \"Renewal costs of assets\",\n\"qs\": qs_renewal, \n'type': 'non_stacked', \n'sum': {\"sum\": renewal_sum},\n'description': 'Replacement costs are based on current available costs and include the following components: Capital Costs - 65%, Contingency - 15%, Design - 10%, Inspections and Removal - 10%. As a starting point, a default replacement cost is applied for each asset type.  However, in some cases, where the above general formula is not applicable, or requires significantly less or more effort in one of the above areas, a custom cost might have been applied. This value will override the default value.'\n},              \n{\n'id': 'maintenenance_cost', \n\"title\": \"Maintenance costs of assets\",\n\"qs\": qs_maintenance, \n'type': 'non_stacked',\n'sum': {\"sum\": maintenance_sum},\n'description': 'Maintenance costs are the estimated annual cost to maintain assets. As a starting point, a default value of 10% of the renewal cost is used'\n},   \n{\n'id': 'annual_reserve', \n\"title\": \"Annual Average Infrastructure Demand\",\n\"qs\": qs_annual_data, \n'type': 'non_stacked',\n'sum': {'sum': annual_sum},\n'description':  \"This graph uses lifespan projections and renewal costs for a long-term outlook of  infrastructure. This projection is theoretical and is not a realistic indication of spending timelines. A valuable output of this projection is an annualized infrastructure demand, indicated as a dotted line on the graph. This annualized value is obtained by dividing the renewal cost by the lifespan for each asset in the database and then summing the total. As lifespan and renewal cost data are updated, the annual infrastructure demand will update. The annual infrastructure demand could be lowered by committing to operations and maintenance programs to extend lifespans, deciding to rehabilitate versus replace, and more. The values shown in the graph is based on current $ values and the actual value of this average annual investment will increase over time with inflation.\"\n},   \n{\n'id': 'system_risk_renewal', \n\"title\": \"Risk By System\",\n\"qs\": qs_renewal_cost_of_assets, \n\"formatted\": _dashboard.stacked_a(qs_renewal_cost_of_assets),\n\"total_bottom\": _dashboard.stacked_a_total(_dashboard.stacked_a(qs_renewal_cost_of_assets)),\n'type': 'stacked_a',\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': 'A risk value is obtained by combining Probability of Failure  (PoF) and Consequence of Failure (CoF) values as per the following matrix. It is common asset management practice to shift the matrix in favour of the consequence of failure,'\n},        \n{\n'id': 'remaining_years_renewal_system', \n\"title\": \"Remaining Years by Renewal Cost by System\",\n\"qs\": _remaining_years_renewal_cost, \n\"formatted\": _dashboard.stacked_b_list(system_names),\n\"total\": _dashboard.stacked_b_total(_dashboard.stacked_b_list(system_names), system_names=system_names),\n\"graph\": _dashboard.stacked_b_graph(_dashboard.stacked_b_list(system_names), system_names=system_names),\n\"pdf_table_1\": _dashboard.pdf_table_1(_dashboard.stacked_b_list(system_names)),\n\"pdf_table_2\": _dashboard.pdf_table_2(_dashboard.stacked_b_list(system_names)),\n'type': 'stacked_b',\n'system_names': system_names,\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': ''\n},   \n{\n'id': 'remaining_years_renewal_risk', \n\"title\": \"Remaining Years by Renewal Cost by Risk\",\n\"qs\": remaining_years_renewal_risk_cost, \n\"formatted\":  _dashboard.stacked_c_list(),\n\"graph\":  _dashboard.stacked_c_graph( _dashboard.stacked_c_list()),\n\"total\": _dashboard.stacked_c_total( _dashboard.stacked_c_list()),\n\"pdf_table_1\": _dashboard.pdf_table_1(_dashboard.stacked_c_list()),\n\"pdf_table_2\": _dashboard.pdf_table_2(_dashboard.stacked_c_list()),\n'type': 'stacked_c',\n'risk_levels': _dashboard.risk_level_list,\n'sum': {\"sum\": risk_renewal_of_assets_sum},\n'description': ''\n},  \n]\nreturn qs\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData.summary_cof","title":"summary_cof  <code>staticmethod</code>","text":"<pre><code>summary_cof(community: Community) -&gt; dict\n</code></pre> <p>Return summary of cof for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_cof(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of cof for specific community\n    The return will be grouped by class\n    \"\"\"\ncof_dict = ReporterData._summary(community, 'cof_name')\nfor val in cof_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn cof_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData.summary_pof","title":"summary_pof  <code>staticmethod</code>","text":"<pre><code>summary_pof(community: Community) -&gt; dict\n</code></pre> <p>Return summary of pof for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_pof(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of pof for specific community\n    The return will be grouped by class\n    \"\"\"\npof_dict = ReporterData._summary(community, 'pof_name')\nfor val in pof_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn pof_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.ReporterData.summary_risk","title":"summary_risk  <code>staticmethod</code>","text":"<pre><code>summary_risk(community: Community) -&gt; dict\n</code></pre> <p>Return summary of risk for specific community The return will be grouped by class</p> Source code in <code>django_project/civitas/models/view/reporter_data.py</code> <pre><code>@staticmethod\ndef summary_risk(community: Community) -&gt; dict:\n\"\"\"\n    Return summary of risk for specific community\n    The return will be grouped by class\n    \"\"\"\nrisk_dict = ReporterData._summary(community, 'risk_level')\nfor val in risk_dict:\nfor x in val:\nif str(val[x]) == 'nan' or val[x] == 'NaN':\nval[x] = 0\nreturn risk_dict\n</code></pre>"},{"location":"developer/manual/civitas/#civitas.models.System","title":"civitas.models.System","text":"<p>               Bases: <code>_Term</code></p> <p>System is a collection of all of feature</p>"},{"location":"developer/manual/civitas/#civitas.models.Unit","title":"civitas.models.Unit","text":"<p>               Bases: <code>_Term</code></p> <p>Unit</p>"},{"location":"developer/manual/civitas/#serializers","title":"Serializers","text":""},{"location":"developer/manual/civitas/#civitas.serializer","title":"civitas.serializer","text":""},{"location":"developer/manual/civitas/#utilities","title":"Utilities","text":""},{"location":"developer/manual/civitas/#civitas.views","title":"civitas.views","text":""},{"location":"developer/manual/civitas/#views","title":"Views","text":""},{"location":"developer/manual/civitas/#civitas.views","title":"civitas.views","text":""},{"location":"developer/manual/core/","title":"MyCivitas","text":""},{"location":"developer/manual/core/#admin","title":"Admin","text":""},{"location":"developer/manual/core/#core.admin","title":"core.admin","text":""},{"location":"developer/manual/core/#settings","title":"Settings","text":""},{"location":"developer/manual/core/#core.settings","title":"core.settings","text":""},{"location":"developer/manual/core/#templatetags","title":"Templatetags","text":""},{"location":"developer/manual/core/#core.templatetags","title":"core.templatetags","text":""},{"location":"devops/","title":"MyCivitas","text":""},{"location":"devops/#devops-documentation","title":"DevOps documentation","text":""},{"location":"devops/guide/","title":"MyCivitas","text":""},{"location":"devops/guide/#devops-guide","title":"DevOps guide","text":""},{"location":"devops/manual/","title":"MyCivitas","text":""},{"location":"devops/manual/#devops-documentation","title":"DevOps documentation","text":""},{"location":"user/","title":"MyCivitas","text":""},{"location":"user/#user-documentation","title":"User documentation","text":"<p>This is the homepage for all user related documentation.</p> <p>The user content is divided into three sections:</p> <ul> <li>The quickstart tutorial, which aims to get you familiar with the basics of platform in around 5 minutes.</li> <li>The user guide, which describes common workflows in a tutorial format.</li> <li>The user manual, which describes each page of the user interface and what the various options on that page do.</li> </ul>"},{"location":"user/guide/","title":"MyCivitas","text":""},{"location":"user/guide/#mycivitas-user-guide","title":"MyCivitas User guide","text":"<p>Welcome to the MyCivitas user guide. In this section of the documentation, we aim to show users how to utilise the platform effectively, customise their profiles and so forth. Here is a brief overview of the content provided here:</p> <ul> <li> <p>Registering/Login/Logout: This page will show you how to <code>register</code>, <code>login</code> and <code>logout</code> on the platform.</p> </li> <li> <p>Forgot Password: This page will show you how to reset your password if you forget it.</p> </li> <li> <p>Community Map: This page will show you how to view the community map.</p> </li> <li> <p>Organisation: This page will show you how to view and manage the organisation details and access.</p> </li> <li> <p>User Profile: This page will guide you on how to view and edit the user profile.</p> </li> <li> <p>Work Order: This page will show you how to access the work order details.</p> </li> <li> <p>Dashboard: This page will show you how to download the PDFs of your reports and access important information about your MyCivitas account.</p> </li> <li> <p>View Table: This page will show you how to download CSV in all views on the view table page.</p> </li> <li> <p>Contact Us: This page will show you how to contact the support team.</p> </li> </ul>"},{"location":"user/guide/community-map/","title":"MyCivitas","text":""},{"location":"user/guide/community-map/#user-guide-community-map","title":"User Guide Community Map","text":"<p>Welcome to the <code>Community Map</code> feature! This guide will walk you through the steps to access and utilise the <code>Community Map</code> on MyCivitas.</p>"},{"location":"user/guide/community-map/#how-do-i-access-the-map","title":"How do I access the map?","text":"<p>Locate 1\ufe0f\u20e3 the <code>Community Map</code> button available in the middle of the landing page. Simply click on the Community Map button to be redirected to the Community Map page. Alternatively, you can click on 2\ufe0f\u20e3 the <code>Community Map</code> option on the navigation bar to redirect to the Community Map page.</p> <ul> <li>Automatic Redirection: After successfully logging in, you will be automatically redirected to the <code>Community Map</code> page.</li> </ul> <p></p> <ul> <li> <p>Zoom In/Out: Use your touchpad or mouse to zoom in and out of the map.</p> <ul> <li>Touchpad: Pinch in to zoom out, pinch out to zoom in.</li> <li>Mouse: Scroll up to zoom in, scroll down to zoom out.</li> </ul> </li> </ul>"},{"location":"user/guide/community-map/#how-do-i-use-a-filter","title":"How do I use a filter?","text":"<p>Click on 1\ufe0f\u20e3 the <code>F</code> button to select the filters to show on the side panel once you click on this button you will see 2\ufe0f\u20e3 the <code>See Filter List</code> click on this to view the available filters. Choose filters from the list to visualise specific, filtered data on the map.</p>"},{"location":"user/guide/community-map/#choose-classification-filters-and-sub-filters","title":"Choose classification filters and sub-filters","text":"<p>You can choose the classification filters and sub-filters of your choice by checking the checkbox available in front of the filters and sub-filters.</p> <p>Map with classification filters and sub-filters</p> <p></p> <p>Map without classification filters and sub-filters</p> <p></p>"},{"location":"user/guide/community-map/#choose-risk-filters","title":"Choose risk filters","text":"<p>You can choose the risk filters of your choice by clicking on the radio button available in front of the filters.</p> <p>Map with risk filters</p> <p></p> <p>Map without risk filters</p> <p></p>"},{"location":"user/guide/community-map/#choose-organisation-filters","title":"Choose Organisation filters","text":"<p>You can choose the organisation filters of your choice by checking the checkbox available in front of the filters.</p> <p>Map with all organisation filters</p> <p></p> <p>Map without some organisation filters</p> <p></p>"},{"location":"user/guide/community-map/#how-do-i-use-layers","title":"How do I use layers?","text":"<p>Click on 1\ufe0f\u20e3 the <code>L</code> button to select the layers to show on the side panel once you click on this button you will see 2\ufe0f\u20e3 the <code>See Layer List</code> click on this to view the available layers. Choose layers from the list to visualise specific layer data on the map.</p>"},{"location":"user/guide/community-map/#choose-classification-layers-and-sub-layers","title":"Choose classification layers and sub-layers","text":"<p>You can explore various options available for visualisation. Each option includes subcategories and an image with corresponding icons and names.</p> <p> </p> <p>Map with classification layers and sub-layers</p> <p></p> <p>Map without classification layers and sub-layers</p> <p></p>"},{"location":"user/guide/community-map/#choose-risk-layer","title":"Choose risk layer","text":"<p>You can choose the risk layer of your choice by clicking on the radio button available in front of the layer.</p> <p>Map with risk layer</p> <p></p> <p>Map without risk layer</p> <p></p>"},{"location":"user/guide/community-map/#choose-organisation-layers","title":"Choose Organisation layers","text":"<p>You can choose the organisation layers of your choice by checking the checkbox available in front of the layers.</p> <p>Map with all organisation layers</p> <p></p> <p>Map without some organisation layers</p> <p></p>"},{"location":"user/guide/community-map/#how-do-i-create-a-ticket","title":"How do I create a ticket?","text":"<p>To create a ticket you can 1\ufe0f\u20e3 click somewhere on the map once you click on the map, 2\ufe0f\u20e3 the <code>Add asset for creating ticket</code> button will appear on the asset panel with the details.</p> <p></p> <p>Click on the <code>Add asset for creating ticket</code> button and then click on 1\ufe0f\u20e3 the <code>Create Ticket</code> panel to create a ticket. On create ticket panel you will see the create ticket form fill that form with require details to create ticket.</p> <p> </p> <p>Fill in 1\ufe0f\u20e3 the information in the following fields.</p> <ul> <li> <p>Type: Choose from the dropdown the type of the ticket.</p> </li> <li> <p>Summary of Issue or Task: Provide a summary of the issue or task.</p> </li> <li> <p>Description of Issue or Task: Be as descriptive as possible, including all relevant details.</p> </li> <li> <p>Priority: Select a priority level. If unsure, leave it as <code>Normal</code>.</p> </li> <li> <p>Start On: Defaults to the current date.</p> </li> <li> <p>Due On (Optional): Choose a due date if applicable.</p> </li> <li> <p>Expected Time to Complete Task (Optional): Specify the estimated time in hours and minutes.</p> </li> <li> <p>Attach File (Optional): Attach a file, such as a document or photo, to the ticket.</p> </li> <li> <p>Assign To (Optional): Assign the ticket to a specific person if needed.</p> </li> </ul> <p>Click on 2\ufe0f\u20e3 the <code>Create Ticket</code> button to finalise and create the ticket. Once you click on this button the ticket is created and you will be redirected to the edit tickets page.</p> <p></p> <p>For detailed instructions on the community map click here</p>"},{"location":"user/guide/contact-us/","title":"MyCivitas","text":""},{"location":"user/guide/contact-us/#contact-us-page-user-manual","title":"Contact Us Page User Manual","text":"<p>Welcome to our <code>Contact Us Page!</code> This user manual will guide you through the process of effectively using our Contact Us page to get in touch with our support team or provide feedback. Please follow the instructions below to navigate the page smoothly.</p>"},{"location":"user/guide/contact-us/#accessing-the-contact-us-page","title":"Accessing the Contact Us Page","text":"<p>Click on the 1\ufe0f\u20e3 <code>Sign-Up</code> button. This will redirect you to the sign-up page where you can find the <code>Contact Support</code> link.</p> <p></p> <p>After clicking on the <code>Sign-Up</code> button from the landing page, you will be directed to a sign-up page on this page you will find the 1\ufe0f\u20e3 <code>Contact support</code> link, you can directly access the Contact Us page by clicking on the <code>Contact support</code> link.</p> <p></p>"},{"location":"user/guide/contact-us/#navigating-the-contact-us-page","title":"Navigating the Contact Us page","text":"<p>Upon accessing the Contact Us page, you will find a form with fields designed to gather the necessary information to assist you effectively.</p>"},{"location":"user/guide/contact-us/#submitting-your-inquiry-or-feedback","title":"Submitting Your Inquiry or Feedback","text":"<p>Carefully fill out all the 1\ufe0f\u20e3 required fields in the form with accurate information. Craft your message in the <code>Message</code> field, providing relevant details or feedback to assist us in understanding your query or suggestion. Before submitting, take a moment to review all the information you've provided to ensure it's correct. Once you're satisfied with your message and information, click on the 2\ufe0f\u20e3 <code>Submit</code> button to send your inquiry or feedback to our support team.</p> <p></p>"},{"location":"user/guide/contact-us/#confirmation-and-response","title":"Confirmation and Response","text":"<p>After submitting your message, you will receive a confirmation notification indicating that your message has been successfully submitted. Our support team will review your inquiry or feedback and respond to you via email or phone, depending on the contact information provided. Please allow us some time to process your request, and rest assured that we will do our best to address your concerns promptly and efficiently.</p> <p></p> <p>Thank you for choosing to contact us. We value your feedback and are committed to providing you with the assistance you need. If you have any further questions or require additional support, don't hesitate to reach out to us through this platform. We appreciate your business and look forward to serving you!</p>"},{"location":"user/guide/dashboard/","title":"MyCivitas","text":""},{"location":"user/guide/dashboard/#user-guide-dashboard","title":"User Guide Dashboard","text":"<p>Welcome to the <code>Dashboard</code> page. This guide will walk you through the steps to access and utilise the <code>Dashboard</code> page on MyCivitas.</p>"},{"location":"user/guide/dashboard/#how-do-i-access-the-dashboard","title":"How do I access the dashboard?","text":"<p>Locate and click on 1\ufe0f\u20e3 the <code>Dashboard</code> option on the navigation bar to redirect to the dashboard page. By default, the <code>Renewal costs of assets</code> data are displayed on the dashboard page.</p> <p></p> <p>You can download the <code>Renewal costs of assets</code> PDF for offline analysis to download the PDF click on 1\ufe0f\u20e3 the <code>Download PDF</code> button.</p>"},{"location":"user/guide/dashboard/#how-do-i-download-the-maintenance-costs-of-assets-pdf","title":"How do I download the maintenance costs of assets PDF?","text":"<p>Locate 1\ufe0f\u20e3 <code>Maintenance costs of assets</code> and click on it to display the graph and the details in table format. To download the PDF simply click 2\ufe0f\u20e3 the <code>Download PDF</code> button. You can enhance graph visualisation by using 3\ufe0f\u20e3 the available icon options on the top right corner of the graph.</p> <ul> <li> <p>Camera Image (Download as PNG): To download only the graph you can click on the <code>camera</code> icon.</p> </li> <li> <p>Magnifying Glass Image: Click to activate the zooming functionality. Select the bar graph to zoom in for a closer look.</p> </li> <li> <p>Pan Image: Click to enable panning. Narrow, widen, slide left, or slide right to adjust the graph view.</p> </li> <li> <p>Select Box Image: Activate the select box feature to choose a specific area on the graph.</p> </li> <li> <p>Lasso Select Image: Utilise the lasso select image option for precise graph selection.</p> </li> <li> <p>Plus Image (Zoom In): Zoom in for a more detailed view of the chart.</p> </li> <li> <p>Minus Image (Zoom Out): Zoom out to get a broader perspective of the chart.</p> </li> <li> <p>Auto Scale Image: Automatically scale the graph for optimal visualisation.</p> </li> <li> <p>Home Image (Refresh Axes): Click to reset and refresh the axes of the chart.</p> </li> </ul> <p>Note: The available icons on all of the graphs will work same</p>"},{"location":"user/guide/dashboard/#how-do-i-download-the-annual-average-infrastructure-demand-pdf","title":"How do I download the annual average infrastructure demand PDF?","text":"<p>Locate 1\ufe0f\u20e3 <code>Annual Average Infrastructure Demand</code> and click on it to display the graph and the details in table format. To download the PDF simply click 2\ufe0f\u20e3 the <code>Download PDF</code> button.</p>"},{"location":"user/guide/dashboard/#how-do-i-download-the-risk-by-system-pdf","title":"How do I download the risk by system PDF?","text":"<p>Locate 1\ufe0f\u20e3 <code>Risk By System</code> and click on it to display the graph and the details in table format. To download the PDF simply click 2\ufe0f\u20e3 the <code>Download PDF</code> button.</p>"},{"location":"user/guide/dashboard/#how-do-i-download-the-remaining-years-by-renewal-cost-by-system-pdf","title":"How do I download the remaining years by renewal cost by system PDF?","text":"<p>Locate 1\ufe0f\u20e3 <code>Remaining Years by Renewal Cost by System</code> and click on it to display the graph and the details in table format. To download the PDF simply click 2\ufe0f\u20e3 the <code>Download PDF</code> button.</p>"},{"location":"user/guide/dashboard/#how-do-i-download-the-remaining-years-by-renewal-cost-by-risk-pdf","title":"How do I download the remaining years by renewal cost by risk PDF?","text":"<p>Locate 1\ufe0f\u20e3 <code>Remaining Years by Renewal Cost by Risk</code> and click on it to display the graph and the details in table format. To download the PDF simply click 2\ufe0f\u20e3 the <code>Download PDF</code> button.</p> <p>For detailed information about these reports please refer to the dashboard user manual.</p>"},{"location":"user/guide/forgot-password/","title":"MyCivitas","text":""},{"location":"user/guide/forgot-password/#forgot-password-user-guide","title":"Forgot Password User Guide","text":"<p>This user guide will assist you in resetting your password if you have forgotten it. Follow the step-by-step instructions below to initiate the password reset process:</p>"},{"location":"user/guide/forgot-password/#landing-page","title":"Landing Page","text":"<p>Start by accessing the landing page of the application. Click on the 1\ufe0f\u20e3 <code>Sign-In</code> button available at the centre of the page or use the <code>Sign-In</code> button in the navigation bar. This action will redirect you to the sign-in page.</p> <p></p>"},{"location":"user/guide/forgot-password/#sign-in-page","title":"Sign In Page","text":"<p>On the sign-in page, locate and click on the 1\ufe0f\u20e3 <code>Forgot Password?</code> link.</p> <p></p>"},{"location":"user/guide/forgot-password/#reset-password-page","title":"Reset Password Page","text":"<p>You'll be redirected to the <code>Reset Password</code> page. Enter the email address associated with your account into the provided 1\ufe0f\u20e3 email field. Verify that the entered email address is correct. Click on the 2\ufe0f\u20e3 <code>Reset my password</code> button to initiate the process.</p> <p></p> <p>You will see the message after sending the email</p> <p></p>"},{"location":"user/guide/forgot-password/#reset-password-email","title":"Reset Password Email","text":"<p>Check your email inbox associated with the provided email address for an email from the application. Open the email and locate the password reset link. Click on the 1\ufe0f\u20e3 password reset link provided in the email. You will be directed to the <code>Reset Password Confirmation</code> page.</p> <p></p>"},{"location":"user/guide/forgot-password/#reset-password-confirmation-page","title":"Reset Password Confirmation Page","text":"<p>Enter your desired new password in the 1\ufe0f\u20e3 <code>New Password</code> field. Re-enter the new password in the 1\ufe0f\u20e3 <code>Confirm Password</code> field to ensure accuracy. Click on the 3\ufe0f\u20e3 <code>Change My Password</code> button to finalise the password change process.</p> <p></p>"},{"location":"user/guide/forgot-password/#password-reset-page","title":"Password Reset Page","text":"<p>After successfully changing your password, you will be redirected to the <code>Password Reset</code> page. Click on the 1\ufe0f\u20e3 <code>Log In</code> link to redirect to the login page. For detailed documentation on login click here</p> <p></p>"},{"location":"user/guide/forgot-password/#conclusion","title":"Conclusion","text":"<p>By following the steps outlined in this user guide, you can successfully reset your password and regain access to your account. If you encounter any difficulties or have questions during the process, please contact the application's support team for assistance.</p>"},{"location":"user/guide/organisation/","title":"MyCivitas","text":""},{"location":"user/guide/organisation/#organisation-user-guide","title":"Organisation User Guide","text":"<p>Welcome to the <code>Organisation</code> guide. This guide will walk you through the steps to view and manage the organisation on MyCivitas.</p>"},{"location":"user/guide/organisation/#how-do-i-view-the-organisation","title":"How do I view the organisation?","text":"<p>Locate and click on 1\ufe0f\u20e3 the <code>Profile</code> icon to show the organisation option. to view the organisation click on 2\ufe0f\u20e3 the <code>organisation</code> option when you click on this option you will be redirected to the view organisation page.</p> <p></p>"},{"location":"user/guide/organisation/#how-do-i-view-the-organisation-details","title":"How do I view the organisation details?","text":"<p>To see more detailed information about your organisation such as its name and members you can click on 1\ufe0f\u20e3 the name of the organisation. When you click on the organisation name you will be redirected to the organisation profile page where you can see the <code>name</code>, <code>community name</code>, <code>owner</code> and the created date of an organisation.</p> <p></p>"},{"location":"user/guide/organisation/#how-do-i-manage-the-organisation-access","title":"How do I manage the organisation access?","text":""},{"location":"user/guide/organisation/#user-roles-for-managing-the-organisation","title":"User Roles for Managing the Organisation","text":"<ul> <li> <p>Super User: The Super User holds comprehensive control over the organisation. They can manage the organisation, invite users to join, and have the authority to change the role of any user within the organisation.</p> </li> <li> <p>Manager: Managers possess the ability to invite users to the organisation and adjust the user roles. However, managers are restricted from changing their own user roles. Their scope of control extends to the users they invite and their respective roles, ensuring efficient delegation within the organisational structure.</p> </li> </ul> <p>These role differentiations ensure a structured and secure management system within the organisation.</p> <p></p> <p>To manage the organisation you can click on 1\ufe0f\u20e3 the <code>Manage Access</code> option to open the organisation manage access page. Manage the access of the user by assigning the user role to the user to assign a user role click on 2\ufe0f\u20e3 the role dropdown and select the role of your choice you want to assign the user if you want to remove user from the organisation. To remove a user from the organisation, click on the <code>Delete</code> icon in the respective row of that user's record.</p>"},{"location":"user/guide/organisation/#how-do-i-invite-a-user-to-the-organisation","title":"How do I invite a user to the organisation?","text":"<p>To invite a new user to the organisation click on the 4\ufe0f\u20e3 <code>Invite user</code> button. When you click on this button the invite user form will open.</p> <p></p> <p>You need to enter 1\ufe0f\u20e3 email of the user you want to invite to your organisation and 2\ufe0f\u20e3 assign a role to the user by selecting one from the dropdown options:</p> <ul> <li>CMMS Operator</li> <li>CMMS Viewer</li> <li>Dashboard Viewer</li> <li>Manager</li> <li>Operations Admin.</li> </ul> <p>After selecting the user role, click on 3\ufe0f\u20e3 the <code>Invite</code> button to send an invite to that user.</p> <p>This process allows you to seamlessly invite users to your organisation with specified roles for effective collaboration.</p>"},{"location":"user/guide/organisation/#how-do-i-create-a-new-work-order-schedule","title":"How do I create a new work order schedule?","text":"<p>Click on 1\ufe0f\u20e3 the <code>Work Order Scheduler</code> option to open the work order schedule page. To create a new schedule click on 2\ufe0f\u20e3 the <code>Create New Schedule</code> page. When you click this button the create schedule form opens.</p> <p></p> <p>Enter the values in 1\ufe0f\u20e3 the form fields and the fields are:</p> <ul> <li> <p>Asset Type: Choose the relevant asset type from the dropdown list.</p> </li> <li> <p>Activity Summary: Provide a brief summary of the activity associated with the scheduler.</p> </li> <li> <p>Activity Description: Add a detailed description of the activity. Be as descriptive as possible and include all relevant details.</p> </li> <li> <p>Recurring Ticket By: Choose the recurrence pattern from the dropdown list. There are two dropdowns with different options based on the selected recurrence type.</p> </li> </ul> <p>Weekly</p> <p></p> <p>Monthly</p> <p></p> <p>Yearly</p> <p></p> <ul> <li>Assign To (Optional): Optionally, choose a person to assign the scheduler from the dropdown list.</li> </ul> <p>Click on 2\ufe0f\u20e3 the <code>Save</code> button to save the details and create the new scheduler.</p> <p>Click on 3\ufe0f\u20e3 the<code>Close</code> button to close the form without saving changes.</p>"},{"location":"user/guide/register-login-logout/","title":"Register/Login/Logout","text":""},{"location":"user/guide/register-login-logout/#user-guide-registration-login-and-logout-on-mycivitas","title":"User Guide: Registration, Login, and Logout on Mycivitas","text":""},{"location":"user/guide/register-login-logout/#how-do-i-register-on-the-site","title":"How do I register on the site?","text":"<p>Welcome to <code>Mycivitas!</code> Follow these simple steps to create your account and join our community. </p> <p>1\ufe0f\u20e3 Locate the <code>Sign-Up</code> button at the top right corner of the page. Click on the <code>Sign-Up</code> button to initiate the account creation process.</p>"},{"location":"user/guide/register-login-logout/#fill-in-the-required-fields","title":"Fill in the Required Fields","text":"<p>On the Sign-Up page, you will find several fields that need to be completed. </p> <p></p> <p>These include two sections:</p>"},{"location":"user/guide/register-login-logout/#community-and-account-information-section","title":"Community and Account information section","text":"<p>Fill in the community and account-related information, in 1\ufe0f\u20e3 the <code>Community and Account</code> section.</p> <ul> <li> <p>Community Dropdown: Select your community from the dropdown list.</p> </li> <li> <p>Email Address: Enter your valid email address. This will be used for communication and account recovery.</p> </li> <li> <p>First Name: Provide your first name in the designated field.</p> </li> <li> <p>Last Name: Enter your last name.</p> </li> <li> <p>Password: Create a secure password for your account. Make sure it meets any specified password requirements.</p> </li> <li> <p>Password Confirmation: Re-enter the password to confirm accuracy.</p> </li> </ul>"},{"location":"user/guide/register-login-logout/#billing-information-section","title":"Billing information section","text":"<p>Fill in the billing-related information, in 2\ufe0f\u20e3 the <code>Billing information</code> section.</p> <ul> <li> <p>Province Dropdown: Select your province from the dropdown list.</p> </li> <li> <p>Country Dropdown: Choose your country from the provided dropdown options.</p> </li> </ul>"},{"location":"user/guide/register-login-logout/#create-account-button","title":"Create Account Button","text":"<p>After filling in all the required fields, double-check to ensure accuracy. Click on 3\ufe0f\u20e3 the <code>Create Account</code> button to proceed.</p> <p>Welcome to MyCivitas, Congratulations! You have successfully created your MyCivitas account. You can now explore and engage with the community, connect with others, and enjoy the features Mycivitas has to offer.</p> <p></p> <p>If you encounter any issues during the sign-up process or have questions about your account, refer to the platform's contact page for assistance. We are excited to have you as part of our community!</p>"},{"location":"user/guide/register-login-logout/#how-do-i-login","title":"How do I login?","text":"<p>Welcome to MyCivitas! This user guide will walk you through the steps to log in to your MyCivitas account. Whether you are a community member or staff, accessing your account is quick and easy.</p> <p></p> <p>1\ufe0f\u20e3 Look for the <code>Have an account? - Sign In</code> button in the middle of the page. Click on this button to redirect to the login page. Alternatively, you can find the 2\ufe0f\u20e3 <code>Sign In</code> option in the navigation menu. Click on <code>Sign In</code> to access the login page.</p> <p></p> <p>Once you are on the login page, follow these steps: In 1\ufe0f\u20e3 the provided field, enter your registered email address. Enter 2\ufe0f\u20e3 your password in the designated field. To ensure accuracy, you can use the eye icon next to the password field to hide or reveal your password. Once you have entered 3\ufe0f\u20e3 your email address and password, click on the <code>Sign In</code> button to proceed.</p> <p>Note: It is recommended to keep your login credentials confidential to ensure the security of your account. If you forget your password, use the <code>Forgot Password</code> option on the login page to reset it.</p> <p>Click on the 4\ufe0f\u20e3 <code>Forgot Password?</code> link, to reset your password if you forget it. For detailed instructions on the reset password functionality click here</p> <p></p> <p>Congratulations! You have successfully logged in to your MyCivitas account.</p>"},{"location":"user/guide/register-login-logout/#how-do-i-logout","title":"How do I logout?","text":"<p>Logging out of your MyCivitas account is a straightforward process. Follow these simple steps to ensure a secure logout.</p> <p></p> <p>On any page within the MyCivitas platform, look for the profile icon. This icon is typically represented by an image associated with your account. Once you have located the profile icon, click on it. This action will open a dropdown menu. In the dropdown menu, you will find 1\ufe0f\u20e3 the <code>Logout</code> option. It is usually clearly labelled to facilitate easy identification. Simply click on the <code>Logout</code> option. This action will log you out of your MyCivitas account.</p> <p>Congratulations! You have successfully logged out of your MyCivitas account.</p> <p></p> <p>Remember to keep your login credentials confidential and to log out of your account when using shared or public computers to maintain the security of your information.</p>"},{"location":"user/guide/user-profile/","title":"MyCivitas","text":""},{"location":"user/guide/user-profile/#user-profile-user-guide","title":"User Profile User Guide","text":"<p>Welcome to the <code>User Profile</code> guide. This guide will walk you through the steps to view and manage the user profile MyCivitas.</p>"},{"location":"user/guide/user-profile/#how-do-i-view-the-profile-details","title":"How do I view the profile details?","text":"<p>Locate and click on 1\ufe0f\u20e3 the <code>Profile</code> icon to show the profile options. To view the profile details click on 2\ufe0f\u20e3 the <code>view profile</code> option when you click on this option you will be redirected to the view profile page. Here you can only view the profile details.</p> <p></p>"},{"location":"user/guide/user-profile/#how-do-i-edit-the-profile-details","title":"How do I edit the profile details?","text":"<p>Click on 3\ufe0f\u20e3 the <code>Setting</code> option to redirect to the edit profile page. By default the <code>Edit Profile</code> page will open. Where you can edit 1\ufe0f\u20e3 the <code>FirstName</code> and 2\ufe0f\u20e3 the <code>LastName</code> and then click on 3\ufe0f\u20e3 the <code>Save</code> button to save the changes.</p> <p></p>"},{"location":"user/guide/user-profile/#how-do-i-edit-the-avatar","title":"How do I edit the avatar?","text":"<p>Click on 1\ufe0f\u20e3 the <code>Change Avatar</code> option to redirect to the change avatar page. To choose the avatar from the system click on 2\ufe0f\u20e3 the <code>Choose file</code> button once you choose the avatar of your choice then click on 3\ufe0f\u20e3 the <code>Save</code> button to set a new avatar for your profile.</p>"},{"location":"user/guide/user-profile/#how-do-i-edit-the-password","title":"How do I edit the password?","text":"<p>Click on 1\ufe0f\u20e3 the <code>Edit Password</code> option to redirect to the edit password page. Where you need to enter the password into 2\ufe0f\u20e3 the <code>Password</code> field and enter the same password as before into 3\ufe0f\u20e3 the <code>Confirm password</code> field then click on 3\ufe0f\u20e3 the <code>Save</code> button to set a new password for your account.</p>"},{"location":"user/guide/view-table/","title":"MyCivitas","text":""},{"location":"user/guide/view-table/#user-guide-view-table","title":"User Guide View Table","text":"<p>Welcome to the <code>View Table</code> feature! This guide will walk you through the steps to access and utilise the <code>View Table</code> on MyCivitas.</p>"},{"location":"user/guide/view-table/#how-do-i-access-the-table","title":"How do I access the table?","text":"<p>Locate 1\ufe0f\u20e3 the <code>View Table</code> option on the navigation bar to redirect to the View Table page. By-default the default data displays on the view table page.</p> <p></p> <p>You can download the table data in <code>CSV</code> format by clicking on 1\ufe0f\u20e3 the <code>Export to CSV</code> button.</p>"},{"location":"user/guide/view-table/#how-do-i-search-in-a-specific-column-and-download-csv-data","title":"How do I search in a specific column and download CSV data?","text":"<p>Input a search query in 2\ufe0f\u20e3 the search box to search for data in the table. you can download the search data in <code>CSV</code> format by clicking on the <code>Export to CSV</code> button.</p> <p></p> <p>Downloaded <code>CSV</code> file</p> <p></p>"},{"location":"user/guide/view-table/#how-do-i-download-detailed-csv-data","title":"How do I download detailed CSV data?","text":"<p>You can download the detailed CSV data. Click on 1\ufe0f\u20e3 the <code>Choose filter column</code> dropdown, and you will see 2\ufe0f\u20e3 <code>detailed</code> option in the dropdown click on that option to view the detailed table view. You can search for specific data within each column effortlessly. To download the detailed data in CSV click on 3\ufe0f\u20e3 the <code>Export to CSV</code> button.</p>"},{"location":"user/guide/view-table/#how-do-i-download-custom-csv-data","title":"How do I download custom CSV data?","text":"<p>You can download the custom CSV data. Click on 1\ufe0f\u20e3 the <code>Choose filter column</code> dropdown, and you will see 2\ufe0f\u20e3 <code>custom</code> option in the dropdown click on that option to unveil 3\ufe0f\u20e3 the <code>Select column</code> dropdown. Once the dropdown appears you can click on that dropdown to select the columns to display or download. To select columns check 4\ufe0f\u20e3 the checkbox available in front of the columns. After selecting the columns click on 5\ufe0f\u20e3 the <code>Apply</code> button to view selected columns. You can search for specific data within each column effortlessly. To download the custom data in CSV click on 6\ufe0f\u20e3 the <code>Export to CSV</code> button.</p> <p></p> <p>For detailed instructions on the <code>View Table</code> page, click here</p>"},{"location":"user/guide/work-order/","title":"MyCivitas","text":""},{"location":"user/guide/work-order/#work-order-user-guide","title":"Work Order User Guide","text":"<p>Welcome to the <code>Work Order</code> page. This guide will walk you through the steps to access and utilise the <code>Work Order</code> page on MyCivitas.</p>"},{"location":"user/guide/work-order/#how-do-i-access-the-work-order","title":"How do I access the Work Order?","text":"<p>Locate and click on 1\ufe0f\u20e3 the <code>Work Order</code> option on the navigation bar to redirect to the work order page. By default, the <code>table</code> data are displayed on the work order page which shows the work orders in tabular format.</p> <p></p> <p>To view the work order click on 1\ufe0f\u20e3 the name of the work order available in the first column. When you click on this button you will be redirected to the detailed view of that work order.</p> <p></p>"},{"location":"user/guide/work-order/#how-do-i-see-the-work-order-timeline","title":"How do I see the Work Order timeline?","text":"<p>Click on 1\ufe0f\u20e3 the <code>Timeline</code> option to view the work order timeline. To view the timeline of the specific work order you can use 2\ufe0f\u20e3 the <code>timeline slider</code> available at the bottom of the page, scroll the timeline slider left/right to go to the specific work order and click on 3\ufe0f\u20e3 the work order to view the timeline.</p>"},{"location":"user/guide/work-order/#how-do-i-see-the-reports-statistics","title":"How do I see the Reports &amp; Statistics?","text":"<p>Click on 1\ufe0f\u20e3 the <code>Reports &amp; Statistics</code> option to view the work order reports &amp; statistics.</p> <p></p>"},{"location":"user/guide/work-order/#how-do-i-see-the-reports-by-user","title":"How do I see the Reports By User?","text":"<p>There are 4 types of reports you can view in the <code>Reports By User</code> section.</p> <p>Click on 1\ufe0f\u20e3 <code>by Priority</code> to view the report by priority.</p> <p></p> <p>Click on 2\ufe0f\u20e3 <code>by Queue</code> to view the report by queue.</p> <p></p> <p>Click on 3\ufe0f\u20e3 <code>by Status</code> to view the report by status.</p> <p></p> <p>Click on 4\ufe0f\u20e3 <code>by Month</code> to view the report by month.</p> <p></p>"},{"location":"user/guide/work-order/#how-do-i-see-the-reports-by-queue","title":"How do I see the Reports By Queue?","text":"<p>There are 3 types of reports you can view in the <code>Reports By Queue</code> section.</p> <p>Click on 1\ufe0f\u20e3 <code>by Priority</code> to view the report by priority.</p> <p></p> <p>Click on 2\ufe0f\u20e3 <code>by Status</code> to view the report by status.</p> <p></p> <p>Click on 3\ufe0f\u20e3 <code>by Month</code> to view the report by month.</p> <p></p>"},{"location":"user/manual/","title":"MyCivitas","text":""},{"location":"user/manual/#user-manual","title":"User manual","text":"<p>This section of the documentation describes every page in the application and what the various components of that page do. The manual is intended to function as a reference for the application. For narrative/workflow-based tutorials, you may prefer to work through our user guide.</p> <ul> <li> <p>Landing Page: This page describes the landing page of the platform.</p> </li> <li> <p>Login: This section of the documentation explains the login page.</p> </li> <li> <p>Register: This documentation explains the sign-up page.</p> </li> <li> <p>Forgot Password: This documentation explains the forgot password functionality.</p> </li> <li> <p>Logout: This documentation explains the logout functionality.</p> </li> <li> <p>View Table: This documentation explains the view table page.</p> </li> <li> <p>Community Map: This documentation explains the community map page.</p> </li> <li> <p>Dashboard: This documentation explains the dashboard page.</p> </li> <li> <p>Work order: This documentation explains the work order page.</p> </li> <li> <p>Profile options: This documentation explains the profile options.</p> </li> <li> <p>Contact Us: This documentation explains how the user can contact us.</p> </li> <li> <p>User Roles: This documentation explains the user roles.</p> </li> </ul>"},{"location":"user/manual/community-map/","title":"MyCivitas","text":""},{"location":"user/manual/community-map/#community-map-user-manual","title":"Community Map User Manual","text":"<p>The <code>Community Map</code> option provides an interactive and feature-rich experience for users to explore and engage with geographical data. Here's a guide to help the users navigate and utilize the various features:</p> <p></p>"},{"location":"user/manual/community-map/#left-sidebar","title":"Left Sidebar","text":"<ol> <li> <p>See List Dropdown: Click on the <code>See List</code> dropdown, which will show a list of all available layers/filters in the app. The user can select from this list.</p> </li> <li> <p>Layers: The left sidebar provides options to view available layers on the map. Click the <code>L</code> button to access a list of layers that the user can choose to visualize on the map.</p> <ul> <li> <p>Map with layers </p> </li> <li> <p>Map without layers </p> </li> </ul> <p>In the <code>Community Map</code> feature, the <code>Layers</code> section plays a crucial role in customizing the user's map-viewing experience. Here's a detailed guide on the three sections available for layers:</p> <ol> <li> <p>Classification: Under the <code>Classification</code> section, explore various options available for visualization. Each option includes subcategories and an image with corresponding icons and names.</p> <ul> <li> <p>Structures: Visualize information related to buildings and other structures.</p> <p></p> </li> <li> <p>Stormwater Collection: Explore layers related to stormwater collection infrastructure.</p> <p></p> </li> <li> <p>Water Supply: View layers associated with water supply systems.</p> <p></p> </li> <li> <p>Wastewater Collection: Access layers pertaining to wastewater collection infrastructure.</p> <p></p> </li> <li> <p>Transportation Network: Explore layers related to the transportation network.</p> <p></p> </li> </ul> </li> <li> <p>Risk: Within the <code>Risk</code> section, find three options presented with radio buttons for selection:</p> <p></p> <ul> <li> <p>Consequence of Failure: Visualize layers related to the consequence of failure for different components.</p> </li> <li> <p>Probability of Failure: Explore layers representing the probability of failure for various elements.</p> </li> <li> <p>Risk: Visualize layers that depict the overall risk associated with different aspects.</p> </li> </ul> </li> <li> <p>Organization: The <code>Organization</code> section offers various options for visualization. Choose from the following:</p> <p></p> <ul> <li> <p>Buildings: View layers related to buildings within the community.</p> </li> <li> <p>Parks and Recreation: Explore layers associated with parks and recreational areas.</p> </li> <li> <p>Stormwater Collection: Access layers pertaining to stormwater collection infrastructure.</p> </li> <li> <p>Transportation: Visualize layers related to the transportation system.</p> </li> <li> <p>Wastewater Collection and Treatment: Explore layers associated with wastewater collection and treatment.</p> </li> <li> <p>Water Treatment and Distribution: Access layers related to water treatment and distribution.</p> </li> </ul> </li> </ol> </li> <li> <p>Filters: Click the <code>F</code> button to open the list of filters. Choose filters from the list to visualize specific, filtered data on the map.</p> <ol> <li> <p>Classification: Under the <code>Classification</code> section, explore various options available for filtering with suboptions.</p> <p></p> </li> <li> <p>Risk: Within the <code>Risk</code> section, find three options presented with radio buttons for selection.</p> <p></p> </li> <li> <p>Organization: The <code>Organization</code> section offers various options for filtering. The user can choose from the available options.</p> <p></p> </li> </ol> </li> </ol>"},{"location":"user/manual/community-map/#additional-tips","title":"Additional Tips","text":"<ul> <li> <p>Use the layers to overlay different types of information on the map.</p> </li> <li> <p>Utilize filters to focus on specific data points or criteria.</p> </li> <li> <p>Experiment with different combinations of layers and filters for a customized view.</p> </li> <li> <p>By exploring the Community Map feature and experimenting with layers and filters, the user can gain valuable insights into the community's geographic data.</p> </li> </ul>"},{"location":"user/manual/community-map/#right-sidebar","title":"Right Sidebar","text":"<p>On the right side of the map, the user will find various options related to work orders. Explore the different functionalities available to enhance the user's map-viewing experience.</p> <ol> <li> <p>Assets: The Assets panel provides information about selected assets on the map. When the user clicks on the map, the selected assets will be displayed in this panel.</p> <p></p> <ol> <li> <p>Download Icon: The user can download the data in CSV format. Upon clicking, a data table will appear with relevant information.</p> <p></p> <ol> <li> <p>Checkbox Selection: Each row in the table has a checkbox in front, allowing users to select or deselect specific rows for download.</p> </li> <li> <p>Export to CSV Button: Click the <code>Export to CSV</code> button to download the selected data in <code>CSV</code> format.</p> </li> <li> <p>Close Table: Click on the <code>Close</code> button, to close the data table, either user can click the cross icon available in the top right corner of the table.</p> </li> </ol> <p>Use the Download button to access and download specific data from the table, providing flexibility and convenience.</p> <p>Downloaded File </p> </li> <li> <p>Show Assets: To show assets, click somewhere on the map to select the desired location. The panel will showcase details about the assets chosen, providing relevant information about each selected item.</p> <p></p> <ol> <li> <p>Clicked Location: The location where the user clicked to view assets. The user can right-click to deselect the selected location if needed.</p> </li> <li> <p>Add Assets for Creating Tickets: Use the <code>Add Assets</code> feature to select assets and create tickets associated with them.</p> </li> <li> <p>Asset Details: Access comprehensive details about the assets, including <code>General</code>, <code>Properties</code>, <code>Life</code>, <code>Risk &amp; Failure</code>, and <code>Cost</code> details. Toggle the visibility of these details by clicking on the respective table names to show or hide information.</p> </li> <li> <p>Tickets with Count: View associated tickets along with the count for each asset. Understand the ticket-related activity for the selected assets.</p> </li> </ol> </li> </ol> </li> <li> <p>Create Ticket: To create a ticket follow the below steps.</p> <p></p> <ol> <li> <p>Message: Navigate to the assets panel and add the desired asset.</p> <ul> <li>Click on the desired location on the map to view assets and create a ticket simultaneously.</li> <li>Alternatively, directly click on the desired location on the map to view assets and initiate ticket creation.</li> </ul> <p> </p> <ol> <li> <p>Add Asset for Creating Ticket: Once the assets appear for the location, click on the <code>Add Asset for Creating Ticket</code> button to proceed with ticket creation. Upon clicking, an exclamation mark will be displayed on the <code>Create Ticket</code> panel. This button will transform into the <code>Remove Asset from Creating Ticket</code> button, the user can click on this button to remove the assets from creating the tickets. To create a ticket, navigate to the <code>Create Ticket</code> panel by clicking on the <code>exclamation mark</code> or <code>Create Ticket</code> panel.</p> <p></p> <ol> <li> <p>Minus Icon: Click on the <code>Minus</code> icon to cancel the ticket creation process if needed.</p> </li> <li> <p>Form Fields: Fill in the information in the following fields:</p> <ul> <li> <p>Type: Choose from the dropdown the type of the ticket.</p> </li> <li> <p>Summary of Issue or Task: Provide a summary of the issue or task.</p> </li> <li> <p>Description of Issue or Task: Be as descriptive as possible, including all relevant details.</p> </li> <li> <p>Priority: Select a priority level. If unsure, leave it as <code>Normal</code>.</p> </li> <li> <p>Start On: Defaults to the current date.</p> </li> <li> <p>Due On (Optional): Choose a due date if applicable.</p> </li> <li> <p>Expected Time to Complete Task (Optional): Specify the estimated time in hours and minutes.</p> </li> <li> <p>Attach File (Optional): Attach a file, such as a document or photo, to the ticket.</p> </li> <li> <p>Assign To (Optional): Assign the ticket to a specific person if needed.</p> </li> </ul> </li> </ol> <p></p> <ol> <li> <p>Create Ticket Button:  Click the <code>Create Ticket</code> button to finalize and create the ticket. Once the user clicks on this button the ticket is created and the user will redirected edit tickets page.</p> <p></p> </li> </ol> </li> </ol> </li> </ol> </li> <li> <p>Tickets: In the <code>Tickets</code> panel, users can view a list of all tickets associated with their account. Click on the specific ticket in the list to view its details and relevant information.</p> <p></p> </li> <li> <p>Consequence of Failure: This panel provides additional details in charts about the consequences of failure. The user can hover over the charts to view more details.</p> <p></p> </li> <li> <p>Probability of Failure: This panel provides additional details in charts about the probability of failure. The user can hover over the charts to view more details.</p> <p></p> </li> <li> <p>Risk: This panel provides additional details in charts about the risk. The user can hover over the charts to view more details.</p> <p></p> </li> </ol>"},{"location":"user/manual/contact-us/","title":"MyCivitas","text":""},{"location":"user/manual/contact-us/#contact-page-user-manual","title":"Contact Page User Manual","text":"<p>Welcome to the <code>Contact</code> page user manual. This guide is designed to help the user effectively utilise the contact page to get in touch with our support team. Below are the instructions on how to navigate and utilise the contact page efficiently.</p> <p></p> <p>Click on the <code>Sign-Up</code> button. This will redirect the user to the sign-up page where you can find the <code>Contact Support</code> link.</p>"},{"location":"user/manual/contact-us/#sign-up-page","title":"Sign-Up Page","text":"<ol> <li>Contact Page: Click on the <code>Contact support</code> link, to directly access the contact page.</li> </ol>"},{"location":"user/manual/contact-us/#contact-page","title":"Contact Page","text":"<ol> <li> <p>Form Fields: Once the user accesses the contact page, the user will see a form with the following fields:</p> <ul> <li> <p>First Name: Enter the first name in this field.</p> </li> <li> <p>Last Name: Enter the last name in this field.</p> </li> <li> <p>Email Address: Enter the email address where we can reach you.</p> </li> <li> <p>Phone: Enter the phone number (optional).</p> </li> <li> <p>Message: Write the message or inquiry in the provided text area.</p> </li> </ul> </li> <li> <p>Submit Button: Click on the <code>Submit</code> button after filling out all the necessary fields and are ready to send the message. The success message will shown on the contact page.</p> <p></p> </li> </ol> <p>Thank you for using our Contact Page. If you have any further questions or need additional assistance, feel free to reach out to us through this platform. We appreciate your feedback and look forward to assisting you!</p>"},{"location":"user/manual/dashboard/","title":"MyCivitas","text":""},{"location":"user/manual/dashboard/#dashboard-page-user-manual","title":"Dashboard Page User Manual","text":"<p>Welcome to the <code>Dashboard</code> page, a centralised hub for a quick overview of linked communities. Follow this user manual to navigate and make the most out of the dashboard experience.</p> <p></p> <ol> <li> <p>Dashboard: Click on the <code>Dashboard</code> option available in the navigation menu. Upon clicking this link, the user will be redirected to the Dashboard page.</p> <p></p> <ol> <li> <p>Search: Utilise the search feature to find a specific community effortlessly. Insert relevant keywords in the search bar to narrow down the search.</p> <p></p> </li> <li> <p>Community Name: Click on the community name within the list to access detailed information about that specific community. Explore community details such as Renewal costs of assets, Maintenance costs of assets, Annual Average Infrastructure Demand, Risk By System, Remaining Years by Renewal Cost by System, and Remaining Years by Renewal Cost by Risk. By default <code>Renewal costs of assets</code> details are displayed.</p> <p></p> <ol> <li> <p>Renewal costs of assets:  Replacement costs are based on currently available costs and include the following components: Capital Costs - 65%, Contingency - 15%, Design - 10%, Inspections and Removal - 10%. As a starting point, a default replacement cost is applied for each asset type. However, in some cases, where the above general formula is not applicable or requires significantly less or more effort in one of the above areas, a custom cost might have been applied. This value will override the default value.</p> <p></p> <p></p> <ol> <li> <p>Download PDF: Click on the <code>Download PDF</code> option to save the chart as a PDF file.</p> <p></p> <p></p> </li> <li> <p>Available Options on Chart: Explore various options on the chart for enhanced visualisation:</p> </li> </ol> <ul> <li> <p>Camera Image (Download as PNG): Download the plot as a PNG image.</p> </li> <li> <p>Magnifying Glass Image: Click to activate the zooming functionality. Select the bar graph to zoom in for a closer look.</p> </li> <li> <p>Pan Image: Click to enable panning. Narrow, widen, slide left, or slide right to adjust the graph view.</p> </li> <li> <p>Select Box Image: Activate the select box feature to choose a specific area on the graph.</p> </li> <li> <p>Lasso Select Image: Utilise the lasso select image option for precise graph selection.</p> </li> <li> <p>Plus Image (Zoom In): Zoom in for a more detailed view of the chart.</p> </li> <li> <p>Minus Image (Zoom Out): Zoom out to get a broader perspective of the chart.</p> </li> <li> <p>Auto Scale Image: Automatically scale the graph for optimal visualisation.</p> </li> <li> <p>Home Image (Refresh Axes): Click to reset and refresh the axes of the chart.</p> </li> </ul> <ol> <li>Graph Bar: Hover over a bar on the graph to view additional details and information related to that specific data point.</li> </ol> </li> <li> <p>Maintenance costs of assets: Maintenance costs are the estimated annual cost to maintain assets. As a starting point, a default value of 10% of the renewal cost is used.</p> <p></p> <p></p> </li> <li> <p>Annual Average Infrastructure Demand: This graph uses lifespan projections and renewal costs for a long-term outlook of infrastructure. This projection is theoretical and is not a realistic indication of spending timelines. A valuable output of this projection is an annualised infrastructure demand, indicated as a dotted line on the graph. This annualised value is obtained by dividing the renewal cost by the lifespan for each asset in the database and then summing the total. As lifespan and renewal cost data are updated, the annual infrastructure demand will update. The annual infrastructure demand could be lowered by committing to operations and maintenance programs to extend lifespans, deciding to rehabilitate versus replace, and more. The values shown in the graph are based on current $ values and the actual value of this average annual investment will increase over time with inflation.</p> <p></p> <p></p> </li> <li> <p>Risk By System: A risk value is obtained by combining Probability of Failure (PoF) and Consequence of Failure (CoF) values as per the following matrix. It is common asset management practice to shift the matrix in favour of the consequence of failure.</p> <p></p> <p></p> </li> <li> <p>Remaining Years by Renewal Cost by System: This section provides insights into the remaining operational years of a system based on its associated renewal cost. Gain a comprehensive understanding of the lifespan and associated costs of various systems within the context of renewal. Use this information for strategic planning and decision-making regarding system maintenance and financial allocation.</p> <p></p> <p></p> </li> <li> <p>Remaining Years by Renewal Cost by Risk: This section offers a detailed analysis of the remaining operational years of a system to its renewal cost and associated risk factors. Understand how the remaining lifespan of different systems correlates with their renewal costs and associated risks. Use this valuable information to prioritise and strategise system maintenance, considering both financial and risk considerations. Enhance decision-making processes by leveraging insights into the intersection of system longevity, renewal costs, and associated risks.</p> <p></p> <p></p> </li> </ol> </li> </ol> </li> </ol>"},{"location":"user/manual/forgot-password/","title":"MyCivitas","text":""},{"location":"user/manual/forgot-password/#forgot-password-user-manual","title":"Forgot Password User Manual","text":"<p>This user manual will guide the user through the process of resetting their password if they have forgotten it. Follow the step-by-step instructions below to initiate the password reset process:</p>"},{"location":"user/manual/forgot-password/#landing-page","title":"Landing Page","text":"<ol> <li>Sign-In button: Begin by accessing the sign-in page of the application. The user can do this by clicking on the <code>Sign In</code> button available at the centre of the page or can use the <code>Sign In</code> button available in the navigation bar. Upon clicking, the user will be redirected to the sign-in page.</li> </ol>"},{"location":"user/manual/forgot-password/#sign-in-page","title":"Sign In Page","text":"<ol> <li>Forgot Password?: On the sign-in page, click on the <code>Forgot Password?</code> link. This link is typically positioned below the sign-in button and is used specifically for initiating the password reset process.</li> </ol>"},{"location":"user/manual/forgot-password/#reset-password-page","title":"Reset  Password Page","text":"<ol> <li> <p>Email Address: After clicking the <code>Forgot Password?</code> link, you will be redirected to the <code>Reset Password</code> page. Here, the user will find an email field. Enter the email address associated with the account into the provided email field. This is the email address where the password reset instructions will be sent. Once you have entered your email address, verify that it is correct.</p> </li> <li> <p>Reset my password: After confirming the email address, click on the <code>Reset my password</code> button. This action will initiate the process of sending a password reset link to the provided email address.</p> <p></p> </li> </ol> <p>After clicking the <code>Reset my password</code> button, check the email inbox associated with the provided email address. Look for an email from the application containing instructions for resetting the account password. This email typically includes a unique link that the user can use to reset their password.</p>"},{"location":"user/manual/forgot-password/#reset-password-email","title":"Reset Password Email","text":"<ol> <li>Reset Password Link: Open the email received from the application and locate the password reset link. Click on the password reset link provided in the email. This link will direct the user to a page where they can create a new password for their account.</li> </ol>"},{"location":"user/manual/forgot-password/#reset-password-confirmation-page","title":"Reset Password Confirmation Page","text":"<p>Follow the instructions on the password reset page to securely create a new password for your account.</p> <p></p> <ol> <li> <p>New Password Field: This field is where the user needs to enter their desired new password. Ensure that the new password meets the specified criteria, such as minimum length and inclusion of special characters or numbers. Choose a strong and memorable password to enhance the security of the account.</p> </li> <li> <p>Confirm Password Field: Re-enter the new password in this field to confirm that it matches the one entered in the <code>New Password</code> field. This step helps prevent typographical errors and ensures that the user has correctly entered their new password.</p> </li> <li> <p>Change My Password Button: Click on this button to confirm and finalise the password change process. Before clicking, double-check that both the <code>New Password</code> and <code>Confirm Password</code> fields match and contain the intended password. Upon clicking, the system will process the password change request and update the account with the new password. After successfully changing the password, the user will be redirected to the reset password page.</p> </li> </ol>"},{"location":"user/manual/forgot-password/#password-reset-page","title":"Password Reset Page","text":"<ol> <li>Log In: Click on the <code>Log In</code> button, to redirect to the login page and log in to the account with a new password. For detailed documentation on the login page click here</li> </ol>"},{"location":"user/manual/forgot-password/#conclusion","title":"Conclusion","text":"<p>By following the steps outlined in this user manual, they can successfully initiate the password reset process and regain access to their account in case the user has forgotten their password. If the user encounters any issues or has questions during the process, please reach out to the application's support team for assistance.</p>"},{"location":"user/manual/landing-page/","title":"MyCivitas","text":""},{"location":"user/manual/landing-page/#mycivitas-landing-page-user-manual","title":"MyCivitas Landing Page User Manual","text":"<p>Welcome to MyCivitas - The Community Asset Management Solution</p>"},{"location":"user/manual/landing-page/#introduction","title":"Introduction","text":"<p><code>MyCivitas</code> is a comprehensive and user-friendly asset management platform tailored for small communities. The platform simplifies the process of recording, tracking, and managing assets in a centralised and efficient information system. Whether you are managing a homeowners association, a small municipality, or any community organisation, MyCivitas empowers users to take control of their assets with ease.</p>"},{"location":"user/manual/landing-page/#key-features","title":"Key Features","text":"<ul> <li> <p>All-Inclusive Platform: MyCivitas provides a one-stop solution for users with all community asset management needs. From property details to infrastructure, easily record and manage diverse assets on a single platform.</p> </li> <li> <p>User-Friendly Interface: MyCivitas' intuitive interface ensures that users, regardless of technical expertise, can navigate and utilise MyCivitas effortlessly. The platform is designed for accessibility and ease of use.</p> </li> <li> <p>Affordability: We understand the unique needs of small communities. MyCivitas offers affordable subscription plans, making robust asset management accessible to organisations of all sizes.</p> </li> <li> <p>Powerful Information System: MyCivitas is built on a powerful information system that allows the user to organise, search, and analyse the user's assets efficiently. Gain valuable insights to make informed decisions.</p> </li> </ul> <p></p>"},{"location":"user/manual/landing-page/#navigation","title":"Navigation","text":"<p>Use the navigation bar to explore various sections of the landing page. From understanding how MyCivitas works to exploring pricing and our story, everything is at the user's fingertips.</p> <p>Easily sign in if the user is an existing user or sign up to join the MyCivitas community. MyCivitas' user-friendly registration process ensures a quick and hassle-free onboarding experience.</p> <ol> <li> <p>MyCivitas: Click on <code>MyCivitas</code> to swiftly return to the top of the landing page.</p> </li> <li> <p>How Does MyCivitas Work?: Explore the functionalities and features of MyCivitas by clicking on this option.</p> <ul> <li>How Does MyCivitas Work?: MyCivitas revolves around a centralised map interface that serves as the core of the user's community asset management. This interactive map provides a visual representation of the community's assets and infrastructure, offering a user-friendly and intuitive way to navigate and interact with the information. Keep scrolling to delve deeper into the functionalities and features that MyCivitas offers for efficient asset management.</li> </ul> <p></p> <ul> <li>Capture Your Infrastructure: MyCivitas empowers users to build a comprehensive asset inventory with ease. Utilising powerful mapping software, MyCivitas' data capture system is integrated with QGIS, a robust and free open-source desktop application. Leverage this combination to seamlessly capture and record detailed information about the community's infrastructure, ensuring accuracy and efficiency in asset management.</li> </ul> <p></p> <ul> <li>Prioritize Your Assets: MyCivitas goes beyond simple asset management by incorporating advanced functionalities. MyCivitas' system conducts thorough risk assessment analysis and preventative maintenance planning on user's data. This means the user can prioritise assets based on their criticality, allowing for strategic decision-making and proactive planning to ensure the longevity and optimal performance of their community's infrastructure.</li> </ul> <p></p> <ul> <li>Support Your Capital Planning: MyCivitas equips the user with the tools to make well-informed decisions that support capital planning initiatives. By providing comprehensive data and insights, MyCivitas' platform empowers the user to strategically allocate resources, prioritise projects, and optimise their capital investments. Make informed decisions backed by accurate and up-to-date information for effective long-term planning and development.</li> </ul> <p></p> <ul> <li>Set Up Work Order: MyCivitas streamlines maintenance planning by enabling the user to set up work orders effortlessly. Whether it is ad hoc tasks or scheduled maintenance, the platform provides a user-friendly interface for planning and organising maintenance activities. Take advantage of this feature to ensure timely and efficient management of tasks, contributing to the overall maintenance and well-being of their community's assets.</li> </ul> <p></p> <ul> <li>We Are Here to Help At MyCivitas, we understand that the user's journey, from capturing data to presenting to the council, may come with questions or needs for assistance. Rest assured, the  MyCivitas team of experienced staff is readily available to support the user every step of the way. Please note that support is not included in the hosting fee. For small communities seeking ongoing assistance, a popular option is to sign up for an annual support contract. Feel free to reach out to us at <code>support@civitas.ca</code>, and we will connect with a dedicated team member near the user. The user's success with MyCivitas is our priority, and we are committed to providing the help users need to maximize the benefits of our platform.</li> </ul> <p></p> <ul> <li>Enjoy Asset Management MyCivitas invites users to practice effective and sustainable asset management on our affordable platform for the benefit of the community. Embrace the convenience, insights, and efficiency that MyCivitas offers, ensuring that their assets are managed with precision and care. By leveraging our platform, you contribute to the overall well-being and success of the community's infrastructure. Enjoy the journey of asset management with MyCivitas!</li> </ul> <p></p> </li> <li> <p>Pricing: Learn about our subscription plans and pricing details to choose the best fit for your needs.</p> <p></p> <p>Plans</p> <ul> <li> <p>Silver: Allowing up to 3 users in the organisation.</p> </li> <li> <p>Gold: Allowing up to 5 users in the organisation.</p> </li> <li> <p>Diamond: Allowing up to 10 users in the organisation.</p> </li> </ul> </li> <li> <p>Our Story: Discover the journey and mission behind MyCivitas. Get to know us better!</p> <p></p> <ul> <li> <p>Our Story: MyCivitas was created by LandInfo Technologies and Kartoza after we identified a need for an affordable and easy-to-use asset management system for small communities. The large proprietary offerings are overly complex and far too expensive for most small communities to be able to invest time into or afford.</p> </li> <li> <p>Open Source: MyCivitas is Open Source software. This means that the intellectual property behind the platform is freely available to everyone and developed by a community of users who care about solving the problems you deal with every day in your small community.</p> </li> </ul> </li> <li> <p>Documentation: Access detailed documentation for in-depth information on MyCivitas features and usage.</p> </li> <li> <p>SIGN IN: Click on the <code>SIGN IN</code> button, to access the MyCivitas account if you are already a registered user.</p> <p></p> <ul> <li>For detailed sign-in instructions, refer to the sign-in page documentation.</li> </ul> </li> <li> <p>SIGN UP: If the user is new, can take the opportunity to join the community by clicking the <code>SIGN UP</code> button. This option is also conveniently available in the middle of the page, just below the welcoming message.</p> <p></p> <ul> <li>For detailed sign-up instructions, refer to the sign-up page documentation.</li> </ul> </li> <li> <p>Message: Welcome to MyCivitas. Read the welcoming message that introduces MyCivitas as an affordable, user-friendly asset management platform for small communities.</p> </li> <li> <p>Open Source: Github Link: Explore our open-source projects on GitHub to stay connected with our community and contribute to exciting initiatives.</p> </li> <li> <p><code>Developed By</code> LandInfo Technologies: Visit the LandInfo Technologies website to learn more about the organisation behind MyCivitas.</p> </li> </ol> <p></p> <ol> <li><code>Developed By</code> Kartoza: Explore the Kartoza website for additional information about the organisation that developed MyCivitas.</li> </ol> <p></p> <p>By following these steps and providing the necessary information, users can successfully create an account on <code>MyCivitas</code>.</p>"},{"location":"user/manual/landing-page/#landing-page-after-login","title":"Landing Page After Login","text":""},{"location":"user/manual/landing-page/#navigation_1","title":"Navigation","text":"<p>Use the navigation bar to explore various sections of the landing page. From understanding how MyCivitas works to exploring pricing and our story, everything is at the user's fingertips.</p> <p>Easily sign in if the user is an existing user or sign up to join the MyCivitas community. MyCivitas' user-friendly registration process ensures a quick and hassle-free onboarding experience.</p> <p></p> <ol> <li> <p>MyCivitas: Click on <code>MyCivitas</code> to swiftly return to the top of the landing page.</p> </li> <li> <p>How Does MyCivitas Work?: Explore the functionalities and features of MyCivitas by clicking on this option.</p> <ul> <li>How Does MyCivitas Work?: MyCivitas revolves around a centralised map interface that serves as the core of the user's community asset management. This interactive map provides a visual representation of the community's assets and infrastructure, offering a user-friendly and intuitive way to navigate and interact with the information. Keep scrolling to delve deeper into the functionalities and features that MyCivitas offers for efficient asset management.</li> </ul> <p></p> <ul> <li>Capture Your Infrastructure: MyCivitas empowers users to build a comprehensive asset inventory with ease. Utilising powerful mapping software, MyCivitas' data capture system is integrated with QGIS, a robust and free open-source desktop application. Leverage this combination to seamlessly capture and record detailed information about the community's infrastructure, ensuring accuracy and efficiency in asset management.</li> </ul> <p></p> <ul> <li>Prioritize Your Assets: MyCivitas goes beyond simple asset management by incorporating advanced functionalities. MyCivitas' system conducts thorough risk assessment analysis and preventative maintenance planning on user's data. This means the user can prioritise assets based on their criticality, allowing for strategic decision-making and proactive planning to ensure the longevity and optimal performance of their community's infrastructure.</li> </ul> <p></p> <ul> <li>Support Your Capital Planning: MyCivitas equips the user with the tools to make well-informed decisions that support capital planning initiatives. By providing comprehensive data and insights, MyCivitas' platform empowers the user to strategically allocate resources, prioritise projects, and optimise their capital investments. Make informed decisions backed by accurate and up-to-date information for effective long-term planning and development.</li> </ul> <p></p> <ul> <li>Set Up Work Order: MyCivitas streamlines maintenance planning by enabling the user to set up work orders effortlessly. Whether it is ad hoc tasks or scheduled maintenance, the platform provides a user-friendly interface for planning and organising maintenance activities. Take advantage of this feature to ensure timely and efficient management of tasks, contributing to the overall maintenance and well-being of their community's assets.</li> </ul> <p></p> <ul> <li>We Are Here to Help: At MyCivitas, we understand that the user's journey, from capturing data to presenting to the council, may come with questions or needs for assistance. Rest assured, the  MyCivitas team of experienced staff is readily available to support the user every step of the way. Please note that support is not included in the hosting fee. For small communities seeking ongoing assistance, a popular option is to sign up for an annual support contract. Feel free to reach out to us at <code>support@civitas.ca</code>, and we will connect with a dedicated team member near the user. The user's success with MyCivitas is our priority, and we are committed to providing the help users need to maximize the benefits of our platform.</li> </ul> <p></p> <ul> <li>Enjoy Asset Management: MyCivitas invites users to practice effective and sustainable asset management on our affordable platform for the benefit of the community. Embrace the convenience, insights, and efficiency that MyCivitas offers, ensuring that their assets are managed with precision and care. By leveraging our platform, you contribute to the overall well-being and success of the community's infrastructure. Enjoy the journey of asset management with MyCivitas!</li> </ul> <p></p> </li> <li> <p>Pricing: Learn about our subscription plans and pricing details to choose the best fit for your needs.</p> <p></p> <p>Plans</p> <ul> <li> <p>Silver: Allowing up to 3 users in the organisation.</p> </li> <li> <p>Gold: Allowing up to 5 users in the organisation.</p> </li> <li> <p>Diamond: Allowing up to 10 users in the organisation.</p> </li> </ul> </li> <li> <p>Our Story: Discover the journey and mission behind MyCivitas. Get to know us better!</p> <p></p> <ul> <li> <p>Our Story: MyCivitas was created by LandInfo Technologies and Kartoza after we identified a need for an affordable and easy-to-use asset management system for small communities. The large proprietary offerings are overly complex and far too expensive for most small communities to be able to invest time into or afford.</p> </li> <li> <p>Open Source: MyCivitas is Open Source software. This means that the intellectual property behind the platform is freely available to everyone and developed by a community of users who care about solving the problems you deal with every day in your small community.</p> </li> </ul> </li> <li> <p>Documentation: Access detailed documentation for in-depth information on MyCivitas features and usage.</p> </li> <li> <p>Community Map: Navigate through an interactive map interface, allowing the user to explore metadata, geographic data, and available records visually. Effortlessly manage and visualise their community's assets. For detailed documentation on the <code>Community Map</code> click here</p> </li> <li> <p>View Table: Access a detailed table view of the user's community's assets. Utilise search and filter options for efficient data exploration and management. For detailed documentation on the <code>View Table</code> click here</p> </li> <li> <p>Dashboard: Gain insights into the user's community's asset metrics with an informative dashboard. View linked communities and click for detailed information. For detailed documentation on the <code>Dashboard</code> click here</p> </li> <li> <p>Work Orders: Efficiently manage work orders for your community. Create, edit, and track the progress of tasks seamlessly. For detailed documentation on the <code>Work Order</code> click here</p> </li> <li> <p>Profile Icon: Click on the <code>Profile</code> icon at the top right of the page to access the profile-related functionalities where the user can view or edit the details.</p> <p></p> </li> <li> <p>Message: Welcome to MyCivitas. Read the welcoming message that introduces MyCivitas as an affordable, user-friendly asset management platform for small communities.</p> </li> <li> <p>Open Source: Github Link: Explore our open-source projects on GitHub to stay connected with our community and contribute to exciting initiatives.</p> </li> <li> <p><code>Developed By</code> LandInfo Technologies: Visit the LandInfo Technologies website to learn more about the organisation behind MyCivitas.</p> </li> </ol> <p></p> <ol> <li><code>Developed By</code> Kartoza: Explore the Kartoza website for additional information about the organisation that developed MyCivitas.</li> </ol> <p></p> <p>By following these steps and providing the necessary information, users can successfully create an account on <code>MyCivitas</code>.</p>"},{"location":"user/manual/logout/","title":"MyCivitas","text":""},{"location":"user/manual/logout/#logout-user-manual","title":"Logout User Manual","text":"<p>Logging out of <code>MyCivitas</code> is a simple process that enhances the security of the user's session. Here is a quick guide to help the user navigate through the logout functionality.</p> <ol> <li>Profile Icon: Locate the profile icon situated at the top right corner of the <code>MyCivitas</code> platform.</li> </ol> <p></p> <p>Click on the profile icon to reveal a dropdown menu with various user-related options.</p> <p></p> <ol> <li>Logout: Within the dropdown menu, click on the <code>Logout</code> option. When the user clicks on this the user will be successfully logged out of their MyCivitas account.</li> </ol> <p>Logging out is essential for maintaining the security of the user's account, especially if the user is using a shared or public computer.</p>"},{"location":"user/manual/profile/","title":"MyCivitas","text":""},{"location":"user/manual/profile/#profile-options-user-manual","title":"Profile Options User Manual","text":"<p>Explore and manage a user's <code>MyCivitas</code> profile efficiently with the following user-friendly guide.</p> <p></p> <ol> <li>Profile Icon: Locate the profile icon situated on the top right corner of the <code>MyCivitas</code> platform. Click on the profile icon to unveil a dropdown menu with multiple options related to the profile.</li> </ol>"},{"location":"user/manual/profile/#profile-options","title":"Profile Options","text":"<ol> <li> <p>User Email: Click on the <code>User Email</code> option to seamlessly view your profile details. By selecting this option, you will be directed to the profile page.</p> <p></p> <ul> <li>By default the profile details are displayed the user can click on the <code>Organisation</code> to view the organisation details</li> </ul> </li> <li> <p>Admin: For super users with administrative privileges, the <code>Admin</code> option provides access to the admin panel. Click on <code>Admin</code> to open the admin panel and manage advanced settings.</p> </li> <li> <p>Organisation: Select <code>Organisation</code> to gain insights into the details of the organisation the user is associated with. Clicking on this option will redirect you to the organisation page.</p> <p></p> <ol> <li> <p>Organisation Name: Click on the organisation name to view more detailed information about it, including its owner and creation date.</p> <p></p> <ol> <li> <p>Profile: By default, the organisation's <code>Profile</code> page will open. To navigate to the Community Map, click on the <code>Open Community Map</code> button. To view the owner's profile, click on the clickable owner name.</p> </li> <li> <p>Manage Access: Click on the <code>Manage Access</code> to go to the organisation manage access page where the owner can manage the access of associate users.</p> <p></p> <ol> <li> <p>Invite User: Click on this button to invite new members to the organisation. When the user clicks on this button the invite user form opens.</p> <p></p> <ul> <li>Provide the <code>Email</code> address of the person you want to add as a member in the input field.</li> <li>Choose their <code>Role</code> from the dropdown. The available roles are <code>CMMS Operator</code>, <code>CMMS Viewer</code>, <code>Dashboard Viewer</code>, <code>Manager</code> and <code>Operations Admin</code>.</li> <li>Click on the <code>Invite</code> button, to invite the user.</li> </ul> </li> <li> <p>User Access Details The owner can update the user's role by selecting from the dropdown and also can delete the user from the organisation by clicking on the <code>Delete</code> icon.</p> <p></p> </li> </ol> </li> <li> <p>Work Order Scheduler: Click on the <code>Work Order Scheduler</code>, to go to the organisation work order scheduler page. This is where the user can create, view or edit work orders.</p> <p></p> <ol> <li> <p>Create New Scheduler: Click on this button to create a new scheduler. When the user clicks on this button the <code>Create New Scheduler</code> form opens.</p> <p></p> <ul> <li> <p>Asset Type: Choose the relevant asset type from the dropdown list.</p> </li> <li> <p>Activity Summary: Provide a brief summary of the activity associated with the scheduler.</p> </li> <li> <p>Activity Description: Add a detailed description of the activity. Be as descriptive as possible and include all relevant details.</p> </li> <li> <p>Recurring Ticket By: Choose the recurrence pattern from the dropdown list. There are two dropdowns with different options based on the selected recurrence type.</p> <p>Weekly</p> <p></p> <p>Monthly</p> <p></p> <p>Yearly</p> <p></p> </li> <li> <p>Assign To (Optional): Optionally, choose a person to assign the scheduler from the dropdown list.</p> </li> </ul> <p>Save and Close button: Two buttons are available at the bottom of the form.</p> <ul> <li> <p>Click <code>Save</code> to save the details and create the new scheduler.</p> </li> <li> <p>Click <code>Close</code> to exit the form without saving changes.</p> </li> <li> <p>Ensure all mandatory fields are filled to successfully create the scheduler.</p> </li> <li> <p>Review all the entries before saving to ensure accuracy.</p> </li> </ul> </li> <li> <p>See Schedule Templates: Click on this button, to see the schedule templates.</p> </li> <li> <p>Ticket Icon: Click on the <code>Ticket</code> Icon, to view the ticket.</p> <p></p> </li> <li> <p>Active/Inactive button: This button allows users to toggle the status of a ticket between <code>Active</code> and <code>Inactive</code>.</p> </li> <li> <p>Edit button: Click on this button to edit the particular scheduler. When the user clicks on this button the edit scheduler form will open to edit the scheduler.</p> </li> </ol> </li> </ol> </li> </ol> </li> <li> <p>Settings: Utilise the <code>Settings</code> option to make adjustments to the user's profile details. Click on <code>Settings</code> to go to the edit profile page.</p> <p></p> <ol> <li> <p>Edit Profile: The <code>Edit Profile</code> page is open by default the user can update their <code>First name</code> and <code>Last name</code>. After making the necessary changes, click the <code>Save</code> button to save the updated profile information.</p> </li> <li> <p>Change Avatar: Select <code>Change Avatar</code> to go to edit avatar page. The user can update the profile picture here. Click on the <code>Choose File</code> button to select a new avatar file. After selecting the file, click the <code>Save</code> button to save the changes.</p> <p></p> </li> <li> <p>Edit Password: Select <code>Edit Password</code> to go to the edit password page. Enter the new password in the <code>Password</code> and <code>Confirm Password</code> fields. Click the <code>Save</code> button to update the password.</p> <p></p> </li> </ol> </li> <li> <p>Logout: Click on the <code>Logout</code> button to logout from the account. For detailed documentation on logout click here.</p> </li> </ol>"},{"location":"user/manual/sign-in/","title":"MyCivitas","text":""},{"location":"user/manual/sign-in/#sign-in-page-user-manual","title":"Sign-In Page User Manual","text":"<p>Welcome to the <code>Sign-In</code> page of MyCivitas! This page provides a secure gateway for registered users to access their accounts. To sign in and explore the features of the platform, follow the simple steps outlined below. If the user is new here, they can go to the <code>Sign-Up</code> page to create a new account.</p> <p></p> <ol> <li>Sign-In Button: Find the <code>Sign-In</code> button in the top-right corner of the page. Click on this button to navigate to the sign-in page.</li> </ol>"},{"location":"user/manual/sign-in/#sign-in-page","title":"Sign-In Page","text":"<ol> <li> <p>Sign-In Form: The user needs to provide the required information for signing into their account by filling out this form.</p> <p>Sign-In Form Fields:</p> <ul> <li> <p>Email Address: Enter your registered email address in this field.</p> </li> <li> <p>Password: Input your account password in this field.</p> </li> <li> <p>Eye Icon: Click the <code>Eye</code> icon on the password field to toggle between showing and hiding the password for enhanced security.</p> </li> </ul> </li> <li> <p>Sign-In Button: After entering the required information, click the <code>Sign-In</code> button to log in to your account.</p> </li> </ol> <p>By following these simple steps, the user can access their account securely.</p> <ol> <li>Forgot Password: The user can reset their pass by using the <code>Forgot Password</code> link. For detailed instructions on the reset password functionality click here</li> </ol>"},{"location":"user/manual/sign-up/","title":"MyCivitas","text":""},{"location":"user/manual/sign-up/#sign-up-page-documentation","title":"Sign-Up Page Documentation","text":"<p>Welcome to the community! The <code>SIGN-UP</code> page is the gateway to unlocking a world of possibilities. Whether the user is a seasoned professional or a passionate enthusiast, MyCivitas offers a diverse range of features tailored to meet the user's needs.</p> <p>To get started, simply click on the <code>SIGN-UP</code> button in the top right corner. Once there, the user will find a user-friendly form designed to capture essential details and tailor user experience.</p>"},{"location":"user/manual/sign-up/#sign-up-page","title":"Sign Up Page","text":"<p>The sign-up process is divided into two main sections:</p> <ol> <li> <p>Select Your Community and Create Your Account: In this section, the user needs to choose their community from a dropdown menu. And needs to provide the following information:</p> <ul> <li> <p>Email Address: Enter your valid email address.</p> </li> <li> <p>First Name: Your first name.</p> </li> <li> <p>Last Name: Your last name.</p> </li> <li> <p>Password: Set a secure password.</p> </li> <li> <p>Confirm Password: Confirm the password entered above.</p> </li> </ul> </li> <li> <p>Billing Information: This section requires billing details:</p> <ul> <li> <p>Province: Select your province from the dropdown menu.</p> </li> <li> <p>Country: Choose your country from the dropdown menu.</p> </li> </ul> </li> <li> <p>Create Account Button: Click the <code>Create Account</code> button to submit the form and create your account.</p> </li> </ol>"},{"location":"user/manual/user-role/","title":"MyCivitas","text":""},{"location":"user/manual/user-role/#user-roles-documentation","title":"User Roles Documentation","text":"<p>User Roles Overview: Provide a comprehensive overview of different user roles within the system. Clearly define each role and describe the specific responsibilities, permissions, and access levels associated with each role. This section should serve as a foundation for users to understand their position within the system and the scope of actions they can perform. Include any relevant information about role hierarchies or dependencies, and highlight the importance of adhering to assigned roles for efficient and secure system operation.</p> <ol> <li> <p>CMMS Operator: The CMMS Operator role possesses the capability to manage work orders efficiently, including accepting or rejecting them, assigning or editing work order details, assigning tasks to operators, signing off on completed work orders, and accessing reports with customisable filters.</p> <p></p> <ul> <li> <p>Accept/Reject work order: Streamline workflow management by providing the ability to accept or reject work orders. This ensures clear communication and efficient handling of task assignments.</p> </li> <li> <p>Assign/Edit work order info and dates assign to operator: Dynamically manage work orders by assigning or editing key information such as details and dates. Facilitate a smooth workflow by assigning tasks to designated operators for streamlined task execution.</p> </li> <li> <p>Sign-off work order when completed: Enhance accountability and task completion tracking by allowing users to sign off on work orders upon successful completion. This contributes to accurate record-keeping and progress monitoring.</p> </li> <li> <p>View reports and set filters: Access valuable insights into work order data by viewing detailed reports. Utilise flexible filtering options to customise data views based on specific criteria. This feature empowers informed decision-making and performance analysis within the system.</p> </li> </ul> </li> <li> <p>CMMS Viewer: The CMMS Viewer role allows for comprehensive observation, including viewing work orders, reports, and setting filters, but with limitations as it does not have editing privileges.</p> <p></p> <ul> <li> <p>View work orders, reports, and set filters: CMMS Viewers can access and observe work orders and reports within the system, utilizing filter options to tailor the displayed data according to specific criteria.</p> </li> <li> <p>Cannot edit: This role does not have editing capabilities, ensuring that CMMS Viewers can review and analyze data without the ability to make alterations or modifications to the work orders or related information.</p> </li> </ul> </li> <li> <p>Dashboard Viewer: The Dashboard Viewer role enables users to view and query maps and reports, along with the flexibility to set filters for a customised and detailed perspective.</p> <p></p> <ul> <li> <p>View/Query maps and reports: Dashboard Viewers have the ability to visually explore maps and review reports within the dashboard, providing an interactive and informative experience.</p> </li> <li> <p>Set filters: This role allows users to set filters, tailoring the displayed information based on specific criteria. This feature enhances the user's ability to focus on relevant data for a more targeted analysis.</p> </li> </ul> </li> <li> <p>Manager: The Manager role holds comprehensive control, with the ability to add new users, set user rights, including full user rights, assign user accounts for the CMMS team, create, edit, or delete work orders, assign work orders to CMMS operators, and view all reports with customisable filters.</p> <p></p> <ul> <li> <p>Add new users: Managers can actively expand the team by adding new users to the system.</p> </li> <li> <p>Set user rights for all other users: This role empowers managers to define and manage user rights for all other users within the system.</p> </li> <li> <p>Have full user rights: Managers enjoy full user rights, allowing unrestricted access to and control over the functionalities available in the system.</p> </li> <li> <p>Assign user accounts for CMMS team: Managers can efficiently allocate user accounts within the CMMS team, ensuring a structured and organised user management process.</p> </li> <li> <p>Create, edit, or delete work orders: This role provides the authority to create new work orders as well as edit or delete existing ones.</p> </li> <li> <p>Assign work order to CMMS operator: Managers can assign specific work orders to CMMS operators, ensuring efficient task distribution.</p> </li> <li> <p>View all reports and set filters: Managers have the privilege to access all reports within the system and utilise filters for a customised and detailed analysis.</p> </li> </ul> </li> <li> <p>Operations Admin: The Operations Admin role empowers users to create, edit, and delete work orders, assign work orders to CMMS operators, and view all reports with customisable filters, ensuring efficient and comprehensive oversight of operational tasks.</p> <p></p> <ul> <li> <p>Create, edit, or delete work orders: Operations administrators have the authority to initiate new work orders as well as edit or delete existing ones.</p> </li> <li> <p>Assign work orders to the CMMS operator: This role allows the assignment of specific work orders to CMMS operators, facilitating organised task distribution.</p> </li> <li> <p>View All Reports and Set Filters: Operations administrators can access and review all reports within the system, utilising filters for a tailored and detailed analysis.</p> </li> </ul> </li> </ol>"},{"location":"user/manual/view-table/","title":"MyCivitas","text":""},{"location":"user/manual/view-table/#view-table-page-user-manual","title":"View Table Page User Manual","text":""},{"location":"user/manual/view-table/#overview","title":"Overview","text":"<p>Welcome to the View Table page, a powerful tool designed to enhance the user's data exploration experience. This user manual will walk the user through the various features available on this page, helping the user make the most of the tabular data presentation.</p> <p></p> <ol> <li>View Table: Click on the <code>View Table</code> option available in the navigation menu. Upon clicking this link, the user will be redirected to the <code>View Table</code> page.</li> </ol>"},{"location":"user/manual/view-table/#view-table-page","title":"View Table Page","text":"<ol> <li> <p>Search: Effortlessly find specific asset data using the search feature. Insert relevant keywords and click on the search icon to initiate the search process.</p> <p></p> </li> <li> <p>Choose Column Filter: The <code>Choose Column Filter</code> feature allows the user to tailor their data view based on their preferences. Here's a guide on the available options:</p> <ol> <li> <p>Default: The <code>Default</code> option displays the default set of columns. It provides a standard view of the table with commonly used columns.</p> <p></p> </li> <li> <p>Detailed: The <code>Detailed</code> option expands the user's view by showing all available columns. Get a comprehensive look at the data with this detailed display.</p> <p></p> </li> <li> <p>Custom: Opt for customisation with the <code>Custom</code> option. When selected, the <code>Select Columns</code> dropdown and <code>Apply Filter</code> button will appear.</p> <p></p> <ol> <li> <p>Select Columns Dropdown: Click on the dropdown to reveal a list of all available columns. The user can choose the columns they want to display in the customised view.</p> </li> <li> <p>Selected Columns: Shows the selected columns by the user.</p> </li> <li> <p>Apply Button: After selecting the preferred columns, click the <code>Apply Filter</code> button. The table will update to reflect the customised column selection.</p> </li> </ol> <ul> <li>Filtered columns </li> </ul> </li> </ol> </li> <li> <p>Column Search Option: Refine the data exploration within each column. Find a dedicated search option below the column name and search for specific data within each column effortlessly.</p> <p></p> </li> <li> <p>Magnifying Glass Icon: Explore asset locations directly from the table. Locate the magnifying glass icon in front of each row. Click on the icon to view the location of the asset on the map.</p> <p></p> </li> <li> <p>Pagination Option: Efficiently navigate through different pages of the table. Click on the page number option to switch between data pages. Easily access information from various sections of the dataset.</p> </li> <li> <p>Import to CSV Button: Download table data for further analysis or record-keeping. Click on the <code>Import to CSV</code> button to download data in <code>CSV</code> format.</p> </li> <li> <p>Close Button: Conclude the table view session with a simple click. Use the <code>Close</code> button to exit the table view.</p> </li> </ol> <p>Explore these user-friendly features to streamline the data analysis process and gain valuable insights.</p>"},{"location":"user/manual/work-order/","title":"MyCivitas","text":""},{"location":"user/manual/work-order/#work-order-page-user-manual","title":"Work Order Page User Manual","text":"<p>Welcome to the <code>Work Order</code> page, a central hub for managing and tracking work orders. This user manual will guide the user through the features available on this page.</p> <p></p> <ol> <li>Work Order: Click on the <code>Work Order</code> option available in the navigation menu. Upon clicking, the user will be redirected to the Work Order page. By default, the Work Order table will be displayed. The table provides an overview of all existing tickets, including key details such as status, assignee, and due date.</li> </ol>"},{"location":"user/manual/work-order/#work-order-page","title":"Work Order Page","text":""},{"location":"user/manual/work-order/#table-section","title":"Table Section","text":"<ol> <li> <p>Table: The table section displays the list of tickets. Each row represents a ticket. It includes columns such as <code>Ticket</code>, <code>Type</code> <code>Priority</code>, <code>Status</code>, <code>Created</code>, <code>Operator</code>, <code>Submitter</code>, <code>Start Date</code>, and <code>Due Date</code>. Each column has an up/down arrow to indicate the option to display the list in ascending or descending order.</p> </li> <li> <p>Show Entries Dropdown: Utilise the <code>Show Entries</code> dropdown to choose the number of entries as per user convenience to display on the page. Options include 10, 25, 50, and 100 entries, allowing for customised viewing.</p> <p></p> </li> <li> <p>Search Option: Use the search functionality to find a specific ticket efficiently. Insert relevant keywords in the search bar to narrow down the search results.</p> <p></p> </li> <li> <p>Ticket Name: Click on the ticket name within the table to:</p> <ul> <li>View detailed information about the ticket.</li> <li>Edit the ticket details.</li> <li>Delete the ticket if needed.</li> </ul> <p>Upon clicking, the user will be redirected to the <code>Work Order</code> Edit page for further actions.</p> <p></p> <p>Welcome to the <code>Work Order Edit</code> page, where the user can fine-tune and manage the details of their work orders.</p> <ol> <li>Location on the Map: This section displays the specific location on the map for which the work order ticket is created. Gain visual insights into the geographical context of the work order.</li> <li> <p>Plus/Minus Icons: Utilise the <code>Plus/Minus</code> icons for zooming in and out on the map. Adjust the map view to focus on specific details or get a broader perspective.</p> </li> <li> <p>Menu Icon: Click on the <code>Menu</code> icon to access options for editing or deleting the work order description. Efficiently manage and modify the work order details as needed.</p> </li> <li> <p>Comment the Ticket Section: In this section, the user can:</p> <ul> <li> <p>Add Comment: Share additional information or updates related to the work order. Attach files by clicking the designated area or dragging and dropping files. The user can insert ticket and queue details in the message for clarity.</p> </li> <li> <p>Add Time Spent: Specify the time spent on the work order in hours and minutes.</p> </li> <li> <p>Status: Choose the status of the work order from options like <code>New</code>, <code>Accept</code>, or <code>Reject</code>.</p> </li> </ul> </li> <li> <p>Save &amp; Comment Button: Click the <code>Save &amp; Comment</code> button to save any changes made and add comments to the work order. Ensure the updates are captured and visible for future reference.</p> </li> <li> <p>Edit Button: Click on the <code>Edit</code> button to open the <code>Edit Ticket Form</code>.</p> <p></p> <p>The user can update the following fields as needed: - Title - Description - Priority (dropdown selection) - Start Date - Due Date - Operator (dropdown selection) - Expected Time to Complete Task (hours and minutes)</p> <ol> <li> <p>Cancel Button: Use the <code>Cancel</code> button to discard any changes made in the Edit Ticket Form. Ideal for reverting back to the original ticket details without saving modifications.</p> </li> <li> <p>Save Button: Click the <code>Save</code> button to confirm and save the updated information. Ensure that the changes are recorded and reflected in the work order details.</p> </li> </ol> </li> <li> <p>Delete: The user can delete the ticket using the <code>Delete</code> button. When the user clicks on the button, a confirmation popup opens, ensuring the user's intention before proceeding with the deletion of the ticket.</p> </li> </ol> </li> <li> <p>Previous/Next Button: Navigate through multiple pages of the <code>Work Order</code> table using the <code>Previous</code> and <code>Next</code> buttons. Easily access different sets of work orders based on the user's viewing preferences.</p> </li> </ol>"},{"location":"user/manual/work-order/#timeline-section","title":"Timeline Section","text":"<p>Explore the <code>Timeline</code> section, a central hub for navigating through various tickets and their details. Here's the guide to efficiently use this feature.</p> <p></p> <ol> <li> <p>Timeline: The <code>Timeline</code> shows all activities related to a specific Work Order. In the middle of the page, the user will find the title of the ticket along with its description. The created date of the ticket is also prominently displayed.</p> </li> <li> <p>View Ticket: A <code>View Ticket</code> link is available, providing a quick way to access the full details of the displayed ticket. When the user clicks on this link they will redirected to the edit ticket page.</p> <p></p> </li> <li> <p>Useful feature: The user can use these features for better visualisation.</p> <ul> <li> <p>Zoom In Icon Click on this icon to <code>Zoom In</code> the timeline graph line.</p> <p></p> </li> <li> <p>Zoom Out Icon Click on this icon to <code>Zoom Out</code> the timeline graph line.</p> <p></p> </li> <li> <p>Go Back Icon Click on this icon to <code>Go Back</code> to the start point of the timeline graph line.</p> <p></p> </li> </ul> </li> <li> <p>Status: This shows the status of the ticket and the assigned person's email.</p> </li> </ol>"},{"location":"user/manual/work-order/#reports-statistics-section","title":"Reports &amp; Statistics Section","text":"<p>Unlock valuable insights into ticket management with the Reports &amp; Statistics section. Here's a comprehensive guide to navigating and interpreting the presented information.</p> <p></p> <ol> <li> <p>Report &amp; Statistics: This section provides the average number of days until a ticket is closed for all tickets. Additionally, it offers insights into the average number of days until ticket closure specifically for tickets opened in the last 60 days. Click <code>here</code> to delve into more granular data.</p> <ul> <li> <p>Queue (Clickable): Click on the queue type to explore detailed information about tickets in that specific category.</p> </li> <li> <p>New: Number of tickets in the <code>New</code> status.</p> </li> <li> <p>Open: Number of tickets in the <code>Open</code> status.</p> </li> <li> <p>Resolved: Number of tickets in the <code>Resolved</code> status.</p> </li> <li> <p>Closed: Number of tickets in the <code>Closed</code> status.</p> </li> <li> <p>Time Spent: Insights into the cumulative time spent on all tickets.</p> </li> </ul> </li> <li> <p>Reports By User:  Explore detailed insights into ticket management by utilising the <code>Reports by User</code> section. Choose from four distinct options to view both table and chart representations.</p> <ol> <li> <p>By Priority: Click on <code>By Priority</code> to access a comprehensive table and chart showcasing ticket distribution based on priority. Understand the distribution of tickets categorised by their priority levels.</p> <p></p> </li> <li> <p>By Queue: Opt for <code>By Queue</code> to delve into a detailed breakdown of tickets across different queues. Explore the distribution of tickets within each queue, providing insights into workload distribution.</p> <p></p> </li> <li> <p>By Status: Select <code>By Status</code> to view an informative table and chart displaying the distribution of tickets based on their status. Gain insights into the current status distribution of tickets within the system.</p> <p></p> </li> <li> <p>By Month: Click on <code>By Month</code> to access a detailed breakdown of ticket data month-wise. Explore how ticket-related metrics vary across different months.</p> <p></p> </li> </ol> </li> <li> <p>Reports By Queue: Gain valuable insights into ticket distribution across different queues with the Reports by Queue section. Choose from three distinct options to view both table and chart representations.</p> <ol> <li> <p>By Priority: Click on <code>By Priority</code> to access a comprehensive table and chart showcasing ticket distribution based on priority within each queue. Understand the priority-wise distribution of tickets for efficient workload management.</p> <p></p> </li> <li> <p>By Status: Opt for <code>By Status</code> to view an informative table and chart displaying the distribution of tickets based on their status within each queue. Gain insights into the current status distribution of tickets for each queue.</p> <p></p> </li> <li> <p>By Month: Select <code>By Month</code> to access a detailed breakdown of ticket data month-wise within each queue. Explore how ticket-related metrics vary across different months for each queue. This can help you identify any seasonal trends or patterns that may impact your service delivery.</p> <p></p> </li> </ol> </li> </ol>"},{"location":"user/quickstart/","title":"MyCivitas","text":""},{"location":"user/quickstart/#mycivitas-quickstart","title":"MyCivitas Quickstart","text":""},{"location":"user/quickstart/#accessing-the-platform","title":"Accessing the Platform","text":"<p>Navigate to the Home Page of the site, where you will be greeted by the landing page.</p> <p></p>"},{"location":"user/quickstart/#registration-and-logging-in","title":"Registration and Logging In","text":"<p>Navigate to the <code>SIGN UP</code> button on the home page and fill in your details in the space provided.</p> <p></p> <p>You will be redirected to the registration page where you will be prompted to fill in some information. Namely; Your community name (choose from the dropdown), first name, Last name (surname), Email address you would like associated with your account, and the password you will use to log in to the platform. Additionally, you need to select the <code>Province</code> and the <code>Country</code>. Once you have filled in all of the information click on the <code>Create Account</code> button at the bottom of the registration window to create an account on MyCivitas.</p>"},{"location":"user/quickstart/#logging-in","title":"Logging in","text":"<p>Navigate to the home page of the platform and click on either of the two <code>SIGN IN</code> buttons.</p> <p></p> <p>You will then be redirected to the <code>Sign In</code> page. Fill in the email address you used for registration and your password. Then click on <code>Sign In</code> button to sign in on MyCivitas.</p> <p>Once you log in you can explore the different features of the platform by clicking on the tabs available in the navigation.</p> <p>You can check the user manual for the detailed documentation of every tab. To go to the user manual you can click here</p> <p>To go to the user guide you can click here</p>"}]}